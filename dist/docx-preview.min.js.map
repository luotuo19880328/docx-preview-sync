{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/mathml.scss","webpack://docx/./node_modules/css-loader/dist/runtime/api.js","webpack://docx/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://docx/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/vml/vml.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/compat get default export","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/runtime/jsonp chunk loading","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:\\\"\\\";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/mathml.scss\"],\"names\":[],\"mappings\":\"AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA\",\"sourcesContent\":[\"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";\\r\\n\\r\\nmath {\\r\\n    display: inline-block;\\r\\n    line-height: initial;\\r\\n}\\r\\n\\r\\nmfrac {\\r\\n    display: inline-block;\\r\\n    vertical-align: -50%;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:first-child {\\r\\n        border-bottom: solid thin currentColor;\\r\\n    }\\r\\n\\r\\n    &>* {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsub {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: sub;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsup {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: super;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunder, mover, munderover {\\r\\n    display: inline-flex;\\r\\n    flex-flow: column nowrap;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:not(:first-child) {\\r\\n        font-size: smaller;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunderover {\\r\\n    &>:last-child { order: -1; }\\r\\n}\\r\\n\\r\\nmroot, msqrt {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    border-top: solid thin currentColor;  \\r\\n    margin-top: 0.5px;\\r\\n    vertical-align: middle;  \\r\\n    margin-left: 1ch; \\r\\n\\r\\n    &:before {\\r\\n        content: \\\"\\\";\\r\\n        display: inline-block;\\r\\n        position: absolute;\\r\\n        width: 1ch;\\r\\n        left: -1ch;\\r\\n        top: -1px;\\r\\n        bottom: 0;\\r\\n        background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E\\\");\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n// \r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    async load(): Promise<any> {\r\n\t\tthis.rels = await this._package.loadRelationships(this.path);\r\n\r\n\t\tconst xmlText = await this._package.load(this.path);\r\n\t\tconst xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n\t\tif (this._package.options.keepOrigin) {\r\n\t\t\tthis._xmlDocument = xmlDoc;\r\n\t\t}\r\n\r\n\t\tthis.parseXml(xmlDoc.firstElementChild);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties, SectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\nimport { parseVmlElement } from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\tignoreWidth: false,\r\n\t\t\tdebug: false,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tvar result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\r\n\t\tvar background = xml.element(xmlDoc, \"background\");\r\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tvar result = {};\r\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tvar children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\r\n\t\t\tcase \"table\": result.target = \"table\"; break;\r\n\t\t\tcase \"character\": result.target = \"span\"; break;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\tvar type = xml.attr(node, \"type\");\r\n\t\tvar selector = \"\";\r\n\t\tvar modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar mapping = {};\r\n\t\tvar bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tvar pict = xml.element(elem, \"pict\");\r\n\t\tvar shape = pict && xml.element(pict, \"shape\");\r\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tvar result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{ \r\n\t\t\ttype: DomType.Inserted, \r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{ \r\n\t\t\ttype: DomType.Deleted, \r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n\t\tvar anchor = xml.attr(node, \"anchor\");\r\n\t\tvar relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});//.replace(\" \", \"\\u00A0\"); // TODO\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tvar run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\r\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tvar choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\r\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n\t\tvar isAnchor = node.localName == \"anchor\";\r\n\r\n\t\t//TODO\r\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode)\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\r\n\t\t\t\t\t\tif (offsetNode)\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\twrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tvar g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g)\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wrapType == \"wrapTopAndBottom\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\tif (posX.align) {\r\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (wrapType == \"wrapNone\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\tif (posX.offset)\r\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\tif (posY.offset)\r\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t}\r\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\r\n\t\tvar blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tvar spPr = xml.element(elem, \"spPr\");\r\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (var n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tvar val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\tvar ascii = xml.attr(node, \"ascii\");\r\n\t\tvar asciiTheme = values.themeValue(node, \"asciiTheme\");\r\n\r\n\t\tvar fonts = [ascii, asciiTheme].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0)\r\n\t\t\tstyle[\"font-family\"] = fonts;\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tvar left = xml.lengthAttr(node, \"left\");\r\n\t\tvar start = xml.lengthAttr(node, \"start\");\r\n\t\tvar right = xml.lengthAttr(node, \"right\");\r\n\t\tvar end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tvar before = xml.lengthAttr(node, \"before\");\r\n\t\tvar after = xml.lengthAttr(node, \"after\");\r\n\t\tvar line = xml.intAttr(node, \"line\", null);\r\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE)\r\n\t\t\t\tcb(<Element>n);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tvar v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tvar val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tvar type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\": break;\r\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\r\n\t\t\tcase \"auto\": return \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\": return \"left\";\r\n\t\t\tcase \"center\": return \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\": return \"right\";\r\n\t\t\tcase \"both\": return \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\": return \"sub\";\r\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\": return \"baseline\";\r\n\t\t\tcase \"top\": return \"top\";\r\n\t\t\tcase \"center\": return \"middle\";\r\n\t\t\tcase \"bottom\": return \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n\tmath: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: \"\" },\r\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n\r\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if(elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch(elem.localName) {\r\n        case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    props?: Record<string, any>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    props?: Record<string, any>;\r\n\r\n    className?: string;\r\n    styleName?: string;\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    start: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n\tstyleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if(parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Borders, parseBorders } from \"./border\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \r\n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { WordDocument } from './word-document';\r\n\r\nimport { DocumentParser } from './document-parser';\r\n\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    className: string;                      //class name/prefix for default and document style classes\r\n    inWrapper: boolean;                     //enables rendering of wrapper around document content\r\n    ignoreWidth: boolean;                   //disables rendering width of page\r\n    ignoreHeight: boolean;                  //disables rendering height of page\r\n    ignoreFonts: boolean;                   //disables fonts rendering\r\n    breakPages: boolean;                    //enables page breaking on page breaks\r\n    ignoreLastRenderedPageBreak: boolean;   //disables page breaking on lastRenderedPageBreak elements\r\n    experimental: boolean;                  //enables experimental features (tab stops calculation)\r\n    trimXmlDeclaration: boolean;            //if true, xml declaration will be removed from xml documents before parsing\r\n    useBase64URL: boolean;                  //if true, images, fonts, etc. will be converted to base 64 URL, otherwise URL.createObjectURL is used\r\n    useMathMLPolyfill: boolean;             //@deprecated includes MathML polyfills for chrome, edge, etc.\r\n    renderChanges: boolean;                 //enables experimental rendering of document changes (inserions/deletions)\r\n    renderHeaders: boolean;                 //enables headers rendering\r\n    renderFooters: boolean;                 //enables footers rendering\r\n    renderFootnotes: boolean;               //enables footnotes rendering\r\n    renderEndnotes: boolean;                //enables endnotes rendering\r\n    debug: boolean;                         //enables additional logging\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    renderEndnotes: true,\r\n    useBase64URL: false,\r\n    useMathMLPolyfill: false,\r\n    renderChanges: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRenderer(window.document);\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n\r\nexport async function docx2html(data: Blob | any, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n\r\n    return renderer.renderFragment(doc, styleContainer, ops);\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import {WordDocument} from './word-document';\r\nimport {\r\n    DomType,\r\n    WmlTable,\r\n    IDomNumbering,\r\n    WmlHyperlink,\r\n    IDomImage,\r\n    OpenXmlElement,\r\n    WmlTableColumn,\r\n    WmlTableCell,\r\n    WmlText,\r\n    WmlSymbol,\r\n    WmlBreak,\r\n    WmlNoteReference\r\n} from './document/dom';\r\nimport {CommonProperties} from './document/common';\r\nimport {Options} from './docx-preview';\r\nimport {DocumentElement} from './document/document';\r\nimport {WmlParagraph} from './document/paragraph';\r\nimport {asArray, escapeClassName, isString, keyBy, mergeDeep} from './utils';\r\nimport {computePixelToPoint, updateTabStop} from './javascript';\r\nimport {FontTablePart} from './font-table/font-table';\r\nimport {FooterHeaderReference, SectionProperties} from './document/section';\r\nimport {WmlRun, RunProperties} from './document/run';\r\nimport {WmlBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle} from './document/style';\r\nimport {WmlBaseNote, WmlFootnote} from './notes/elements';\r\nimport {ThemePart} from './theme/theme-part';\r\nimport {BaseHeaderFooterPart} from './header-footer/parts';\r\nimport {Part} from './common/part';\r\nimport mathMLCSS from \"./mathml.scss\";\r\nimport {VmlElement} from './vml/vml';\r\n\r\nconst ns = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    mathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n    col: number;\r\n    row: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    rootSelector: string;\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n    currentPart: Part = null;\r\n\r\n    tableVerticalMerges: CellVerticalMergeType[] = [];\r\n    currentVerticalMerge: CellVerticalMergeType = null;\r\n    tableCellPositions: CellPos[] = [];\r\n    currentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n    endnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n    defaultTabSize: string;\r\n    // 当前制表位\r\n    currentTabs: any[] = [];\r\n    tabsTimeout: any = 0;\r\n\r\n    constructor(public htmlDocument: Document) {\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML标签\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param bodyContainer HTML生成容器\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n\r\n    async render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // styleContainer== null，styleContainer = bodyContainer\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n        // HTML生成容器，清空所有HTML元素\r\n        removeAllElements(bodyContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--section内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            bodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(bodyContainer, sectionElements);\r\n        }\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML字符串\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n    async renderFragment(document: WordDocument, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // 生成代码片段实例\r\n        const fragment = window.document.createElement('div');\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--section内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            fragment.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(fragment, sectionElements);\r\n        }\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n\r\n        return fragment.innerHTML;\r\n    }\r\n\r\n    // 文档CSS主题样式\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    // 字体列表CSS样式\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n                    this.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 计算className，小写，默认前缀：\"docx_\"\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n    }\r\n\r\n    // 处理样式继承\r\n    processStyles(styles: IDomStyle[]) {\r\n        //\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n        // 遍历base_on关系,合并样式\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            let baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                // 深度合并\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n                    if (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n                    } else {\r\n                        style.styles.push({...baseValues, values: {...baseValues.values}});\r\n                    }\r\n                }\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    processNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 明确元素parent父级关系\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (let e of element.children) {\r\n                e.parent = element;\r\n                // 判断类型\r\n                if (e.type == DomType.Table) {\r\n                    // 渲染表格\r\n                    this.processTable(e);\r\n                } else {\r\n                    // 递归渲染\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表格style样式\r\n    processTable(table: WmlTable) {\r\n        for (let r of table.children) {\r\n            for (let c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 复制CSS样式\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input) {\r\n            return output;\r\n        }\r\n        if (output == null) {\r\n            output = {};\r\n        }\r\n        if (attrs == null) {\r\n            attrs = Object.getOwnPropertyNames(input);\r\n        }\r\n\r\n        for (let key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // 创建Page Section\r\n    createSection(className: string, props: SectionProperties) {\r\n        let elem = this.createElement(\"section\", {className});\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = props.pageMargins.left;\r\n                elem.style.paddingRight = props.pageMargins.right;\r\n                elem.style.paddingTop = props.pageMargins.top;\r\n                elem.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = props.pageSize.width;\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = props.pageSize.height;\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    // 生成Page Section\r\n    async renderSections(document: DocumentElement): Promise<HTMLElement[]> {\r\n        const result = [];\r\n        // 生成页面parent父级关系\r\n        this.processElement(document);\r\n\r\n        // 根据section切分页面\r\n        const sections = this.splitBySection(document.children);\r\n        let prevProps = null;\r\n        // 遍历生成每一个section\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n            const section = sections[i];\r\n            const props = section.sectProps || document.props;\r\n            // 根据sectProps，创建section\r\n            const sectionElement = this.createSection(this.className, props);\r\n            // 给section添加style样式\r\n            this.renderStyleValues(document.cssStyle, sectionElement);\r\n            // 渲染页眉\r\n            if (this.options.renderHeaders) {\r\n                await this.renderHeaderFooter(props.headerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n            // 渲染Page内容\r\n            let contentElement = this.createElement(\"article\");\r\n            await this.renderElements(section.elements, contentElement);\r\n            sectionElement.appendChild(contentElement);\r\n            // 渲染脚注\r\n            if (this.options.renderFootnotes) {\r\n                await this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n            }\r\n            // 渲染尾注\r\n            if (this.options.renderEndnotes && i == l - 1) {\r\n                await this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n            }\r\n            // 渲染页脚\r\n            if (this.options.renderFooters) {\r\n                await this.renderHeaderFooter(props.footerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n\r\n            result.push(sectionElement);\r\n            prevProps = props;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 渲染页眉/页脚\r\n    async renderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\r\n        if (!refs) return;\r\n\r\n        let ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        let part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n            this.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n            await this.renderElements([part.rootElement], into);\r\n            this.currentPart = null;\r\n        }\r\n    }\r\n\r\n    // 判断是否存在分页符\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        if (elem.type != DomType.Break) {\r\n            return false;\r\n        }\r\n\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n        }\r\n\r\n        return (elem as WmlBreak).break == \"page\";\r\n    }\r\n\r\n    // 根据section切分页面\r\n    splitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\r\n        let current = {sectProps: null, elements: []};\r\n        let result = [current];\r\n\r\n        for (let elem of elements) {\r\n\r\n            if (elem.type == DomType.Paragraph) {\r\n\r\n                const s = this.findStyle((elem as WmlParagraph).styleName);\r\n                // 段落之前存在强制分页符\r\n                if (s?.paragraphProps?.pageBreakBefore) {\r\n                    // current.sectProps = sectProps;\r\n                    current = {sectProps: null, elements: []};\r\n                    result.push(current);\r\n                }\r\n            }\r\n\r\n            current.elements.push(elem);\r\n\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n\r\n                let sectProps = p.sectionProps;\r\n                // 段落PageBreak索引\r\n                let pBreakIndex = -1;\r\n                // run部分PageBreak索引\r\n                let rBreakIndex = -1;\r\n\r\n                // 查询段落中分页符PageBreak索引\r\n                if (this.options.breakPages && p.children) {\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        rBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n                // 段落中存在sectProps/分页符PageBreak索引\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    // current.sectProps = sectProps;\r\n                    current = {sectProps: null, elements: []};\r\n                    result.push(current);\r\n                }\r\n                // TODO 自然文字超过一页无法识别\r\n                // 段落中存在 分页符PageBreak索引\r\n                if (pBreakIndex != -1) {\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    let splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || splitRun) {\r\n                        let children = elem.children;\r\n                        let newParagraph = {...elem, children: children.slice(pBreakIndex)};\r\n                        elem.children = children.slice(0, pBreakIndex);\r\n                        current.elements.push(newParagraph);\r\n\r\n                        if (splitRun) {\r\n                            let runChildren = breakRun.children;\r\n                            let newRun = {...breakRun, children: runChildren.slice(0, rBreakIndex)};\r\n                            elem.children.push(newRun);\r\n                            breakRun.children = runChildren.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let currentSectProps = null;\r\n\r\n        for (let i = result.length - 1; i >= 0; i--) {\r\n            if (result[i].sectProps == null) {\r\n                result[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = result[i].sectProps\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 生成父级容器\r\n    renderWrapper(children: HTMLElement[]) {\r\n        return this.createElement(\"div\", {className: `${this.className}-wrapper`}, children);\r\n    }\r\n\r\n    // 渲染默认样式\r\n    renderDefaultStyle() {\r\n        let c = this.className;\r\n        let styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n\t\t\tsection.${c}>article { margin-bottom: auto; z-index: 1; }\r\n\t\t\tsection.${c}>footer { z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n\r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement | DocumentFragment) {\r\n        let styleText = \"\";\r\n        let resetCounters = [];\r\n\r\n        for (let num of numberings) {\r\n            let selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            let listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    let text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            } else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n                const counterReset = counter + \" \" + (num.start - 1);\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counterReset\r\n                    });\r\n                }\r\n                // reset all level counters with start value\r\n                resetCounters.push(counterReset);\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            } else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (resetCounters.length > 0) {\r\n            styleText += this.styleToString(this.rootSelector, {\r\n                \"counter-reset\": resetCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        let styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            let subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                let linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n                //TODO temporary disable modificators until test it well\r\n                let selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n                if (style.target != subStyle.target)\r\n                    selector += ` ${subStyle.target}`;\r\n\r\n                if (defautStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // 渲染脚注/尾注\r\n    async renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n        let notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            let children = await this.renderElements(notes);\r\n            let result = this.createElement(\"ol\", null, children);\r\n            parent.appendChild(result);\r\n        }\r\n    }\r\n\r\n    async renderElement(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                return this.renderParagraph(elem as WmlParagraph);\r\n\r\n            case DomType.BookmarkStart:\r\n                return this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n            case DomType.BookmarkEnd:\r\n                return null; //ignore bookmark end\r\n\r\n            case DomType.Run:\r\n                return this.renderRun(elem as WmlRun);\r\n\r\n            case DomType.Table:\r\n                return this.renderTable(elem);\r\n\r\n            case DomType.Row:\r\n                return this.renderTableRow(elem);\r\n\r\n            case DomType.Cell:\r\n                return this.renderTableCell(elem);\r\n\r\n            case DomType.Hyperlink:\r\n                return this.renderHyperlink(elem);\r\n\r\n            case DomType.Drawing:\r\n                return this.renderDrawing(elem);\r\n\r\n            case DomType.Image:\r\n                return await this.renderImage(elem as IDomImage);\r\n\r\n            case DomType.Text:\r\n                return this.renderText(elem as WmlText);\r\n\r\n            case DomType.DeletedText:\r\n                return this.renderDeletedText(elem as WmlText);\r\n\r\n            case DomType.Tab:\r\n                return this.renderTab(elem);\r\n\r\n            case DomType.Symbol:\r\n                return this.renderSymbol(elem as WmlSymbol);\r\n\r\n            case DomType.Break:\r\n                return this.renderBreak(elem as WmlBreak);\r\n\r\n            case DomType.Footer:\r\n                return this.renderContainer(elem, \"footer\");\r\n\r\n            case DomType.Header:\r\n                return this.renderContainer(elem, \"header\");\r\n\r\n            case DomType.Footnote:\r\n            case DomType.Endnote:\r\n                return this.renderContainer(elem, \"li\");\r\n\r\n            case DomType.FootnoteReference:\r\n                return this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.EndnoteReference:\r\n                return this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.NoBreakHyphen:\r\n                return this.createElement(\"wbr\");\r\n\r\n            case DomType.VmlPicture:\r\n                return this.renderVmlPicture(elem);\r\n\r\n            case DomType.VmlElement:\r\n                return this.renderVmlElement(elem as VmlElement);\r\n\r\n            case DomType.MmlMath:\r\n                return this.renderContainerNS(elem, ns.mathML, \"math\", {xmlns: ns.mathML});\r\n\r\n            case DomType.MmlMathParagraph:\r\n                return this.renderContainer(elem, \"span\");\r\n\r\n            case DomType.MmlFraction:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n            case DomType.MmlNumerator:\r\n            case DomType.MmlDenominator:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlRadical:\r\n                return this.renderMmlRadical(elem);\r\n\r\n            case DomType.MmlDegree:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlSuperscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n            case DomType.MmlSubscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n            case DomType.MmlBase:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlSuperArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlSubArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlDelimiter:\r\n                return this.renderMmlDelimiter(elem);\r\n\r\n            case DomType.MmlRun:\r\n                return this.renderMmlRun(elem);\r\n\r\n            case DomType.MmlNary:\r\n                return this.renderMmlNary(elem);\r\n\r\n            case DomType.MmlEquationArray:\r\n                return this.renderMllList(elem);\r\n\r\n            case DomType.Inserted:\r\n                return this.renderInserted(elem);\r\n\r\n            case DomType.Deleted:\r\n                return this.renderDeleted(elem);\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    async renderChildren(elem: OpenXmlElement, into?: Element): Promise<Node[]> {\r\n        return await this.renderElements(elem.children, into);\r\n    }\r\n\r\n    // 渲染元素，深度可达到2层级\r\n    async renderElements(elems: OpenXmlElement[], into?: Element): Promise<Node[]> {\r\n        if (elems == null) {\r\n            return null;\r\n        }\r\n\r\n        let result: Node[] = [];\r\n\r\n        for (let i = 0; i < elems.length; i++) {\r\n            let element = await this.renderElement(elems[i]);\r\n\r\n            if (element) {\r\n                result.push(element as Node);\r\n            }\r\n        }\r\n\r\n        if (into) {\r\n            appendChildren(into, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n        return this.createElement(tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n        return createElementNS(ns, tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderParagraph(elem: WmlParagraph) {\r\n        let result = this.createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n        elem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderCommonProperties(result.style, elem);\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            result.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    async renderHyperlink(elem: WmlHyperlink) {\r\n        let result = this.createElement(\"a\");\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.href) {\r\n            result.href = elem.href;\r\n        } else if (elem.id) {\r\n            const rel = this.document.documentPart.rels\r\n                .find(it => it.id == elem.id && it.targetMode === \"External\");\r\n            result.href = rel?.target;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderDrawing(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderImage(elem: IDomImage) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            result.src = await this.document.loadDocumentImage(elem.src, this.currentPart)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderDeletedText(elem: WmlText) {\r\n        return this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.break == \"textWrapping\") {\r\n            return this.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    async renderInserted(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        if (this.options.renderChanges) {\r\n            return this.renderContainer(elem, \"ins\");\r\n        }\r\n\r\n        return await this.renderChildren(elem);\r\n    }\r\n\r\n    async renderDeleted(elem: OpenXmlElement): Promise<Node> {\r\n        if (this.options.renderChanges) {\r\n            return await this.renderContainer(elem, \"del\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        let span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderEndnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentEndnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    // 渲染制表符\r\n    renderTab(elem: OpenXmlElement) {\r\n        let tabSpan = this.createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n            tabSpan.className = this.tabStopClass();\r\n            let stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n            this.currentTabs.push({stops, span: tabSpan});\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        let result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    async renderRun(elem: WmlRun) {\r\n        if (elem.fieldRun)\r\n            return null;\r\n\r\n        const result = this.createElement(\"span\");\r\n\r\n        if (elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.verticalAlign) {\r\n            const wrapper = this.createElement(elem.verticalAlign as any);\r\n            await this.renderChildren(elem, wrapper);\r\n            result.appendChild(wrapper);\r\n        } else {\r\n            await this.renderChildren(elem, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        this.tableCellPositions.push(this.currentCellPosition);\r\n        this.tableVerticalMerges.push(this.currentVerticalMerge);\r\n        this.currentVerticalMerge = {};\r\n        this.currentCellPosition = {col: 0, row: 0};\r\n\r\n        if (elem.columns) {\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n        this.currentCellPosition = this.tableCellPositions.pop();\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[]) {\r\n        let result = this.createElement(\"colgroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n\r\n            if (col.width)\r\n                colElem.style.width = col.width;\r\n\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableRow(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.currentCellPosition.col = 0;\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentCellPosition.row++;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n        const key = this.currentCellPosition.col;\r\n\r\n        if (elem.verticalMerge) {\r\n            if (elem.verticalMerge == \"restart\") {\r\n                this.currentVerticalMerge[key] = result;\r\n                result.rowSpan = 1;\r\n            } else if (this.currentVerticalMerge[key]) {\r\n                this.currentVerticalMerge[key].rowSpan += 1;\r\n                result.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.currentVerticalMerge[key] = null;\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span)\r\n            result.colSpan = elem.span;\r\n\r\n        this.currentCellPosition.col += result.colSpan;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderVmlPicture(elem: OpenXmlElement) {\r\n        let result = createElement(\"div\");\r\n        await this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    async renderVmlElement(elem: VmlElement): Promise<SVGElement> {\r\n        let container = createSvgElement(\"svg\");\r\n\r\n        container.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n        const result = await this.renderVmlChildElement(elem);\r\n\r\n        if (elem.imageHref?.id) {\r\n            this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n                .then(x => result.setAttribute(\"href\", x));\r\n        }\r\n\r\n        container.appendChild(result);\r\n\r\n        requestAnimationFrame(() => {\r\n            const bb = (container.firstElementChild as any).getBBox();\r\n\r\n            container.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n            container.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n        });\r\n\r\n        return container;\r\n    }\r\n\r\n    async renderVmlChildElement(elem: VmlElement): Promise<any> {\r\n        const result = createSvgElement(elem.tagName as any);\r\n        Object.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n        for (let child of elem.children) {\r\n            if (child.type == DomType.VmlElement) {\r\n                result.appendChild(await this.renderVmlChildElement(child as VmlElement));\r\n            } else {\r\n                result.appendChild(...asArray(await this.renderElement(child as any)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMmlRadical(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n        if (elem.props?.hideDegree) {\r\n            return createElementNS(ns.mathML, \"msqrt\", null, await this.renderElements([base]));\r\n        }\r\n\r\n        const degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n        return createElementNS(ns.mathML, \"mroot\", null, await this.renderElements([base, degree]));\r\n    }\r\n\r\n    async renderMmlDelimiter(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n        children.push(...await this.renderElements(elem.children));\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlNary(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n\r\n        if (elem.props?.char) {\r\n            const charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props.char]);\r\n\r\n            if (supElem || subElem) {\r\n                children.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n            } else if (supElem) {\r\n                children.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n            } else if (subElem) {\r\n                children.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n            } else {\r\n                children.push(charElem);\r\n            }\r\n        }\r\n        let base_children = await this.renderElements(grouped[DomType.MmlBase].children);\r\n        children.push(...base_children);\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlRun(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"ms\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        await this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    async renderMllList(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"mtable\");\r\n        // 添加class类\r\n        this.renderClass(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        const childern = await this.renderChildren(elem);\r\n\r\n        for (let child of childern) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mtr\", null,\r\n                [createElementNS(ns.mathML, \"mtd\", null, [child])]\r\n            ));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        for (let k in style) {\r\n            if (k.startsWith(\"$\")) {\r\n                ouput.setAttribute(k.slice(1), style[k]);\r\n            } else {\r\n                ouput.style[k] = style[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加class类名\r\n    renderClass(input: OpenXmlElement, ouput: HTMLElement) {\r\n        if (input.className)\r\n            ouput.className = input.className;\r\n\r\n        if (input.styleName) {\r\n            ouput.classList.add(this.processStyleName(input.styleName));\r\n        }\r\n    }\r\n\r\n    // 查找style样式\r\n    findStyle(styleName: string) {\r\n        return styleName && this.styleMap?.[styleName];\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    tabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            if (key.startsWith('$'))\r\n                continue;\r\n\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        let result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        let mapping = {\r\n            none: \"none\",\r\n            bullet: \"disc\",\r\n            decimal: \"decimal\",\r\n            lowerLetter: \"lower-alpha\",\r\n            upperLetter: \"upper-alpha\",\r\n            lowerRoman: \"lower-roman\",\r\n            upperRoman: \"upper-roman\",\r\n            decimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n            // ordinal: \"\", // 1st, 2nd, 3rd,...\r\n            // ordinalText: \"\", //First, Second, Third, ...\r\n            // cardinalText: \"\", //One,Two Three,...\r\n            // numberInDash: \"\", //-1-,-2-,-3-, ...\r\n            // hex: \"upper-hexadecimal\",\r\n            aiueo: \"katakana\",\r\n            aiueoFullWidth: \"katakana\",\r\n            chineseCounting: \"simp-chinese-informal\",\r\n            chineseCountingThousand: \"simp-chinese-informal\",\r\n            chineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n            chosung: \"hangul-consonant\",\r\n            ideographDigital: \"cjk-ideographic\",\r\n            ideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n            ideographLegalTraditional: \"trad-chinese-formal\",\r\n            ideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n            iroha: \"katakana-iroha\",\r\n            irohaFullWidth: \"katakana-iroha\",\r\n            japaneseCounting: \"japanese-informal\",\r\n            japaneseDigitalTenThousand: \"cjk-decimal\",\r\n            japaneseLegal: \"japanese-formal\",\r\n            thaiNumbers: \"thai\",\r\n            koreanCounting: \"korean-hangul-formal\",\r\n            koreanDigital: \"korean-hangul-formal\",\r\n            koreanDigital2: \"korean-hanja-informal\",\r\n            hebrew1: \"hebrew\",\r\n            hebrew2: \"hebrew\",\r\n            hindiNumbers: \"devanagari\",\r\n            ganada: \"hangul\",\r\n            taiwaneseCounting: \"cjk-ideographic\",\r\n            taiwaneseCountingThousand: \"cjk-ideographic\",\r\n            taiwaneseDigital: \"cjk-decimal\",\r\n        };\r\n\r\n        return mapping[format] ?? format;\r\n    }\r\n\r\n    // 刷新tab制表符\r\n    refreshTabStops() {\r\n        if (!this.options.experimental)\r\n            return;\r\n\r\n        clearTimeout(this.tabsTimeout);\r\n\r\n        this.tabsTimeout = setTimeout(() => {\r\n            const pixelToPoint = computePixelToPoint();\r\n\r\n            for (let tab of this.currentTabs) {\r\n                updateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    createElement = createElement;\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): HTMLElementTagNameMap[T] {\r\n    return createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): SVGElementTagNameMap[T] {\r\n    return createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n    let result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n    Object.assign(result, props);\r\n    children && appendChildren(result, children);\r\n    return result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: Element | DocumentFragment, children: (Node | string)[]) {\r\n    children.forEach(child => {\r\n        parent.appendChild(isString(child) ? document.createTextNode(child) : child)\r\n    });\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", {innerHTML: cssText});\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement | DocumentFragment, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    let parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}\r\n","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n        \r\n    xmlString = removeUTF8BOM(xmlString);\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n\tattrs(elem: Element) {\r\n\t\treturn Array.from(elem.attributes);\r\n\t}\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n// 对象深度合并\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n// 转化为数组\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}","import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\n// word文件解析器：blob对象 => Object对象\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\t// 解压缩word文件转换为Office Open XML\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t345: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","id","toString","cssWithMappingToString","list","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","OpenXmlPackage","constructor","_zip","xmlParser","XmlParser","get","path","files","startsWith","substr","normalizePath","update","file","static","input","zip","JSZip","loadAsync","save","type","generateAsync","load","async","Promise","resolve","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","loadRelationships","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","e","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","Text","text","textContent","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","themeValue","filter","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","mul","unit","LineHeight","VmlEmu","usage","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","position","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","useMathMLPolyfill","renderChanges","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","renderFragment","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","svg","mathML","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","isString","createTextNode","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","renderDefaultStyle","MathMLElement","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","processNumberings","domNumberings","renderNumbering","fontTablePart","renderFontTable","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","fragment","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","entries","colors","styleToString","fontsPart","ref","loadFont","then","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","prevProps","l","currentFootnoteIds","sectProps","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","bind","breakRun","splitRun","newParagraph","runChildren","newRun","currentSectProps","styleText","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","subStyle","noteIds","notesMap","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMllList","renderInserted","renderDeleted","elems","renderElement","renderChildren","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","container","setAttribute","cssStyleText","renderVmlChildElement","imageHref","requestAnimationFrame","bb","getBBox","Math","ceil","y","asArray","base","degree","grouped","sup","sub","supElem","subElem","charElem","base_children","childern","ouput","lvl","selectors","numformat","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","t","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","textDecoration","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","prefix","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","sources","source","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","getter","definition","o","defineProperty","enumerable","obj","prop","prototype","call","toStringTag","baseURI","self","location"],"sourceRoot":""}