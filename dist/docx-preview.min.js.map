{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx-preview-sync/./src/common/open-xml-package.ts","webpack://docx-preview-sync/./src/common/part.ts","webpack://docx-preview-sync/./src/common/relationship.ts","webpack://docx-preview-sync/./src/document-parser.ts","webpack://docx-preview-sync/./src/document-props/core-props-part.ts","webpack://docx-preview-sync/./src/document-props/core-props.ts","webpack://docx-preview-sync/./src/document-props/custom-props-part.ts","webpack://docx-preview-sync/./src/document-props/custom-props.ts","webpack://docx-preview-sync/./src/document-props/extended-props-part.ts","webpack://docx-preview-sync/./src/document-props/extended-props.ts","webpack://docx-preview-sync/./src/document/bookmarks.ts","webpack://docx-preview-sync/./src/document/border.ts","webpack://docx-preview-sync/./src/document/common.ts","webpack://docx-preview-sync/./src/document/document-part.ts","webpack://docx-preview-sync/./src/document/dom.ts","webpack://docx-preview-sync/./src/document/line-spacing.ts","webpack://docx-preview-sync/./src/document/paragraph.ts","webpack://docx-preview-sync/./src/document/run.ts","webpack://docx-preview-sync/./src/document/section.ts","webpack://docx-preview-sync/./src/docx-preview.ts","webpack://docx-preview-sync/./src/font-table/font-table.ts","webpack://docx-preview-sync/./src/font-table/fonts.ts","webpack://docx-preview-sync/./src/header-footer/elements.ts","webpack://docx-preview-sync/./src/header-footer/parts.ts","webpack://docx-preview-sync/./src/html-renderer-sync.ts","webpack://docx-preview-sync/./src/html-renderer.ts","webpack://docx-preview-sync/./src/javascript.ts","webpack://docx-preview-sync/./src/notes/elements.ts","webpack://docx-preview-sync/./src/notes/parts.ts","webpack://docx-preview-sync/./src/numbering/numbering-part.ts","webpack://docx-preview-sync/./src/numbering/numbering.ts","webpack://docx-preview-sync/./src/parser/xml-parser.ts","webpack://docx-preview-sync/./src/settings/settings-part.ts","webpack://docx-preview-sync/./src/settings/settings.ts","webpack://docx-preview-sync/./src/styles/styles-part.ts","webpack://docx-preview-sync/./src/theme/theme-part.ts","webpack://docx-preview-sync/./src/theme/theme.ts","webpack://docx-preview-sync/./src/utils.ts","webpack://docx-preview-sync/./src/vml/vml.ts","webpack://docx-preview-sync/./src/word-document.ts","webpack://docx-preview-sync/external module {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\",\"module\":\"jszip\"}","webpack://docx-preview-sync/webpack/bootstrap","webpack://docx-preview-sync/webpack/startup"],"sourcesContent":["import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n// \r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n  protected _xmlDocument: Document;\r\n\r\n  rels: Relationship[];\r\n\r\n  constructor(protected _package: OpenXmlPackage, public path: string) {\r\n  }\r\n\r\n  async load(): Promise<any> {\r\n    this.rels = await this._package.loadRelationships(this.path);\r\n\r\n    const xmlText = await this._package.load(this.path);\r\n    const xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n    if (this._package.options.keepOrigin) {\r\n      this._xmlDocument = xmlDoc;\r\n    }\r\n\r\n    this.parseXml(xmlDoc.firstElementChild);\r\n  }\r\n\r\n  save() {\r\n    this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n  }\r\n\r\n  protected parseXml(root: Element) {\r\n  }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n\tDomType,\r\n\tWmlDrawing,\r\n\tIDomImage,\r\n\tIDomNumbering,\r\n\tNumberingPicBullet,\r\n\tOpenXmlElement,\r\n\tWmlBreak,\r\n\tWmlHyperlink,\r\n\tWmlNoteReference,\r\n\tWmlSymbol,\r\n\tWmlTable,\r\n\tWmlTableCell,\r\n\tWmlTableColumn,\r\n\tWmlTableRow,\r\n\tWmlText\r\n} from './document/dom';\r\nimport {DocumentElement} from './document/document';\r\nimport {parseParagraphProperties, parseParagraphProperty, WmlParagraph} from './document/paragraph';\r\nimport {parseSectionProperties, SectionProperties} from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport {parseRunProperties, WmlRun} from './document/run';\r\nimport {parseBookmarkEnd, parseBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle, IDomSubStyle} from './document/style';\r\nimport {WmlFieldChar, WmlFieldSimple, WmlInstructionText} from './document/fields';\r\nimport {convertLength, LengthUsage, LengthUsageType} from './document/common';\r\nimport {parseVmlElement} from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"func\": DomType.MmlFunction,\r\n\t\"fName\": DomType.MmlFunctionName,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sPre\": DomType.MmlPreSubSuper,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n\t\"lim\": DomType.MmlLimit,\r\n\t\"limLow\": DomType.MmlLimitLower,\r\n\t\"m\": DomType.MmlMatrix,\r\n\t\"mr\": DomType.MmlMatrixRow,\r\n\t\"box\": DomType.MmlBox,\r\n\t\"bar\": DomType.MmlBar,\r\n\t\"groupChr\": DomType.MmlGroupChar\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n\tignoreTableWrap: boolean,\r\n\tignoreImageWrap: boolean,\r\n}\r\n\r\n// 默认解析选项\r\nexport const defaultDocumentParserOptions: DocumentParserOptions = {\r\n\tignoreWidth: false,\r\n\tdebug: false,\r\n\tignoreTableWrap: true,\r\n\tignoreImageWrap: true,\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\t...defaultDocumentParserOptions,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tlet result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tlet xbody = xml.element(xmlDoc, \"body\");\r\n\t\tlet background = xml.element(xmlDoc, \"background\");\r\n\t\tlet sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tlet result = {};\r\n\t\tlet color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tlet children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, (e: Element) => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tlet result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tlet result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tlet rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tlet pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tlet result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\":\r\n\t\t\t\tresult.target = \"p\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"table\":\r\n\t\t\t\tresult.target = \"table\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"character\":\r\n\t\t\t\tresult.target = \"span\";\r\n\t\t\t\tbreak;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tlet result = [];\r\n\r\n\t\tlet type = xml.attr(node, \"type\");\r\n\t\tlet selector = \"\";\r\n\t\tlet modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tlet result = [];\r\n\t\tconst mapping = {};\r\n\t\tlet bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tlet numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tlet abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tlet pict = xml.element(elem, \"pict\");\r\n\t\tlet shape = pict && xml.element(pict, \"shape\");\r\n\t\tlet imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tlet result = [];\r\n\t\tlet id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tlet result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tlet id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Inserted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Deleted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tlet result = <WmlParagraph>{type: DomType.Paragraph, children: []};\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, (e: Element) => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, (e: Element) => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, (e: Element) => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// when paragraph is empty, a br tag needs to be added to work with the rich text editor and generate line height\r\n\t\t// 当段落children为空，需要添加一个br标签，配合富文本编辑器，同时产生行高\r\n\t\tif (result.children.length === 0) {\r\n\t\t\tlet br: WmlBreak = {type: DomType.Break, \"break\": \"textWrapping\"};\r\n\t\t\tresult.children = [br];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tlet dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tlet result: WmlHyperlink = <WmlHyperlink>{type: DomType.Hyperlink, parent: parent, children: []};\r\n\t\tlet anchor = xml.attr(node, \"anchor\");\r\n\t\tlet relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tlet result: WmlRun = <WmlRun>{type: DomType.Run, parent: parent, children: []};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tlet textContent = c.textContent;\r\n\t\t\t\t\t// 是否保留空格\r\n\t\t\t\t\tlet is_preserve_space = xml.attr(c, \"xml:space\") === \"preserve\";\r\n\t\t\t\t\tif (is_preserve_space) {\r\n\t\t\t\t\t\t// \\u00A0 = 不间断空格，英文应该一个空格，中文两个空格。受到font-family影响。\r\n\t\t\t\t\t\ttextContent = textContent.split(/\\s/).join(\"\\u00A0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({type: DomType.NoBreakHyphen});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({type: DomType.Tab});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = {type: mmlTagMap[elem.localName], children: []} as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tlet run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\":\r\n\t\t\t\t\tresult.char = xml.attr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"vertJc\":\r\n\t\t\t\t\tresult.verticalJustification = xml.attr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pos\":\r\n\t\t\t\t\tresult.position = xml.attr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"degHide\":\r\n\t\t\t\t\tresult.hideDegree = xml.boolAttr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"begChr\":\r\n\t\t\t\t\tresult.beginChar = xml.attr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"endChr\":\r\n\t\t\t\t\tresult.endChar = xml.attr(el, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = {type: DomType.VmlPicture, children: []};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tlet choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tlet requires = xml.attr(choice, \"Requires\");\r\n\t\t\tlet namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (let n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tlet result: WmlDrawing = {\r\n\t\t\ttype: DomType.Drawing,\r\n\t\t\tchildren: [],\r\n\t\t\tcssStyle: {},\r\n\t\t\tlocalName: node.localName,\r\n\t\t\twrapType: null\r\n\t\t};\r\n\t\t// DrawingML对象有两种状态：内联（inline）-- 对象与文本对齐，浮动（anchor）--对象在文本中浮动，但可以相对于页面进行绝对定位\r\n\t\tlet isAnchor = node.localName === \"anchor\";\r\n\r\n\t\t// 是否简单定位\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\t// 根据relativeHeight设置z-index\r\n\t\tresult.cssStyle[\"z-index\"] = xml.intAttr(node, \"relativeHeight\", 1);\r\n\r\n\t\tlet posX = {relative: \"page\", align: \"left\", offset: \"0\"};\r\n\t\tlet posY = {relative: \"page\", align: \"top\", offset: \"0\"};\r\n\r\n\t\tfor (let n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\t// 简单定位\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tlet alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tlet offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode) {\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (offsetNode) {\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\tresult.wrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\tresult.wrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tlet g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g) {\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 图片文字环绕默认采用wrapTopAndBottom\r\n\t\tif (this.options.ignoreImageWrap) {\r\n\t\t\tresult.wrapType = \"wrapTopAndBottom\";\r\n\t\t}\r\n\r\n\t\tswitch (result.wrapType) {\r\n\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t// 顶部底部文字环绕\r\n\t\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\t\tif (posX.align) {\r\n\t\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wrapNone\":\r\n\t\t\t\t// 衬于文字下方、浮于文字上方\r\n\t\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\t\tif (posX.offset) {\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (posY.offset) {\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wrapTight\":\r\n\t\t\t\t// TODO 紧密型环绕\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wrapThrough\":\r\n\t\t\t\t// TODO 穿越型环绕\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wrapSquare\":\r\n\t\t\t\t// TODO 矩形环绕\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wrapPolygon\":\r\n\t\t\t\t// TODO 多边形环绕\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// 处理浮动（anchor）\r\n\t\t\t\tif (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t\t\t\t// 计算DrawML对象相对于文字的上下左右间距；仅在浮动、文字环绕模式下有效；\r\n\t\t\t\t\tresult.cssStyle[\"margin-left\"] = xml.lengthAttr(node, \"distL\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"margin-right\"] = xml.lengthAttr(node, \"distR\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"margin-top\"] = xml.lengthAttr(node, \"distT\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"margin-bottom\"] = xml.lengthAttr(node, \"distB\", LengthUsage.Emu);\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tlet graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tlet result = <IDomImage>{type: DomType.Image, src: \"\", cssStyle: {}};\r\n\t\tlet blipFill = xml.element(elem, \"blipFill\");\r\n\t\tlet blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tlet spPr = xml.element(elem, \"spPr\");\r\n\t\tlet xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\t// 图片旋转角度\r\n\t\tlet degree = xml.lengthAttr(xfrm, \"rot\", LengthUsage.degree);\r\n\t\tif (degree) {\r\n\t\t\tresult.cssStyle[\"transform\"] = `rotate(${degree})`;\r\n\t\t}\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (let n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tlet result: WmlTable = {type: DomType.Table, children: []};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tlet result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({width: xml.lengthAttr(n, \"w\")});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\t// 浮动表格位置\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// 浮动表格，实现文字环绕\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\t// 由于浮动，导致后续元素错乱，默认忽略。\r\n\t\tif (this.options.ignoreTableWrap) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tlet bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tlet rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tlet leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tlet result: WmlTableRow = {type: DomType.Row, children: []};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// \ttblHeader attribute is boolean attribute\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\", true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tlet result: WmlTableCell = {type: DomType.Cell, children: []};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\t// style[\"font-size\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth) {\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore\r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tlet val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tlet col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\r\n\t// 转换Run字体，包含四种，ascii，eastAsia，ComplexScript，高 ANSI Font\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\t// 字体\r\n\t\tlet fonts = [];\r\n\t\t// ascii字体\r\n\t\tlet ascii = xml.attr(node, \"ascii\");\r\n\t\tlet ascii_theme = values.themeValue(node, \"asciiTheme\");\r\n\t\tfonts.push(ascii, ascii_theme);\r\n\t\t// eastAsia\r\n\t\tlet east_Asia = xml.attr(node, \"eastAsia\");\r\n\t\tlet east_Asia_theme = values.themeValue(node, \"eastAsiaTheme\");\r\n\t\tfonts.push(east_Asia, east_Asia_theme);\r\n\t\t// ComplexScript\r\n\t\tlet complex_script = xml.attr(node, \"cs\");\r\n\t\tlet complex_script_theme = values.themeValue(node, \"cstheme\");\r\n\t\tfonts.push(complex_script, complex_script_theme);\r\n\t\t// 高 ANSI Font\r\n\t\tlet high_ansi = xml.attr(node, \"hAnsi\");\r\n\t\tlet high_ansi_theme = values.themeValue(node, \"hAnsiTheme\");\r\n\t\tfonts.push(high_ansi, high_ansi_theme);\r\n\r\n\t\t// 去除重复字体，合并成一个字体配置\r\n\t\tlet fonts_value = [...new Set(fonts)].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0) {\r\n\t\t\tstyle[\"font-family\"] = fonts_value;\r\n\t\t}\r\n\r\n\t\t// 字体提示：hint，拥有三种值：ComplexScript（cs）、Default（default）、EastAsia（eastAsia）\r\n\t\tstyle[\"_hint\"] = xml.attr(node, \"hint\");\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tlet firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tlet hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tlet left = xml.lengthAttr(node, \"left\");\r\n\t\tlet start = xml.lengthAttr(node, \"start\");\r\n\t\tlet right = xml.lengthAttr(node, \"right\");\r\n\t\tlet end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tlet before = xml.lengthAttr(node, \"before\");\r\n\t\tlet after = xml.lengthAttr(node, \"after\");\r\n\t\tlet line = xml.intAttr(node, \"line\", null);\r\n\t\tlet lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Exact\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${line / 20}pt`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (let i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE) {\r\n\t\t\t\tcb(<Element>n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tlet v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tlet themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tlet val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tlet type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pct\":\r\n\t\t\t\ttype = LengthUsage.Percent;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"auto\":\r\n\t\t\t\treturn \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tlet type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tlet color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tlet size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tlet type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tlet type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\":\r\n\t\t\t\treturn \"left\";\r\n\t\t\tcase \"center\":\r\n\t\t\t\treturn \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\":\r\n\t\t\t\treturn \"right\";\r\n\t\t\tcase \"both\":\r\n\t\t\t\treturn \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tlet type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\":\r\n\t\t\t\treturn \"sub\";\r\n\t\t\tcase \"superscript\":\r\n\t\t\t\treturn asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tlet type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\":\r\n\t\t\t\treturn \"baseline\";\r\n\t\t\tcase \"top\":\r\n\t\t\t\treturn \"top\";\r\n\t\t\tcase \"center\":\r\n\t\t\t\treturn \"middle\";\r\n\t\t\tcase \"bottom\":\r\n\t\t\t\treturn \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}\r\n","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import {XmlParser} from \"../parser/xml-parser\";\r\nimport {computePixelToPoint} from \"../javascript\";\r\n\r\nexport const ns = {\r\n\twordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n\tdrawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n\tpicture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n\tmath: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"deg\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n\tname: string;\r\n\tfamily: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n\tfontSize: Length;\r\n\tcolor: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n\r\n\t// Windows系统默认是96dpi，Apple系统默认是72dpi。pt = 1/72(英寸), px = 1/dpi(英寸)\r\n\t// 目前只考虑Windows系统，px = pt * 96 / 72 ;\r\n\tPx: {mul: 1 / 15, unit: \"px\"},\r\n\tDxa: {mul: 0.05, unit: \"pt\"}, // 单位：twips，twentieth = 1/20\r\n\tEmu: {mul: 1 / 12700, unit: \"pt\"},\r\n\tFontSize: {mul: 0.5, unit: \"pt\"},\r\n\tBorder: {mul: 0.125, unit: \"pt\"},\r\n\tPoint: {mul: 1, unit: \"pt\"},\r\n\tPercent: {mul: 0.02, unit: \"%\"},\r\n\tLineHeight: {mul: 1 / 240, unit: \"\"},\r\n\tVmlEmu: {mul: 1 / 12700, unit: \"\"},\r\n\tdegree: {mul: 1 / 60000, unit: \"deg\"},\r\n}\r\n\r\nexport function convertLength(val: string | number, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n\t//\"simplified\" docx documents use pt's as units\r\n\t// undefined类型\r\n\tif (!val) {\r\n\t\treturn undefined;\r\n\t}\r\n\t// number类型\r\n\tif (typeof val === 'number') {\r\n\t\treturn `${(val * usage.mul).toFixed(2)}${usage.unit}`;\r\n\t}\r\n\r\n\t// 默认不转换如下单位：px、pt、%\r\n\tif (/.+(p[xt]|[%])$/.test(val)) {\r\n\t\treturn val;\r\n\t}\r\n\t// 字符串类型\r\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n\tswitch (v) {\r\n\t\tcase \"1\":\r\n\t\t\treturn true;\r\n\t\tcase \"0\":\r\n\t\t\treturn false;\r\n\t\tcase \"on\":\r\n\t\t\treturn true;\r\n\t\tcase \"off\":\r\n\t\t\treturn false;\r\n\t\tcase \"true\":\r\n\t\t\treturn true;\r\n\t\tcase \"false\":\r\n\t\t\treturn false;\r\n\t\tdefault:\r\n\t\t\treturn defaultValue;\r\n\t}\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n\treturn val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n\tif (elem.namespaceURI != ns.wordml)\r\n\t\treturn false;\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"color\":\r\n\t\t\tprops.color = xml.attr(elem, \"val\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"sz\":\r\n\t\t\tprops.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n\tDocument = \"document\",\r\n\tParagraph = \"paragraph\",\r\n\tRun = \"run\",\r\n\tBreak = \"break\",\r\n\tNoBreakHyphen = \"noBreakHyphen\",\r\n\tTable = \"table\",\r\n\tRow = \"row\",\r\n\tCell = \"cell\",\r\n\tHyperlink = \"hyperlink\",\r\n\tDrawing = \"drawing\",\r\n\tImage = \"image\",\r\n\tText = \"text\",\r\n\tTab = \"tab\",\r\n\tSymbol = \"symbol\",\r\n\tBookmarkStart = \"bookmarkStart\",\r\n\tBookmarkEnd = \"bookmarkEnd\",\r\n\tFooter = \"footer\",\r\n\tHeader = \"header\",\r\n\tFootnoteReference = \"footnoteReference\",\r\n\tEndnoteReference = \"endnoteReference\",\r\n\tFootnote = \"footnote\",\r\n\tEndnote = \"endnote\",\r\n\tSimpleField = \"simpleField\",\r\n\tComplexField = \"complexField\",\r\n\tInstruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlFunction = \"mmlFunction\",\r\n\tMmlFunctionName = \"mmlFunctionName\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlPreSubSuper = \"mmlPreSubSuper\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tMmlLimit = \"mmlLimit\",\r\n\tMmlLimitLower = \"mmlLimitLower\",\r\n\tMmlMatrix = \"mmlMatrix\",\r\n\tMmlMatrixRow = \"mmlMatrixRow\",\r\n\tMmlBox = \"mmlBox\",\r\n\tMmlBar = \"mmlBar\",\r\n\tMmlGroupChar = \"mmlGroupChar\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n\ttype: DomType;\r\n\tchildren?: OpenXmlElement[];\r\n\tcssStyle?: Record<string, any>;\r\n\tprops?: Record<string, any>;\r\n\tlevel?: number;\r\n\r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n\tparent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n\ttype: DomType;\r\n\tchildren?: OpenXmlElement[] = [];\r\n\tcssStyle?: Record<string, any> = {};\r\n\tprops?: Record<string, any>;\r\n\r\n\tclassName?: string;\r\n\tstyleName?: string;\r\n\r\n\tparent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n\thref?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n\tid: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement {\r\n\tbreak: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\" | \"column\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement {\r\n\ttext: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n\tfont: string;\r\n\tchar: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n\tcolumns?: WmlTableColumn[];\r\n\tcellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n\tspan?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n\tsrc: string;\r\n}\r\n\r\nexport interface WmlDrawing extends OpenXmlElement {\r\n\tlocalName?: string;\r\n\twrapType?: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n\twidth?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n\tid: string;\r\n\tlevel: number;\r\n\tstart: number;\r\n\tpStyleName: string;\r\n\tpStyle: Record<string, string>;\r\n\trStyle: Record<string, string>;\r\n\tlevelText?: string;\r\n\tsuff: string;\r\n\tformat?: string;\r\n\tbullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n\tid: number;\r\n\tsrc: string;\r\n\tstyle?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n    styleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n\r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepLines\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, {XmlParser} from \"../parser/xml-parser\";\r\nimport {Borders, parseBorders} from \"./border\";\r\nimport {Length, convertLength} from \"./common\";\r\nimport {OpenXmlElement} from \"./dom\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface ContentSize {\r\n    width: Length,\r\n    height: Length,\r\n}\r\n\r\nexport interface PageSize extends ContentSize {\r\n    orientation: \"landscape\" | string\r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\"\r\n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\",\r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n    contentSize: ContentSize;\r\n}\r\n\r\nexport interface Section {\r\n    sectProps: SectionProperties,\r\n    elements: OpenXmlElement[],\r\n    is_split: boolean,\r\n    isFirstSection?: boolean;\r\n    isLastSection?: boolean;\r\n    pageIndex?: number;\r\n    elementIndex?: number;\r\n    contentElement?: HTMLElement;\r\n    checking_overflow?: boolean,\r\n}\r\n\r\n// 原始尺寸数据，单位：dxa\r\ninterface OriginSize {\r\n    pageSize: {\r\n        width: number,\r\n        height: number,\r\n    },\r\n    pageMargins: {\r\n        top: number;\r\n        right: number;\r\n        bottom: number;\r\n        left: number;\r\n        header: number;\r\n        footer: number;\r\n        gutter: number;\r\n    }\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n    // 原始尺寸，单位：dxa\r\n    let origin = <OriginSize>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                // 记录原始尺寸\r\n                origin.pageSize = {\r\n                    width: xml.intAttr(e, \"w\"),\r\n                    height: xml.intAttr(e, \"h\"),\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                // 记录原始尺寸\r\n                origin.pageMargins = {\r\n                    left: xml.intAttr(e, \"left\"),\r\n                    right: xml.intAttr(e, \"right\"),\r\n                    top: xml.intAttr(e, \"top\"),\r\n                    bottom: xml.intAttr(e, \"bottom\"),\r\n                    header: xml.intAttr(e, \"header\"),\r\n                    footer: xml.intAttr(e, \"footer\"),\r\n                    gutter: xml.intAttr(e, \"gutter\"),\r\n                }\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 根据原始尺寸，计算内容区域的宽高\r\n    let {width, height} = origin.pageSize;\r\n    let {left, right, top, bottom} = origin.pageMargins;\r\n\r\n    section.contentSize = {\r\n        width: convertLength(width - left - right),\r\n        height: convertLength(height - top - bottom),\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}\r\n","import {WordDocument} from './word-document';\r\n\r\nimport {DocumentParser} from './document-parser';\r\n\r\n// 异步渲染\r\nimport {HtmlRenderer} from './html-renderer';\r\n\r\n// 同步渲染\r\nimport {HtmlRendererSync} from \"./html-renderer-sync\";\r\n\r\nexport interface Options {\r\n    className: string;                      //class name/prefix for default and document style classes\r\n    inWrapper: boolean;                     //enables rendering of wrapper around document content\r\n\r\n    ignoreWidth: boolean;                   //disables rendering width of page\r\n    ignoreHeight: boolean;                  //disables rendering height of page\r\n    ignoreFonts: boolean;                   //disables fonts rendering\r\n\tignoreTableWrap: boolean;               //disables table's text wrap setting\r\n\tignoreImageWrap: boolean;               //disables image text wrap setting\r\n\tignoreLastRenderedPageBreak: boolean;   //disables page breaking on lastRenderedPageBreak elements\r\n    breakPages: boolean;                    //enables page breaking on page breaks\r\n\r\n    trimXmlDeclaration: boolean;            //if true, xml declaration will be removed from xml documents before parsing\r\n    useBase64URL: boolean;                  //if true, images, fonts, etc. will be converted to base 64 URL, otherwise URL.createObjectURL is used\r\n\r\n    renderHeaders: boolean;                 //enables headers rendering\r\n    renderFooters: boolean;                 //enables footers rendering\r\n    renderFootnotes: boolean;               //enables footnotes rendering\r\n    renderEndnotes: boolean;                //enables endnotes rendering\r\n\trenderChanges: boolean;                 //enables experimental rendering of document changes (inserions/deletions)\r\n\r\n\texperimental: boolean;                  //enables experimental features (tab stops calculation)\r\n    debug: boolean;                         //enables additional logging\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n\tclassName: \"docx\",\r\n\tinWrapper: true,\r\n\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n\tignoreTableWrap: true,\r\n\tignoreImageWrap: false,\r\n\tignoreLastRenderedPageBreak: true,\r\n    breakPages: true,\r\n\r\n    trimXmlDeclaration: true,\r\n\tuseBase64URL: false,\r\n\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    renderEndnotes: true,\r\n    renderChanges: false,\r\n\r\n\texperimental: false,\r\n\tdebug: false,\r\n}\r\n\r\nexport function parseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRenderer();\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n\r\nexport async function renderSync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRendererSync();\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import {WordDocument} from './word-document';\r\nimport {\r\n\tDomType,\r\n\tIDomImage,\r\n\tIDomNumbering,\r\n\tOpenXmlElement,\r\n\tWmlBreak,\r\n\tWmlHyperlink,\r\n\tWmlNoteReference,\r\n\tWmlSymbol,\r\n\tWmlTable,\r\n\tWmlTableCell,\r\n\tWmlTableColumn,\r\n\tWmlTableRow,\r\n\tWmlText\r\n} from './document/dom';\r\nimport {CommonProperties} from './document/common';\r\nimport {Options} from './docx-preview';\r\nimport {DocumentElement} from './document/document';\r\nimport {WmlParagraph} from './document/paragraph';\r\nimport {asArray, escapeClassName, isString, keyBy, mergeDeep} from './utils';\r\nimport {computePixelToPoint, updateTabStop} from './javascript';\r\nimport {FontTablePart} from './font-table/font-table';\r\nimport {FooterHeaderReference, Section, SectionProperties} from './document/section';\r\nimport {RunProperties, WmlRun} from './document/run';\r\nimport {WmlBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle} from './document/style';\r\nimport {WmlBaseNote, WmlFootnote} from './notes/elements';\r\nimport {ThemePart} from './theme/theme-part';\r\nimport {BaseHeaderFooterPart} from './header-footer/parts';\r\nimport {Part} from './common/part';\r\nimport {VmlElement} from './vml/vml';\r\n\r\nlet ns = {\r\n\thtml: \"http://www.w3.org/1999/xhtml\",\r\n\tsvg: \"http://www.w3.org/2000/svg\",\r\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n\tcol: number;\r\n\trow: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\ninterface Node_DOM extends Node {\r\n\tdataset: DOMStringMap;\r\n}\r\n\r\nenum Overflow {\r\n\tTRUE = \"true\",\r\n\tFALSE = \"false\",\r\n\tUNKNOWN = \"undetected\",\r\n}\r\n\r\n// HTML渲染器\r\nexport class HtmlRendererSync {\r\n\r\n\tclassName: string = \"docx\";\r\n\trootSelector: string;\r\n\tdocument: WordDocument;\r\n\toptions: Options;\r\n\tstyleMap: Record<string, IDomStyle> = {};\r\n\tcurrentPart: Part = null;\r\n\twrapper: HTMLElement;\r\n\r\n\t// 当前操作的section\r\n\tcurrent_section: Section;\r\n\r\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\r\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\r\n\ttableCellPositions: CellPos[] = [];\r\n\tcurrentCellPosition: CellPos = null;\r\n\r\n\tfootnoteMap: Record<string, WmlFootnote> = {};\r\n\tendnoteMap: Record<string, WmlFootnote> = {};\r\n\tcurrentFootnoteIds: string[];\r\n\tcurrentEndnoteIds: string[] = [];\r\n\tusedHederFooterParts: any[] = [];\r\n\r\n\tdefaultTabSize: string;\r\n\t// 当前制表位\r\n\tcurrentTabs: any[] = [];\r\n\ttabsTimeout: any = 0;\r\n\r\n\t/**\r\n\t * Object对象 => HTML标签\r\n\t *\r\n\t * @param document word文档Object对象\r\n\t * @param bodyContainer HTML生成容器\r\n\t * @param styleContainer CSS样式生成容器\r\n\t * @param options 渲染配置选项\r\n\t */\r\n\r\n\tasync render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n\t\tthis.document = document;\r\n\t\tthis.options = options;\r\n\t\t// class类前缀\r\n\t\tthis.className = options.className;\r\n\t\t// 根元素\r\n\t\tthis.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n\t\t// 文档CSS样式\r\n\t\tthis.styleMap = null;\r\n\t\t// 主体容器\r\n\t\tthis.wrapper = bodyContainer;\r\n\t\t// styleContainer== null，styleContainer = bodyContainer\r\n\t\tstyleContainer = styleContainer || bodyContainer;\r\n\r\n\t\t// CSS样式生成容器，清空所有CSS样式\r\n\t\tremoveAllElements(styleContainer);\r\n\t\t// HTML生成容器，清空所有HTML元素\r\n\t\tremoveAllElements(bodyContainer);\r\n\r\n\t\t// 添加注释\r\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\r\n\t\t// 添加默认CSS样式\r\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n\t\t// 主题CSS样式\r\n\t\tif (document.themePart) {\r\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\r\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\r\n\t\t}\r\n\t\t// 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n\t\tif (document.stylesPart != null) {\r\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n\t\t}\r\n\t\t// 多级列表样式\r\n\t\tif (document.numberingPart) {\r\n\t\t\tthis.processNumberings(document.numberingPart.domNumberings);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n\t\t}\r\n\t\t// 字体列表CSS样式\r\n\t\tif (!options.ignoreFonts && document.fontTablePart) {\r\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\r\n\t\t}\r\n\t\t// 生成脚注部分的Map\r\n\t\tif (document.footnotesPart) {\r\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n\t\t}\r\n\t\t// 生成尾注部分的Map\r\n\t\tif (document.endnotesPart) {\r\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n\t\t}\r\n\t\t// 文档设置\r\n\t\tif (document.settingsPart) {\r\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n\t\t}\r\n\t\t// 根据option生成wrapper\r\n\t\tif (this.options.inWrapper) {\r\n\t\t\tthis.wrapper = this.renderWrapper();\r\n\t\t\tbodyContainer.appendChild(this.wrapper);\r\n\t\t} else {\r\n\t\t\tthis.wrapper = bodyContainer;\r\n\t\t}\r\n\t\t// 主文档--内容\r\n\t\tawait this.renderSections(document.documentPart.body);\r\n\r\n\t\t// 刷新制表符\r\n\t\tthis.refreshTabStops();\r\n\t}\r\n\r\n\t// 渲染默认样式\r\n\trenderDefaultStyle() {\r\n\t\tlet c = this.className;\r\n\t\tlet styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n            section.${c}>header { position: absolute; top: 0; z-index: 1; display: flex; align-items: flex-end; }\r\n\t\t\tsection.${c}>article { z-index: 1; }\r\n\t\t\tsection.${c}>footer { position: absolute; bottom: 0; z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\t// 文档CSS主题样式\r\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n\t\tlet variables = {};\r\n\t\tlet fontScheme = themePart.theme?.fontScheme;\r\n\r\n\t\tif (fontScheme) {\r\n\t\t\tif (fontScheme.majorFont) {\r\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n\t\t\t}\r\n\r\n\t\t\tif (fontScheme.minorFont) {\r\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet colorScheme = themePart.theme?.colorScheme;\r\n\r\n\t\tif (colorScheme) {\r\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\r\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet cssText = this.styleToString(`.${this.className}`, variables);\r\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t}\r\n\r\n\t// 计算className，小写，默认前缀：\"docx_\"\r\n\tprocessStyleName(className: string): string {\r\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n\t}\r\n\r\n\t// 处理样式继承\r\n\tprocessStyles(styles: IDomStyle[]) {\r\n\t\t//\r\n\t\tlet stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n\t\t// 遍历base_on关系,合并样式\r\n\t\tfor (let style of styles.filter(x => x.basedOn)) {\r\n\t\t\tlet baseStyle = stylesMap[style.basedOn];\r\n\r\n\t\t\tif (baseStyle) {\r\n\t\t\t\t// 深度合并\r\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n\t\t\t\tfor (let baseValues of baseStyle.styles) {\r\n\t\t\t\t\tlet styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n\t\t\t\t\tif (styleValues) {\r\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyle.styles.push({...baseValues, values: {...baseValues.values}});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this.options.debug) {\r\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let style of styles) {\r\n\t\t\tstyle.cssName = this.processStyleName(style.id);\r\n\t\t}\r\n\r\n\t\treturn stylesMap;\r\n\t}\r\n\r\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\r\n\t\tlet styleText = \"\";\r\n\t\tlet stylesMap = this.styleMap;\r\n\t\tlet defaultStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n\t\tfor (let style of styles) {\r\n\t\t\tlet subStyles = style.styles;\r\n\r\n\t\t\tif (style.linked) {\r\n\t\t\t\tlet linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n\t\t\t\tif (linkedStyle)\r\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\r\n\t\t\t\telse if (this.options.debug)\r\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let subStyle of subStyles) {\r\n\t\t\t\t//TODO temporary disable modificators until test it well\r\n\t\t\t\tlet selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n\t\t\t\tif (style.target != subStyle.target)\r\n\t\t\t\t\tselector += ` ${subStyle.target}`;\r\n\r\n\t\t\t\tif (defaultStyles[style.target] == style)\r\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\tprocessNumberings(numberings: IDomNumbering[]) {\r\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\r\n\t\t\tlet style = this.findStyle(num.pStyleName);\r\n\r\n\t\t\tif (style?.paragraphProps?.numbering) {\r\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n\t\tlet styleText = \"\";\r\n\t\tlet resetCounters = [];\r\n\r\n\t\tfor (let num of numberings) {\r\n\t\t\tlet selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n\t\t\tlet listStyleType = \"none\";\r\n\r\n\t\t\tif (num.bullet) {\r\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": \"' '\",\r\n\t\t\t\t\t\"display\": \"inline-block\",\r\n\t\t\t\t\t\"background\": `var(${valiable})`\r\n\t\t\t\t}, num.bullet.style);\r\n\r\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\r\n\t\t\t\t\tlet text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\r\n\t\t\t\t});\r\n\t\t\t} else if (num.levelText) {\r\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\r\n\t\t\t\tlet counterReset = counter + \" \" + (num.start - 1);\r\n\t\t\t\tif (num.level > 0) {\r\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n\t\t\t\t\t\t\"counter-reset\": counterReset\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// reset all level counters with start value\r\n\t\t\t\tresetCounters.push(counterReset);\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n\t\t\t\t\t\"counter-increment\": counter,\r\n\t\t\t\t\t...num.rStyle,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\r\n\t\t\t}\r\n\r\n\t\t\tstyleText += this.styleToString(selector, {\r\n\t\t\t\t\"display\": \"list-item\",\r\n\t\t\t\t\"list-style-position\": \"inside\",\r\n\t\t\t\t\"list-style-type\": listStyleType,\r\n\t\t\t\t...num.pStyle\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (resetCounters.length > 0) {\r\n\t\t\tstyleText += this.styleToString(this.rootSelector, {\r\n\t\t\t\t\"counter-reset\": resetCounters.join(\" \")\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\tnumberingClass(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n\t\tlet result = `${selectors} {\\r\\n`;\r\n\r\n\t\tfor (let key in values) {\r\n\t\t\tif (key.startsWith('$'))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\r\n\t\t}\r\n\r\n\t\tif (cssText)\r\n\t\t\tresult += cssText;\r\n\r\n\t\treturn result + \"}\\r\\n\";\r\n\t}\r\n\r\n\tnumberingCounter(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n\t\tlet suffMap = {\r\n\t\t\t\"tab\": \"\\\\9\",\r\n\t\t\t\"space\": \"\\\\a0\",\r\n\t\t};\r\n\r\n\t\tlet result = text.replace(/%\\d*/g, s => {\r\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\r\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n\t\t});\r\n\r\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n\t}\r\n\r\n\tnumFormatToCssValue(format: string) {\r\n\t\tlet mapping = {\r\n\t\t\tnone: \"none\",\r\n\t\t\tbullet: \"disc\",\r\n\t\t\tdecimal: \"decimal\",\r\n\t\t\tlowerLetter: \"lower-alpha\",\r\n\t\t\tupperLetter: \"upper-alpha\",\r\n\t\t\tlowerRoman: \"lower-roman\",\r\n\t\t\tupperRoman: \"upper-roman\",\r\n\t\t\tdecimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n\t\t\t// ordinal: \"\", // 1st, 2nd, 3rd,...\r\n\t\t\t// ordinalText: \"\", //First, Second, Third, ...\r\n\t\t\t// cardinalText: \"\", //One,Two Three,...\r\n\t\t\t// numberInDash: \"\", //-1-,-2-,-3-, ...\r\n\t\t\t// hex: \"upper-hexadecimal\",\r\n\t\t\taiueo: \"katakana\",\r\n\t\t\taiueoFullWidth: \"katakana\",\r\n\t\t\tchineseCounting: \"simp-chinese-informal\",\r\n\t\t\tchineseCountingThousand: \"simp-chinese-informal\",\r\n\t\t\tchineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n\t\t\tchosung: \"hangul-consonant\",\r\n\t\t\tideographDigital: \"cjk-ideographic\",\r\n\t\t\tideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n\t\t\tideographLegalTraditional: \"trad-chinese-formal\",\r\n\t\t\tideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n\t\t\tiroha: \"katakana-iroha\",\r\n\t\t\tirohaFullWidth: \"katakana-iroha\",\r\n\t\t\tjapaneseCounting: \"japanese-informal\",\r\n\t\t\tjapaneseDigitalTenThousand: \"cjk-decimal\",\r\n\t\t\tjapaneseLegal: \"japanese-formal\",\r\n\t\t\tthaiNumbers: \"thai\",\r\n\t\t\tkoreanCounting: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital2: \"korean-hanja-informal\",\r\n\t\t\thebrew1: \"hebrew\",\r\n\t\t\thebrew2: \"hebrew\",\r\n\t\t\thindiNumbers: \"devanagari\",\r\n\t\t\tganada: \"hangul\",\r\n\t\t\ttaiwaneseCounting: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseCountingThousand: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseDigital: \"cjk-decimal\",\r\n\t\t};\r\n\r\n\t\treturn mapping[format] ?? format;\r\n\t}\r\n\r\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n\t//     let css = \"\";\r\n\t//     let numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n\t//     let bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n\t//     let topCounters = [];\r\n\t//\r\n\t//     for(let num of numberingPart.numberings) {\r\n\t//         let absNum = numberingMap[num.abstractId];\r\n\t//\r\n\t//         for(let lvl of absNum.levels) {\r\n\t//             let className = this.numberingClass(num.id, lvl.level);\r\n\t//             let listStyleType = \"none\";\r\n\t//\r\n\t//             if(lvl.text && lvl.format == 'decimal') {\r\n\t//                 let counter = this.numberingCounter(num.id, lvl.level);\r\n\t//\r\n\t//                 if (lvl.level > 0) {\r\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n\t//                         \"counter-reset\": counter\r\n\t//                     });\r\n\t//                 } else {\r\n\t//                     topCounters.push(counter);\r\n\t//                 }\r\n\t//\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n\t//                     \"counter-increment\": counter\r\n\t//                 });\r\n\t//             } else if(lvl.bulletPictureId) {\r\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\r\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\t//\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": \"' '\",\r\n\t//                     \"display\": \"inline-block\",\r\n\t//                     \"background\": `var(${variable})`\r\n\t//                 }, pict.style);\r\n\t//\r\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n\t//                     container.appendChild(createStyleElement(text));\r\n\t//                 });\r\n\t//             } else {\r\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n\t//             }\r\n\t//\r\n\t//             css += this.styleToString(`p.${className}`, {\r\n\t//                 \"display\": \"list-item\",\r\n\t//                 \"list-style-position\": \"inside\",\r\n\t//                 \"list-style-type\": listStyleType,\r\n\t//                 //TODO\r\n\t//                 //...num.style\r\n\t//             });\r\n\t//         }\r\n\t//     }\r\n\t//\r\n\t//     if (topCounters.length > 0) {\r\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\r\n\t//             \"counter-reset\": topCounters.join(\" \")\r\n\t//         });\r\n\t//     }\r\n\t//\r\n\t//     return createStyleElement(css);\r\n\t// }\r\n\r\n\t// 字体列表CSS样式\r\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n\t\tfor (let f of fontsPart.fonts) {\r\n\t\t\tfor (let ref of f.embedFontRefs) {\r\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\r\n\t\t\t\t\tlet cssValues = {\r\n\t\t\t\t\t\t'font-family': f.name,\r\n\t\t\t\t\t\t'src': `url(${fontData})`\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\r\n\t\t\t\t\tlet cssText = this.styleToString(\"@font-face\", cssValues);\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t\t\t\t\tthis.refreshTabStops();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 生成父级容器\r\n\trenderWrapper() {\r\n\t\treturn createElement(\"div\", {className: `${this.className}-wrapper`});\r\n\t}\r\n\r\n\t// 复制CSS样式\r\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n\t\tif (!input) {\r\n\t\t\treturn output;\r\n\t\t}\r\n\t\tif (output == null) {\r\n\t\t\toutput = {};\r\n\t\t}\r\n\t\tif (attrs == null) {\r\n\t\t\tattrs = Object.getOwnPropertyNames(input);\r\n\t\t}\r\n\r\n\t\tfor (let key of attrs) {\r\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n\t\t\t\toutput[key] = input[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// 递归明确元素parent父级关系\r\n\tprocessElement(element: OpenXmlElement) {\r\n\t\tif (element.children) {\r\n\t\t\tfor (let e of element.children) {\r\n\t\t\t\te.parent = element;\r\n\t\t\t\t// 判断类型\r\n\t\t\t\tif (e.type == DomType.Table) {\r\n\t\t\t\t\t// 渲染表格\r\n\t\t\t\t\tthis.processTable(e);\r\n\t\t\t\t\tthis.processElement(e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 递归渲染\r\n\t\t\t\t\tthis.processElement(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 处理表格style样式\r\n\tprocessTable(table: WmlTable) {\r\n\t\tfor (let r of table.children) {\r\n\t\t\tfor (let c of r.children) {\r\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据section切分页面\r\n\tsplitBySection(elements: OpenXmlElement[]): Section[] {\r\n\t\t// 当前操作section，elements数组包含子元素\r\n\t\tlet current_section = {sectProps: null, elements: [], is_split: false,};\r\n\t\t// 切分出的所有sections\r\n\t\tlet sections = [current_section];\r\n\r\n\t\tfor (let elem of elements) {\r\n\t\t\t// 标记顶层元素的层级level\r\n\t\t\telem.level = 1;\r\n\t\t\t// 添加elem进入当前操作section\r\n\t\t\tcurrent_section.elements.push(elem);\r\n\t\t\t/* 段落基本结构：paragraph => run => text... */\r\n\t\t\tif (elem.type == DomType.Paragraph) {\r\n\t\t\t\tlet p = elem as WmlParagraph;\r\n\t\t\t\t// 节属性，代表分节符\r\n\t\t\t\tlet sectProps = p.sectionProps;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\t检测段落是否默认存在强制分页符\r\n\t\t\t\t*/\r\n\r\n\t\t\t\t// 查找内置默认段落样式\r\n\t\t\t\tlet default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n\t\t\t\t// 段落内置样式之前存在强制分页符\r\n\t\t\t\tif (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n\t\t\t\t\t// 标记当前section已拆分\r\n\t\t\t\t\tcurrent_section.is_split = true;\r\n\t\t\t\t\t// 保存当前section的sectionProps\r\n\t\t\t\t\tcurrent_section.sectProps = sectProps;\r\n\t\t\t\t\t// 重置新的section\r\n\t\t\t\t\tcurrent_section = {sectProps: null, elements: [], is_split: false};\r\n\t\t\t\t\t// 添加新section\r\n\t\t\t\t\tsections.push(current_section);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 段落部分Break索引\r\n\t\t\t\tlet pBreakIndex = -1;\r\n\t\t\t\t// Run部分Break索引\r\n\t\t\t\tlet rBreakIndex = -1;\r\n\r\n\t\t\t\t// 查询段落中Break索引\r\n\t\t\t\tif (p.children) {\r\n\t\t\t\t\t// 计算段落Break索引\r\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\r\n\t\t\t\t\t\t// 计算Run Break索引\r\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n\t\t\t\t\t\t\t// 如果不是分页符、换行符、分栏符\r\n\t\t\t\t\t\t\tif (t.type != DomType.Break) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 默认忽略lastRenderedPageBreak，\r\n\t\t\t\t\t\t\tif ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n\t\t\t\t\t\t\t\t// 判断前一个p段落，\r\n\t\t\t\t\t\t\t\t// 如果含有分页符、分节符，那它们一定位于上一个section，数组为空；\r\n\t\t\t\t\t\t\t\t// 如果前一个段落是普通段落，数组长度大于0，则代表文字过多超过一页，需要自动分页\r\n\t\t\t\t\t\t\t\treturn current_section.elements.length > 2 || !this.options.ignoreLastRenderedPageBreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 分页符\r\n\t\t\t\t\t\t\tif ((t as WmlBreak).break === \"page\") {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\trBreakIndex = rBreakIndex ?? -1\r\n\t\t\t\t\t\treturn rBreakIndex != -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// 段落Break索引\r\n\t\t\t\tif (pBreakIndex != -1) {\r\n\t\t\t\t\t// 一般情况下，标记当前section：已拆分\r\n\t\t\t\t\tcurrent_section.is_split = true;\r\n\t\t\t\t\t// 检测分页符之前的所有元素是否存在表格\r\n\t\t\t\t\tlet exist_table: boolean = current_section.elements.some((elem) => elem.type === DomType.Table);\r\n\t\t\t\t\t// 存在表格\r\n\t\t\t\t\tif (exist_table) {\r\n\t\t\t\t\t\t// 表格可能需要计算之后拆分，标记当前section：未拆分\r\n\t\t\t\t\t\tcurrent_section.is_split = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 检测分页符之前的所有元素是否存在目录\r\n\t\t\t\t\tlet exist_TOC: boolean = current_section.elements.some((paragraph) => {\r\n\t\t\t\t\t\treturn paragraph.children.some((elem) => elem.type === DomType.Hyperlink && elem?.href?.includes('Toc'));\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// \t存在目录\r\n\t\t\t\t\tif (exist_TOC) {\r\n\t\t\t\t\t\t// 目录可能需要计算之后拆分，标记当前section：未拆分\r\n\t\t\t\t\t\tcurrent_section.is_split = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 段落中存在节属性sectProps/段落Break索引\r\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\r\n\t\t\t\t\t// 保存当前section的sectionProps\r\n\t\t\t\t\tcurrent_section.sectProps = sectProps;\r\n\t\t\t\t\t// 重置新的section\r\n\t\t\t\t\tcurrent_section = {sectProps: null, elements: [], is_split: false};\r\n\t\t\t\t\t// 添加新section\r\n\t\t\t\t\tsections.push(current_section);\r\n\t\t\t\t}\r\n\t\t\t\t// 根据段落Break索引，拆分Run部分\r\n\t\t\t\tif (pBreakIndex != -1) {\r\n\t\t\t\t\t// 即将拆分的Run部分\r\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\r\n\t\t\t\t\t// 是否需要拆分Run\r\n\t\t\t\t\tlet is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || is_split) {\r\n\t\t\t\t\t\t// 原始的Run\r\n\t\t\t\t\t\tlet origin_run = p.children;\r\n\t\t\t\t\t\t// 切出Break索引后面的Run，创建新段落\r\n\t\t\t\t\t\tlet new_paragraph = {...p, children: origin_run.slice(pBreakIndex)};\r\n\t\t\t\t\t\t// 保存Break索引前面的Run\r\n\t\t\t\t\t\tp.children = origin_run.slice(0, pBreakIndex);\r\n\t\t\t\t\t\t// 添加新段落\r\n\t\t\t\t\t\tcurrent_section.elements.push(new_paragraph);\r\n\r\n\t\t\t\t\t\tif (is_split) {\r\n\t\t\t\t\t\t\t// Run下面原始的元素\r\n\t\t\t\t\t\t\tlet origin_elements = breakRun.children;\r\n\t\t\t\t\t\t\t// 切出Run Break索引前面的元素，创建新Run\r\n\t\t\t\t\t\t\tlet newRun = {...breakRun, children: origin_elements.slice(0, rBreakIndex)};\r\n\t\t\t\t\t\t\t// 将新Run放入上一个section的段落\r\n\t\t\t\t\t\t\tp.children.push(newRun);\r\n\t\t\t\t\t\t\t// 切出Run Break索引后面的元素\r\n\t\t\t\t\t\t\tbreakRun.children = origin_elements.slice(rBreakIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// elem元素是表格，需要渲染过程中拆分section\r\n\t\t\tif (elem.type === DomType.Table) {\r\n\t\t\t\t// 标记当前section：未拆分\r\n\t\t\t\tcurrent_section.is_split = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 一个节可能分好几个页，但是节属性section_props存在当前节中最后一段对应的 paragraph 元素的子元素。即：[null,null,null,setPr];\r\n\t\tlet currentSectProps = null;\r\n\t\t// 倒序给每一页填充section_props，方便后期页面渲染\r\n\t\tfor (let i = sections.length - 1; i >= 0; i--) {\r\n\t\t\tif (sections[i].sectProps == null) {\r\n\t\t\t\tsections[i].sectProps = currentSectProps;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentSectProps = sections[i].sectProps\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sections;\r\n\t}\r\n\r\n\t// 生成所有的Page Section\r\n\tasync renderSections(document: DocumentElement) {\r\n\t\t// 生成页面parent父级关系\r\n\t\tthis.processElement(document);\r\n\t\t// 根据options.breakPages，选择是否分页\r\n\t\tlet sections: Section[];\r\n\t\tif (this.options.breakPages) {\r\n\t\t\t// 根据section切分页面\r\n\t\t\tsections = this.splitBySection(document.children);\r\n\t\t} else {\r\n\t\t\t// 不分页则，只有一个section\r\n\t\t\tsections = [{sectProps: document.props, elements: document.children, is_split: false}];\r\n\t\t}\r\n\t\t// 前一个节属性，判断分节符的第一个section\r\n\t\tlet prevProps = null;\r\n\t\t// 遍历生成每一个section\r\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\r\n\t\t\tthis.currentFootnoteIds = [];\r\n\r\n\t\t\tlet section: Section = sections[i];\r\n\r\n\t\t\tlet {sectProps} = section;\r\n\t\t\t// section属性不存在，则使用文档级别props;\r\n\t\t\tsection.sectProps = sectProps ?? document.props;\r\n\t\t\t// 是否第一个section\r\n\t\t\tsection.isFirstSection = prevProps != sectProps;\r\n\t\t\t// 是否最后一个section\r\n\t\t\tsection.isLastSection = i === (l - 1);\r\n\t\t\t// 页码，判断奇偶页码\r\n\t\t\tsection.pageIndex = i;\r\n\t\t\t// 溢出检测默认不开启\r\n\t\t\tsection.checking_overflow = false;\r\n\t\t\t// 将上述数据存储在current_section中\r\n\t\t\tthis.current_section = section;\r\n\t\t\t// 存储前一个节属性\r\n\t\t\tprevProps = sectProps;\r\n\t\t\t// 渲染单个section\r\n\t\t\tawait this.renderSection();\r\n\t\t}\r\n\t}\r\n\r\n\t// 生成单个section,如果发现超出一页，递归拆分出下一个section\r\n\tasync renderSection() {\r\n\t\t// 当前操作的section\r\n\t\tlet section: Section = this.current_section;\r\n\t\t// 解构section中的属性\r\n\t\tlet {is_split, sectProps, isFirstSection, isLastSection, pageIndex} = section;\r\n\t\t// 根据sectProps，创建section\r\n\t\tlet sectionElement = this.createSection(this.className, sectProps);\r\n\t\t// 标记section是否需要拆分\r\n\t\tsectionElement.dataset.splited = String(is_split);\r\n\t\t// 给section添加style样式\r\n\t\tthis.renderStyleValues(this.document.documentPart.body.cssStyle, sectionElement);\r\n\t\t// 渲染section页眉\r\n\t\tif (this.options.renderHeaders) {\r\n\t\t\tawait this.renderHeaderFooterRef(sectProps.headerRefs, sectProps, pageIndex, isFirstSection, sectionElement);\r\n\t\t}\r\n\t\t// 渲染section脚注\r\n\t\tif (this.options.renderFootnotes) {\r\n\t\t\tawait this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n\t\t}\r\n\t\t// 渲染section尾注，判断最后一页\r\n\t\tif (this.options.renderEndnotes && isLastSection) {\r\n\t\t\tawait this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n\t\t}\r\n\t\t// 渲染section页脚\r\n\t\tif (this.options.renderFooters) {\r\n\t\t\tawait this.renderHeaderFooterRef(sectProps.footerRefs, sectProps, pageIndex, isFirstSection, sectionElement);\r\n\t\t}\r\n\t\t// section内容Article元素\r\n\t\tlet contentElement = createElement(\"article\");\r\n\t\t// 根据options.breakPages，设置article的高度\r\n\t\tif (this.options.breakPages) {\r\n\t\t\t// 切分页面，高度固定\r\n\t\t\tcontentElement.style.height = sectProps.contentSize.height;\r\n\t\t} else {\r\n\t\t\t// 不分页则，拥有最小高度\r\n\t\t\tcontentElement.style.minHeight = sectProps.contentSize.height;\r\n\t\t}\r\n\t\t// 缓存当前操作的Article元素\r\n\t\tthis.current_section.contentElement = contentElement;\r\n\t\t// 将Article插入section\r\n\t\tsectionElement.appendChild(contentElement);\r\n\t\t// 标识--开启溢出计算\r\n\t\tthis.current_section.checking_overflow = true;\r\n\t\t// 生成article内容\r\n\t\tawait this.renderElements(section.elements, contentElement);\r\n\t\t// 标识--结束溢出计算\r\n\t\tthis.current_section.checking_overflow = false;\r\n\t}\r\n\r\n\t// 创建Page Section\r\n\tcreateSection(className: string, props: SectionProperties) {\r\n\t\tlet elem = createElement(\"section\", {className});\r\n\r\n\t\tif (props) {\r\n\t\t\tif (props.pageMargins) {\r\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\r\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\r\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\r\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\r\n\t\t\t}\r\n\r\n\t\t\tif (props.pageSize) {\r\n\t\t\t\tif (!this.options.ignoreWidth) {\r\n\t\t\t\t\telem.style.width = props.pageSize.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.options.ignoreHeight) {\r\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\r\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n\t\t\t\telem.style.columnGap = props.columns.space;\r\n\r\n\t\t\t\tif (props.columns.separator) {\r\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 插入生成的section\r\n\t\tthis.wrapper.appendChild(elem);\r\n\r\n\t\treturn elem;\r\n\t}\r\n\r\n\t// TODO 分页不准确，页脚页码混乱\r\n\t// 渲染页眉/页脚的Ref\r\n\tasync renderHeaderFooterRef(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, parent: HTMLElement) {\r\n\t\tif (!refs) return;\r\n\t\t// 查找奇数偶数的ref指向\r\n\t\tlet ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n\t\t\t?? refs.find(x => x.type == \"default\");\r\n\r\n\t\t// 查找ref对应的part部分\r\n\t\tlet part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n\t\tif (part) {\r\n\t\t\tthis.currentPart = part;\r\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\r\n\t\t\t\tthis.processElement(part.rootElement);\r\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\r\n\t\t\t}\r\n\t\t\t// 根据页眉页脚，设置CSS\r\n\t\t\tswitch (part.rootElement.type) {\r\n\t\t\t\tcase DomType.Header:\r\n\t\t\t\t\tpart.rootElement.cssStyle = {\r\n\t\t\t\t\t\tleft: props.pageMargins?.left,\r\n\t\t\t\t\t\twidth: props.contentSize?.width,\r\n\t\t\t\t\t\theight: props.pageMargins?.top,\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DomType.Footer:\r\n\t\t\t\t\tpart.rootElement.cssStyle = {\r\n\t\t\t\t\t\tleft: props.pageMargins?.left,\r\n\t\t\t\t\t\twidth: props.contentSize?.width,\r\n\t\t\t\t\t\theight: props.pageMargins?.bottom,\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('set header/footer style error', part.rootElement.type);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tawait this.renderElements([part.rootElement], parent);\r\n\t\t\tthis.currentPart = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// 渲染脚注/尾注\r\n\tasync renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n\t\tlet notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n\t\tif (notes.length > 0) {\r\n\t\t\tlet oList = createElement(\"ol\", null);\r\n\t\t\tawait this.renderElements(notes, oList);\r\n\t\t\tparent.appendChild(oList);\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据XML对象渲染出多元素，\r\n\tasync renderElements(elems: OpenXmlElement[], parent: HTMLElement | Element) {\r\n\t\tlet is_overflow: Overflow = Overflow.FALSE;\r\n\t\tfor (let i = 0; i < elems.length; i++) {\r\n\t\t\t// 顶层元素\r\n\t\t\tif (elems[i].level === 1) {\r\n\t\t\t\t// 缓存当前操作顶层元素的索引值\r\n\t\t\t\tthis.current_section.elementIndex = i;\r\n\t\t\t}\r\n\t\t\t// 根据XML对象渲染单个元素\r\n\t\t\tlet element = await this.renderElement(elems[i], parent) as Node_DOM;\r\n\t\t\t// 如果溢出文档，跳出循环\r\n\t\t\tif (element?.dataset?.overflow === Overflow.TRUE) {\r\n\t\t\t\tis_overflow = Overflow.TRUE;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn is_overflow;\r\n\t}\r\n\r\n\t// 根据XML对象渲染单个元素\r\n\tasync renderElement(elem: OpenXmlElement, parent?: HTMLElement | Element): Promise<Node_DOM> {\r\n\t\tlet oNode;\r\n\r\n\t\tswitch (elem.type) {\r\n\t\t\tcase DomType.Paragraph:\r\n\t\t\t\toNode = await this.renderParagraph(elem as WmlParagraph, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Run:\r\n\t\t\t\toNode = await this.renderRun(elem as WmlRun, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Text:\r\n\t\t\t\toNode = await this.renderText(elem as WmlText, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Table:\r\n\t\t\t\toNode = await this.renderTable(elem, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Row:\r\n\t\t\t\toNode = await this.renderTableRow(elem, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Cell:\r\n\t\t\t\toNode = await this.renderTableCell(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Hyperlink:\r\n\t\t\t\toNode = await this.renderHyperlink(elem, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Drawing:\r\n\t\t\t\toNode = await this.renderDrawing(elem, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Image:\r\n\t\t\t\toNode = await this.renderImage(elem as IDomImage, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.BookmarkStart:\r\n\t\t\t\toNode = this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.BookmarkEnd:\r\n\t\t\t\toNode = null; //ignore bookmark end\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Tab:\r\n\t\t\t\toNode = await this.renderTab(elem, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Symbol:\r\n\t\t\t\toNode = await this.renderSymbol(elem as WmlSymbol, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Break:\r\n\t\t\t\toNode = await this.renderBreak(elem as WmlBreak, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Inserted:\r\n\t\t\t\toNode = await this.renderInserted(elem);\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tawait this.appendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Deleted:\r\n\t\t\t\toNode = await this.renderDeleted(elem);\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tawait this.appendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.DeletedText:\r\n\t\t\t\toNode = await this.renderDeletedText(elem as WmlText, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.NoBreakHyphen:\r\n\t\t\t\toNode = createElement(\"wbr\");\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tawait this.appendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Footer:\r\n\t\t\t\toNode = await this.renderHeaderFooter(elem, \"footer\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Header:\r\n\t\t\t\toNode = await this.renderHeaderFooter(elem, \"header\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.Footnote:\r\n\t\t\tcase DomType.Endnote:\r\n\t\t\t\toNode = await this.renderContainer(elem, \"li\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.FootnoteReference:\r\n\t\t\t\toNode = this.renderFootnoteReference(elem as WmlNoteReference);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.EndnoteReference:\r\n\t\t\t\toNode = this.renderEndnoteReference(elem as WmlNoteReference);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.VmlElement:\r\n\t\t\t\toNode = await this.renderVmlElement(elem as VmlElement, parent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.VmlPicture:\r\n\t\t\t\toNode = await this.renderVmlPicture(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlMath:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"math\", {xmlns: ns.mathML});\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\toNode.dataset.overflow = await this.appendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlMathParagraph:\r\n\t\t\t\toNode = await this.renderContainer(elem, \"span\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlFraction:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlBase:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, elem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlNumerator:\r\n\t\t\tcase DomType.MmlDenominator:\r\n\t\t\tcase DomType.MmlFunction:\r\n\t\t\tcase DomType.MmlLimit:\r\n\t\t\tcase DomType.MmlBox:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlGroupChar:\r\n\t\t\t\toNode = await this.renderMmlGroupChar(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlLimitLower:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlMatrix:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlMatrixRow:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlRadical:\r\n\t\t\t\toNode = await this.renderMmlRadical(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlSuperscript:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlSubscript:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlDegree:\r\n\t\t\tcase DomType.MmlSuperArgument:\r\n\t\t\tcase DomType.MmlSubArgument:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlFunctionName:\r\n\t\t\t\toNode = await this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlDelimiter:\r\n\t\t\t\toNode = await this.renderMmlDelimiter(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlRun:\r\n\t\t\t\toNode = await this.renderMmlRun(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlNary:\r\n\t\t\t\toNode = await this.renderMmlNary(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlPreSubSuper:\r\n\t\t\t\toNode = await this.renderMmlPreSubSuper(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlBar:\r\n\t\t\t\toNode = await this.renderMmlBar(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DomType.MmlEquationArray:\r\n\t\t\t\toNode = await this.renderMllList(elem);\r\n\t\t\t\t// 作为子元素插入,忽略溢出检测\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tappendChildren(parent, oNode);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn oNode;\r\n\t}\r\n\r\n\t// 判断是否存在分页元素\r\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\r\n\t\t// 分页符、换行符、分栏符\r\n\t\tif (elem.type != DomType.Break) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// 默认以lastRenderedPageBreak作为分页依据\r\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\r\n\t\t}\r\n\t\t// 分页符\r\n\t\tif ((elem as WmlBreak).break === \"page\") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据XML对象渲染子元素，并插入父级元素\r\n\tasync renderChildren(elem: OpenXmlElement, parent: Element) {\r\n\t\treturn await this.renderElements(elem.children, parent);\r\n\t}\r\n\r\n\t// 插入子元素，针对后代元素进行溢出检测\r\n\tasync appendChildren(parent: HTMLElement | Element, children: ChildrenType, xml_element?: OpenXmlElement): Promise<Overflow> {\r\n\t\t// 插入元素\r\n\t\tappendChildren(parent, children);\r\n\t\t// 是否溢出标识\r\n\t\tlet is_overflow: boolean = false;\r\n\t\tlet {is_split, contentElement, pageIndex, elementIndex, checking_overflow, elements} = this.current_section;\r\n\t\t// 当前section已拆分，忽略溢出检测\r\n\t\tif (is_split) {\r\n\t\t\treturn Overflow.UNKNOWN;\r\n\t\t}\r\n\t\t// 当前section未拆分，是否需要溢出检测\r\n\t\tif (checking_overflow) {\r\n\t\t\t// 溢出检测\r\n\t\t\tis_overflow = checkOverflow(contentElement);\r\n\t\t\t// 溢出\r\n\t\t\tif (is_overflow) {\r\n\t\t\t\t// 溢出元素 == row\r\n\t\t\t\tif (xml_element?.type === DomType.Row) {\r\n\t\t\t\t\tlet table: OpenXmlElement = elements[elementIndex];\r\n\t\t\t\t\t// 溢出元素所在tr的索引;\r\n\t\t\t\t\tlet row_index = table.children.findIndex((elem) => elem === xml_element);\r\n\t\t\t\t\t// 查找表格中的table header，可能有多行\r\n\t\t\t\t\tlet table_headers = table.children.filter((row: WmlTableRow) => row.isHeader);\r\n\t\t\t\t\t// 删除table前面已经渲染的row，保留后续未渲染元素\r\n\t\t\t\t\ttable.children.splice(0, row_index);\r\n\t\t\t\t\t// 填充table header\r\n\t\t\t\t\ttable.children = [...table_headers, ...table.children];\r\n\t\t\t\t}\r\n\t\t\t\t// 删除数组前面已经渲染的元素，保留后续为渲染元素\r\n\t\t\t\telements.splice(0, elementIndex);\r\n\t\t\t\t// 重置索引\r\n\t\t\t\telementIndex = 0;\r\n\t\t\t\t// 删除DOM中导致溢出的元素\r\n\t\t\t\tremoveElements(children, parent);\r\n\t\t\t\t// 页码自增+1\r\n\t\t\t\tpageIndex += 1;\r\n\t\t\t\t// 关闭溢出检测，方便后续页眉页脚渲染\r\n\t\t\t\tchecking_overflow = false;\r\n\t\t\t\t// 覆盖current_section的属性\r\n\t\t\t\tthis.current_section = {...this.current_section, pageIndex, checking_overflow, elements, elementIndex};\r\n\t\t\t\t// 重启新一个section的渲染\r\n\t\t\t\tawait this.renderSection();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn is_overflow ? Overflow.TRUE : Overflow.FALSE;\r\n\t}\r\n\r\n\tasync renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n\t\tlet parent = createElement(tagName, props);\r\n\t\tawait this.renderChildren(elem, parent);\r\n\t\treturn parent;\r\n\t}\r\n\r\n\tasync renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n\t\tlet parent = createElementNS(ns, tagName as any, props);\r\n\t\tawait this.renderChildren(elem, parent);\r\n\t\treturn parent;\r\n\t}\r\n\r\n\tasync renderParagraph(elem: WmlParagraph, parent?: HTMLElement | Element) {\r\n\t\tlet oParagraph = createElement(\"p\");\r\n\r\n\t\tlet style = this.findStyle(elem.styleName);\r\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n\t\tthis.renderClass(elem, oParagraph);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oParagraph);\r\n\t\tthis.renderCommonProperties(oParagraph.style, elem);\r\n\t\t// 如果拥有父级\r\n\t\tif (parent) {\r\n\t\t\t// 作为子元素插入,针对此元素进行溢出检测\r\n\t\t\tlet is_overflow: Overflow = await this.appendChildren(parent, oParagraph);\r\n\t\t\tif (is_overflow === Overflow.TRUE) {\r\n\t\t\t\toParagraph.dataset.overflow = Overflow.TRUE\r\n\t\t\t\treturn oParagraph;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n\t\tif (numbering) {\r\n\t\t\toParagraph.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n\t\t}\r\n\r\n\t\t// 针对后代子元素进行溢出检测\r\n\t\toParagraph.dataset.overflow = await this.renderChildren(elem, oParagraph);\r\n\r\n\t\treturn oParagraph;\r\n\t}\r\n\r\n\t// TODO 需要处理溢出\r\n\tasync renderRun(elem: WmlRun, parent?: HTMLElement | Element) {\r\n\t\tif (elem.fieldRun) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet oSpan = createElement(\"span\");\r\n\r\n\t\tif (elem.id) {\r\n\t\t\toSpan.id = elem.id;\r\n\t\t}\r\n\r\n\t\tthis.renderClass(elem, oSpan);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oSpan);\r\n\r\n\t\t// 作为子元素插入，先执行溢出检测，方便对后代元素进行溢出检测\r\n\t\tif (parent) {\r\n\t\t\tlet is_overflow: Overflow = await this.appendChildren(parent, oSpan);\r\n\t\t\tif (is_overflow === Overflow.TRUE) {\r\n\t\t\t\toSpan.dataset.overflow = Overflow.TRUE;\r\n\t\t\t\treturn oSpan;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elem.verticalAlign) {\r\n\t\t\tlet wrapper = createElement(elem.verticalAlign as any);\r\n\t\t\toSpan.dataset.overflow = await this.renderChildren(elem, wrapper);\r\n\t\t\toSpan.dataset.overflow = await this.appendChildren(oSpan, wrapper);\r\n\t\t} else {\r\n\t\t\toSpan.dataset.overflow = await this.renderChildren(elem, oSpan);\r\n\t\t}\r\n\r\n\t\treturn oSpan;\r\n\t}\r\n\r\n\t// TODO 需要处理溢出\r\n\tasync renderText(elem: WmlText, parent?: HTMLElement | Element) {\r\n\t\tlet oText = document.createTextNode(elem.text);\r\n\t\t// 作为子元素插入，忽略溢出检测\r\n\t\tif (parent) {\r\n\t\t\tappendChildren(parent, oText);\r\n\t\t}\r\n\t\treturn oText;\r\n\t}\r\n\r\n\tasync renderTable(elem: WmlTable, parent?: HTMLElement | Element) {\r\n\t\tlet oTable = createElement(\"table\");\r\n\r\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\r\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\r\n\t\tthis.currentVerticalMerge = {};\r\n\t\tthis.currentCellPosition = {col: 0, row: 0};\r\n\r\n\t\tthis.renderClass(elem, oTable);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oTable);\r\n\t\t// 如果拥有父级\r\n\t\tif (parent) {\r\n\t\t\t// 作为子元素插入,针对此元素进行溢出检测\r\n\t\t\tlet is_overflow: Overflow = await this.appendChildren(parent, oTable);\r\n\t\t\tif (is_overflow === Overflow.TRUE) {\r\n\t\t\t\toTable.dataset.overflow = Overflow.TRUE\r\n\t\t\t\treturn oTable;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 渲染表格column列\r\n\t\tif (elem.columns) {\r\n\t\t\tawait this.renderTableColumns(elem.columns, oTable);\r\n\t\t}\r\n\t\t// 针对后代子元素进行溢出检测\r\n\t\toTable.dataset.overflow = await this.renderChildren(elem, oTable);\r\n\r\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\r\n\r\n\t\treturn oTable;\r\n\t}\r\n\r\n\tasync renderTableColumns(columns: WmlTableColumn[], parent?: HTMLElement | Element) {\r\n\t\tlet oColGroup = createElement(\"colgroup\");\r\n\r\n\t\t// 插入子元素,忽略溢出检测\r\n\t\tif (parent) {\r\n\t\t\tappendChildren(parent, oColGroup);\r\n\t\t}\r\n\r\n\t\tfor (let col of columns) {\r\n\t\t\tlet oCol = createElement(\"col\");\r\n\r\n\t\t\tif (col.width) {\r\n\t\t\t\toCol.style.width = col.width;\r\n\t\t\t}\r\n\t\t\tappendChildren(oColGroup, oCol);\r\n\t\t}\r\n\r\n\t\treturn oColGroup;\r\n\t}\r\n\r\n\tasync renderTableRow(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n\t\tlet oTableRow = createElement(\"tr\");\r\n\r\n\t\tthis.currentCellPosition.col = 0;\r\n\r\n\t\tthis.renderClass(elem, oTableRow);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oTableRow);\r\n\t\tthis.currentCellPosition.row++;\r\n\t\t// 后代元素忽略溢出检测\r\n\t\tawait this.renderChildren(elem, oTableRow);\r\n\t\t// 如果拥有父级\r\n\t\tif (parent) {\r\n\t\t\t// 作为子元素插入,针对此元素进行溢出检测\r\n\t\t\toTableRow.dataset.overflow = await this.appendChildren(parent, oTableRow, elem);\r\n\t\t}\r\n\r\n\t\treturn oTableRow;\r\n\t}\r\n\r\n\tasync renderTableCell(elem: WmlTableCell) {\r\n\t\tlet oTableCell = createElement(\"td\");\r\n\r\n\t\tlet key = this.currentCellPosition.col;\r\n\r\n\t\tif (elem.verticalMerge) {\r\n\t\t\tif (elem.verticalMerge == \"restart\") {\r\n\t\t\t\tthis.currentVerticalMerge[key] = oTableCell;\r\n\t\t\t\toTableCell.rowSpan = 1;\r\n\t\t\t} else if (this.currentVerticalMerge[key]) {\r\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\r\n\t\t\t\toTableCell.style.display = \"none\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.currentVerticalMerge[key] = null;\r\n\t\t}\r\n\r\n\t\tthis.renderClass(elem, oTableCell);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oTableCell);\r\n\r\n\t\tif (elem.span) {\r\n\t\t\toTableCell.colSpan = elem.span;\r\n\t\t}\r\n\r\n\t\tthis.currentCellPosition.col += oTableCell.colSpan;\r\n\r\n\t\tawait this.renderChildren(elem, oTableCell);\r\n\t\treturn oTableCell;\r\n\t}\r\n\r\n\tasync renderHyperlink(elem: WmlHyperlink, parent?: HTMLElement | Element) {\r\n\t\tlet oAnchor = createElement(\"a\");\r\n\r\n\t\tthis.renderStyleValues(elem.cssStyle, oAnchor);\r\n\r\n\t\t// 作为子元素插入，先执行溢出检测，方便对后代元素进行溢出检测\r\n\t\tif (parent) {\r\n\t\t\tlet is_overflow: Overflow = await this.appendChildren(parent, oAnchor);\r\n\t\t\tif (is_overflow === Overflow.TRUE) {\r\n\t\t\t\toAnchor.dataset.overflow = Overflow.TRUE\r\n\t\t\t\treturn oAnchor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elem.href) {\r\n\t\t\toAnchor.href = elem.href;\r\n\t\t} else if (elem.id) {\r\n\t\t\tlet rel = this.document.documentPart.rels.find(it => it.id == elem.id && it.targetMode === \"External\");\r\n\t\t\toAnchor.href = rel?.target;\r\n\t\t}\r\n\r\n\t\toAnchor.dataset.overflow = await this.renderChildren(elem, oAnchor);\r\n\r\n\t\treturn oAnchor;\r\n\t}\r\n\r\n\tasync renderDrawing(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n\t\tlet oDrawing = createElement(\"div\");\r\n\r\n\t\toDrawing.style.display = \"inline-block\";\r\n\t\toDrawing.style.position = \"relative\";\r\n\t\toDrawing.style.textIndent = \"0px\";\r\n\r\n\t\t// TODO 外围添加一个元素清除浮动\r\n\r\n\t\t// TODO 去除图片外围的宽高影响\r\n\t\tthis.renderStyleValues(elem.cssStyle, oDrawing);\r\n\t\t// 作为子元素插入，先执行溢出检测，方便对后代元素进行溢出检测\r\n\t\tif (parent) {\r\n\t\t\tlet is_overflow: Overflow = await this.appendChildren(parent, oDrawing);\r\n\t\t\tif (is_overflow === Overflow.TRUE) {\r\n\t\t\t\toDrawing.dataset.overflow = Overflow.TRUE\r\n\t\t\t\treturn oDrawing;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 对后代元素进行溢出检测\r\n\t\toDrawing.dataset.overflow = await this.renderChildren(elem, oDrawing);\r\n\r\n\t\treturn oDrawing;\r\n\t}\r\n\r\n\t// 渲染图片，默认转换blob--异步\r\n\tasync renderImage(elem: IDomImage, parent?: HTMLElement | Element) {\r\n\t\tlet oImage = createElement(\"img\");\r\n\r\n\t\tthis.renderStyleValues(elem.cssStyle, oImage);\r\n\r\n\t\tif (this.document) {\r\n\t\t\toImage.src = await this.document.loadDocumentImage(elem.src, this.currentPart)\r\n\t\t}\r\n\r\n\t\t// 作为子元素插入，执行溢出检测\r\n\t\tif (parent) {\r\n\t\t\toImage.dataset.overflow = await this.appendChildren(parent, oImage);\r\n\t\t}\r\n\r\n\t\treturn oImage;\r\n\t}\r\n\r\n\t// 渲染书签，主要用于定位，导航\r\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n\t\tlet oSpan = createElement(\"span\");\r\n\t\toSpan.id = elem.name;\r\n\t\treturn oSpan;\r\n\t}\r\n\r\n\t// 渲染制表符\r\n\tasync renderTab(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n\t\tlet tabSpan = createElement(\"span\");\r\n\r\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n\t\tif (this.options.experimental) {\r\n\t\t\ttabSpan.className = this.tabStopClass();\r\n\t\t\tlet stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n\t\t\tthis.currentTabs.push({stops, span: tabSpan});\r\n\t\t}\r\n\r\n\t\t// 作为子元素插入，执行溢出检测\r\n\t\tif (parent) {\r\n\t\t\tawait this.appendChildren(parent, tabSpan);\r\n\t\t}\r\n\r\n\t\treturn tabSpan;\r\n\t}\r\n\r\n\tasync renderSymbol(elem: WmlSymbol, parent?: HTMLElement | Element) {\r\n\t\tlet oSpan = createElement(\"span\");\r\n\t\toSpan.style.fontFamily = elem.font;\r\n\t\toSpan.innerHTML = `&#x${elem.char};`\r\n\r\n\t\t// 作为子元素插入，执行溢出检测\r\n\t\tif (parent) {\r\n\t\t\tawait this.appendChildren(parent, oSpan);\r\n\t\t}\r\n\r\n\t\treturn oSpan;\r\n\t}\r\n\r\n\t// 渲染换行符号\r\n\tasync renderBreak(elem: WmlBreak, parent?: HTMLElement | Element) {\r\n\t\tlet oBr: HTMLElement;\r\n\r\n\t\tswitch (elem.break) {\r\n\t\t\t// 分页符\r\n\t\t\tcase \"page\":\r\n\t\t\t\toBr = createElement(\"br\");\r\n\t\t\t\t// 添加class\r\n\t\t\t\toBr.classList.add(\"break\", \"page\");\r\n\t\t\t\tbreak;\r\n\t\t\t// 强制换行\r\n\t\t\tcase \"textWrapping\":\r\n\t\t\t\toBr = createElement(\"br\");\r\n\t\t\t\t// 添加class\r\n\t\t\t\toBr.classList.add(\"break\", \"textWrap\");\r\n\t\t\t\tbreak;\r\n\t\t\t// \tTODO 分栏符\r\n\t\t\tcase \"column\":\r\n\t\t\t\toBr = createElement(\"br\");\r\n\t\t\t\t// 添加class\r\n\t\t\t\toBr.classList.add(\"break\", \"column\");\r\n\t\t\t\tbreak;\r\n\t\t\t// 渲染至尾部分页\r\n\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\toBr = createElement(\"wbr\");\r\n\t\t\t\t// 添加class\r\n\t\t\t\toBr.classList.add(\"break\", \"lastRenderedPageBreak\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t// 作为子元素插入，忽略溢出检测\r\n\t\tif (parent) {\r\n\t\t\tappendChildren(parent, oBr);\r\n\t\t}\r\n\t\treturn oBr;\r\n\t}\r\n\r\n\t// TODO 需要处理溢出\r\n\trenderInserted(elem: OpenXmlElement) {\r\n\t\tif (this.options.renderChanges) {\r\n\t\t\treturn this.renderContainer(elem, \"ins\");\r\n\t\t}\r\n\r\n\t\treturn this.renderContainer(elem, \"span\");\r\n\t}\r\n\r\n\t// TODO 需要处理溢出\r\n\tasync renderDeleted(elem: OpenXmlElement) {\r\n\t\tif (this.options.renderChanges) {\r\n\t\t\treturn await this.renderContainer(elem, \"del\");\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// TODO 需要处理溢出\r\n\tasync renderDeletedText(elem: WmlText, parent?: HTMLElement | Element) {\r\n\t\tlet oDeletedText: Text;\r\n\r\n\t\tif (this.options.renderEndnotes) {\r\n\t\t\toDeletedText = document.createTextNode(elem.text);\r\n\t\t\t// TODO 作为子元素插入，执行溢出检测\r\n\t\t\tif (parent) {\r\n\t\t\t\tawait this.appendChildren(parent, oDeletedText);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toDeletedText = null;\r\n\t\t}\r\n\t\treturn oDeletedText;\r\n\t}\r\n\r\n\t// 渲染页眉页脚\r\n\tasync renderHeaderFooter(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap,) {\r\n\t\tlet oElement: HTMLElement = createElement(tagName);\r\n\t\t// 渲染子元素\r\n\t\tawait this.renderChildren(elem, oElement);\r\n\t\t// 渲染style样式\r\n\t\tthis.renderStyleValues(elem.cssStyle, oElement);\r\n\r\n\t\treturn oElement;\r\n\t}\r\n\r\n\trenderFootnoteReference(elem: WmlNoteReference) {\r\n\t\tlet oSup = createElement(\"sup\");\r\n\t\tthis.currentFootnoteIds.push(elem.id);\r\n\t\toSup.textContent = `${this.currentFootnoteIds.length}`;\r\n\t\treturn oSup;\r\n\t}\r\n\r\n\trenderEndnoteReference(elem: WmlNoteReference) {\r\n\t\tlet oSup = createElement(\"sup\");\r\n\t\tthis.currentEndnoteIds.push(elem.id);\r\n\t\toSup.textContent = `${this.currentEndnoteIds.length}`;\r\n\t\treturn oSup;\r\n\t}\r\n\r\n\tasync renderVmlElement(elem: VmlElement, parent?: HTMLElement | Element): Promise<SVGElement> {\r\n\t\tlet oSvg = createSvgElement(\"svg\");\r\n\r\n\t\toSvg.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n\t\tlet oChildren = await this.renderVmlChildElement(elem);\r\n\r\n\t\tif (elem.imageHref?.id) {\r\n\t\t\tlet source = await this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart);\r\n\t\t\toChildren.setAttribute(\"href\", source);\r\n\t\t}\r\n\t\t// 后代元素忽略溢出检测\r\n\t\tappendChildren(oSvg, oChildren);\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tlet bb = (oSvg.firstElementChild as any).getBBox();\r\n\r\n\t\t\toSvg.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n\t\t\toSvg.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n\t\t});\r\n\t\t// 如果拥有父级\r\n\t\tif (parent) {\r\n\t\t\t// 作为子元素插入,针对此元素进行溢出检测\r\n\t\t\toSvg.dataset.overflow = await this.appendChildren(parent, oSvg);\r\n\t\t}\r\n\t\treturn oSvg;\r\n\t}\r\n\r\n\tasync renderVmlPicture(elem: OpenXmlElement) {\r\n\t\tlet oPictureContainer = createElement(\"div\");\r\n\t\tawait this.renderChildren(elem, oPictureContainer);\r\n\t\treturn oPictureContainer;\r\n\t}\r\n\r\n\tasync renderVmlChildElement(elem: VmlElement) {\r\n\t\tlet oSvgElement = createSvgElement(elem.tagName as any);\r\n\t\t// set attributes\r\n\t\tObject.entries(elem.attrs).forEach(([k, v]) => oSvgElement.setAttribute(k, v));\r\n\r\n\t\tfor (let child of elem.children) {\r\n\t\t\tif (child.type == DomType.VmlElement) {\r\n\t\t\t\tlet oChild = await this.renderVmlChildElement(child as VmlElement);\r\n\t\t\t\tappendChildren(oSvgElement, oChild);\r\n\t\t\t} else {\r\n\t\t\t\tawait this.renderElement(child as any, oSvgElement);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn oSvgElement;\r\n\t}\r\n\r\n\tasync renderMmlRadical(elem: OpenXmlElement) {\r\n\t\tlet base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\t\tlet oParent: HTMLElement | Element;\r\n\t\tif (elem.props?.hideDegree) {\r\n\t\t\toParent = createElementNS(ns.mathML, \"msqrt\", null);\r\n\t\t\tawait this.renderElements([base], oParent);\r\n\t\t\treturn oParent;\r\n\t\t}\r\n\r\n\t\tlet degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n\t\toParent = createElementNS(ns.mathML, \"mroot\", null);\r\n\t\tawait this.renderElements([base, degree], oParent);\r\n\t\treturn oParent;\r\n\t}\r\n\r\n\tasync renderMmlDelimiter(elem: OpenXmlElement): Promise<MathMLElement> {\r\n\t\tlet oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n\t\t// 开始Char\r\n\t\tlet oBegin = createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']);\r\n\t\tappendChildren(oMrow, oBegin);\r\n\t\t// 子元素\r\n\t\tawait this.renderElements(elem.children, oMrow);\r\n\t\t// 结束char\r\n\t\tlet oEnd = createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']);\r\n\t\tappendChildren(oMrow, oEnd);\r\n\r\n\t\treturn oMrow;\r\n\t}\r\n\r\n\tasync renderMmlNary(elem: OpenXmlElement): Promise<MathMLElement> {\r\n\t\tlet children = [];\r\n\t\tlet grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tlet sup = grouped[DomType.MmlSuperArgument];\r\n\t\tlet sub = grouped[DomType.MmlSubArgument];\r\n\r\n\t\tlet supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n\t\tlet subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n\r\n\t\tlet charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n\t\tif (supElem || subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n\t\t} else if (supElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n\t\t} else if (subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n\t\t} else {\r\n\t\t\tchildren.push(charElem);\r\n\t\t}\r\n\r\n\t\tlet oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n\r\n\t\tappendChildren(oMrow, children);\r\n\r\n\t\tawait this.renderElements(grouped[DomType.MmlBase].children, oMrow);\r\n\r\n\t\treturn oMrow;\r\n\t}\r\n\r\n\tasync renderMmlPreSubSuper(elem: OpenXmlElement) {\r\n\t\tlet children = [];\r\n\t\tlet grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tlet sup = grouped[DomType.MmlSuperArgument];\r\n\t\tlet sub = grouped[DomType.MmlSubArgument];\r\n\t\tlet supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n\t\tlet subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n\t\tlet stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n\t\tchildren.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n\r\n\t\tlet oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n\r\n\t\tappendChildren(oMrow, children);\r\n\r\n\t\tawait this.renderElements(grouped[DomType.MmlBase].children, oMrow);\r\n\r\n\t\treturn oMrow;\r\n\t}\r\n\r\n\tasync renderMmlGroupChar(elem: OpenXmlElement) {\r\n\t\tlet tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n\t\tlet oGroupChar = await this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n\t\tif (elem.props.char) {\r\n\t\t\tlet oMo = createElementNS(ns.mathML, \"mo\", null, [elem.props.char])\r\n\t\t\tappendChildren(oGroupChar, oMo);\r\n\t\t}\r\n\r\n\t\treturn oGroupChar;\r\n\t}\r\n\r\n\tasync renderMmlBar(elem: OpenXmlElement) {\r\n\t\tlet oMrow = await this.renderContainerNS(elem, ns.mathML, \"mrow\") as MathMLElement;\r\n\r\n\t\tswitch (elem.props.position) {\r\n\t\t\tcase \"top\":\r\n\t\t\t\toMrow.style.textDecoration = \"overline\";\r\n\t\t\t\tbreak\r\n\t\t\tcase \"bottom\":\r\n\t\t\t\toMrow.style.textDecoration = \"underline\";\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn oMrow;\r\n\t}\r\n\r\n\tasync renderMmlRun(elem: OpenXmlElement) {\r\n\t\tlet oMs = createElementNS(ns.mathML, \"ms\") as HTMLElement;\r\n\r\n\t\tthis.renderClass(elem, oMs);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oMs);\r\n\t\tawait this.renderChildren(elem, oMs);\r\n\r\n\t\treturn oMs;\r\n\t}\r\n\r\n\tasync renderMllList(elem: OpenXmlElement) {\r\n\t\tlet oMtable = createElementNS(ns.mathML, \"mtable\") as HTMLElement;\r\n\t\t// 添加class类\r\n\t\tthis.renderClass(elem, oMtable);\r\n\t\t// 渲染style样式\r\n\t\tthis.renderStyleValues(elem.cssStyle, oMtable);\r\n\r\n\t\tfor (let child of elem.children) {\r\n\r\n\t\t\tlet oChild = await this.renderElement(child);\r\n\r\n\t\t\tlet oMtd = createElementNS(ns.mathML, \"mtd\", null, [oChild]);\r\n\r\n\t\t\tlet oMtr = createElementNS(ns.mathML, \"mtr\", null, [oMtd]);\r\n\r\n\t\t\tappendChildren(oMtable, oMtr);\r\n\t\t}\r\n\r\n\t\treturn oMtable;\r\n\t}\r\n\r\n\t// 设置元素style样式\r\n\trenderStyleValues(style: Record<string, string>, output: HTMLElement) {\r\n\t\tfor (let k in style) {\r\n\t\t\tif (k.startsWith(\"$\")) {\r\n\t\t\t\toutput.setAttribute(k.slice(1), style[k]);\r\n\t\t\t} else {\r\n\t\t\t\toutput.style[k] = style[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderRunProperties(style: any, props: RunProperties) {\r\n\t\tthis.renderCommonProperties(style, props);\r\n\t}\r\n\r\n\trenderCommonProperties(style: any, props: CommonProperties) {\r\n\t\tif (props == null)\r\n\t\t\treturn;\r\n\r\n\t\tif (props.color) {\r\n\t\t\tstyle[\"color\"] = props.color;\r\n\t\t}\r\n\r\n\t\tif (props.fontSize) {\r\n\t\t\tstyle[\"font-size\"] = props.fontSize;\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加class类名\r\n\trenderClass(input: OpenXmlElement, output: HTMLElement | Element) {\r\n\t\tif (input.className) {\r\n\t\t\toutput.className = input.className;\r\n\t\t}\r\n\r\n\t\tif (input.styleName) {\r\n\t\t\toutput.classList.add(this.processStyleName(input.styleName));\r\n\t\t}\r\n\t}\r\n\r\n\t// 查找内置默认style样式\r\n\tfindStyle(styleName: string) {\r\n\t\treturn styleName && this.styleMap?.[styleName];\r\n\t}\r\n\r\n\ttabStopClass() {\r\n\t\treturn `${this.className}-tab-stop`;\r\n\t}\r\n\r\n\t// 刷新tab制表符\r\n\trefreshTabStops() {\r\n\t\tif (!this.options.experimental) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.tabsTimeout);\r\n\r\n\t\tthis.tabsTimeout = setTimeout(() => {\r\n\t\t\tlet pixelToPoint = computePixelToPoint();\r\n\r\n\t\t\tfor (let tab of this.currentTabs) {\r\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *  操作DOM元素的函数方法\r\n *\r\n */\r\n\r\n// 元素类型\r\ntype ChildrenType = Node[] | Node | Element[] | Element;\r\n\r\n// 根据标签名tagName创建元素\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(tagName: T, props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>): HTMLElementTagNameMap[T] {\r\n\treturn createElementNS(null, tagName, props);\r\n}\r\n\r\n// 根据标签名tagName创建svg元素\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(tagName: T, props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>): SVGElementTagNameMap[T] {\r\n\treturn createElementNS(ns.svg, tagName, props);\r\n}\r\n\r\n// 根据标签名tagName创建带命名空间的元素\r\nfunction createElementNS<T extends keyof MathMLElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): MathMLElementTagNameMap[T];\r\nfunction createElementNS<T extends keyof SVGElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): SVGElementTagNameMap[T];\r\nfunction createElementNS<T extends keyof HTMLElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): HTMLElementTagNameMap[T];\r\nfunction createElementNS<T>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): Element | SVGElement | MathMLElement {\r\n\tlet oParent: Element | SVGElement | MathMLElement;\r\n\tswitch (ns) {\r\n\t\tcase \"http://www.w3.org/1998/Math/MathML\":\r\n\t\t\toParent = document.createElementNS(ns, tagName as keyof MathMLElementTagNameMap);\r\n\t\t\tbreak;\r\n\t\tcase \"http://www.w3.org/2000/svg\":\r\n\t\t\toParent = document.createElementNS(ns, tagName as keyof SVGElementTagNameMap);\r\n\t\t\tbreak;\r\n\t\tcase \"http://www.w3.org/1999/xhtml\":\r\n\t\t\toParent = document.createElement(tagName as keyof HTMLElementTagNameMap);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\toParent = document.createElement(tagName as keyof HTMLElementTagNameMap);\r\n\t}\r\n\r\n\tif (props) {\r\n\t\tObject.assign(oParent, props);\r\n\t}\r\n\r\n\tif (children) {\r\n\t\tappendChildren(oParent, children);\r\n\t}\r\n\r\n\treturn oParent;\r\n}\r\n\r\n// 清空所有子元素\r\nfunction removeAllElements(elem: HTMLElement) {\r\n\telem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: Element, children: ChildrenType): void {\r\n\tif (Array.isArray(children)) {\r\n\t\tparent.append(...children);\r\n\t} else if (children) {\r\n\t\tif (isString(children)) {\r\n\t\t\tparent.append(children);\r\n\t\t} else {\r\n\t\t\tparent.appendChild(children);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 判断文本区是否溢出\r\nfunction checkOverflow(el: HTMLElement) {\r\n\t// 提取原来的overflow属性值\r\n\tlet current_overflow: string = getComputedStyle(el).overflow;\r\n\t//先让溢出效果为 hidden 这样才可以比较 clientHeight和scrollHeight\r\n\tif (!current_overflow || current_overflow === \"visible\") {\r\n\t\tel.style.overflow = \"hidden\";\r\n\t}\r\n\tlet is_overflow: boolean = el.clientHeight < el.scrollHeight;\r\n\r\n\t// 还原overflow属性值\r\n\tel.style.overflow = current_overflow;\r\n\r\n\treturn is_overflow;\r\n}\r\n\r\n// 删除单个或者多个子元素\r\nfunction removeElements(target: Node[] | Node, parent: HTMLElement | Element): void;\r\nfunction removeElements(target: Element[] | Element): void;\r\nfunction removeElements(target: ChildrenType, parent?: HTMLElement | Element): void {\r\n\tif (Array.isArray(target)) {\r\n\t\ttarget.forEach((elem) => {\r\n\t\t\tif (elem instanceof Element) {\r\n\t\t\t\telem.remove()\r\n\t\t\t} else {\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tparent.removeChild(elem)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t} else {\r\n\t\tif (target instanceof Element) {\r\n\t\t\ttarget.remove();\r\n\t\t} else {\r\n\t\t\tif (target) {\r\n\t\t\t\tparent.removeChild(target);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n\treturn createElement(\"style\", {innerHTML: cssText});\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n\telem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n\tlet parent = elem.parent;\r\n\r\n\twhile (parent != null && parent.type != type) {\r\n\t\tparent = parent.parent;\r\n\t}\r\n\r\n\treturn <T>parent;\r\n}\r\n","import {WordDocument} from './word-document';\r\nimport {DomType, WmlTable, IDomNumbering, WmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference} from './document/dom';\r\nimport {CommonProperties} from './document/common';\r\nimport {Options} from './docx-preview';\r\nimport {DocumentElement} from './document/document';\r\nimport {WmlParagraph} from './document/paragraph';\r\nimport {asArray, escapeClassName, isString, keyBy, mergeDeep} from './utils';\r\nimport {computePixelToPoint, updateTabStop} from './javascript';\r\nimport {FontTablePart} from './font-table/font-table';\r\nimport {FooterHeaderReference, SectionProperties, Section} from './document/section';\r\nimport {WmlRun, RunProperties} from './document/run';\r\nimport {WmlBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle} from './document/style';\r\nimport {WmlBaseNote, WmlFootnote} from './notes/elements';\r\nimport {ThemePart} from './theme/theme-part';\r\nimport {BaseHeaderFooterPart} from './header-footer/parts';\r\nimport {Part} from './common/part';\r\nimport {VmlElement} from './vml/vml';\r\n\r\nconst ns = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    mathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n    col: number;\r\n    row: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    rootSelector: string;\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n    currentPart: Part = null;\r\n\r\n    tableVerticalMerges: CellVerticalMergeType[] = [];\r\n    currentVerticalMerge: CellVerticalMergeType = null;\r\n    tableCellPositions: CellPos[] = [];\r\n    currentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n    endnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n    defaultTabSize: string;\r\n    // 当前制表位\r\n    currentTabs: any[] = [];\r\n    tabsTimeout: any = 0;\r\n\r\n    /**\r\n     * Object对象 => HTML标签\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param bodyContainer HTML生成容器\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // styleContainer== null，styleContainer = bodyContainer\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n        // HTML生成容器，清空所有HTML元素\r\n        removeAllElements(bodyContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--内容\r\n        let sectionElements = this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            bodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(bodyContainer, sectionElements);\r\n        }\r\n\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n    }\r\n\r\n    // 渲染默认样式\r\n    renderDefaultStyle() {\r\n        let c = this.className;\r\n        let styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n            section.${c}>header { position: absolute; top: 0; z-index: 1; display: flex; align-items: flex-end; }\r\n\t\t\tsection.${c}>article { z-index: 1; }\r\n\t\t\tsection.${c}>footer { position: absolute; bottom: 0; z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // 文档CSS主题样式\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    // 计算className，小写，默认前缀：\"docx_\"\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n    }\r\n\r\n    // 处理样式继承\r\n    processStyles(styles: IDomStyle[]) {\r\n        //\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n        // 遍历base_on关系,合并样式\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            let baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                // 深度合并\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n                    if (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n                    } else {\r\n                        style.styles.push({...baseValues, values: {...baseValues.values}});\r\n                    }\r\n                }\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        let styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defaultStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            let subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                let linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n                //TODO temporary disable modificators until test it well\r\n                let selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n                if (style.target != subStyle.target)\r\n                    selector += ` ${subStyle.target}`;\r\n\r\n                if (defaultStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    processNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n        let styleText = \"\";\r\n        let resetCounters = [];\r\n\r\n        for (let num of numberings) {\r\n            let selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            let listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    let text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            } else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n                const counterReset = counter + \" \" + (num.start - 1);\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counterReset\r\n                    });\r\n                }\r\n                // reset all level counters with start value\r\n                resetCounters.push(counterReset);\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            } else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (resetCounters.length > 0) {\r\n            styleText += this.styleToString(this.rootSelector, {\r\n                \"counter-reset\": resetCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            if (key.startsWith('$'))\r\n                continue;\r\n\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        let result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        let mapping = {\r\n            none: \"none\",\r\n            bullet: \"disc\",\r\n            decimal: \"decimal\",\r\n            lowerLetter: \"lower-alpha\",\r\n            upperLetter: \"upper-alpha\",\r\n            lowerRoman: \"lower-roman\",\r\n            upperRoman: \"upper-roman\",\r\n            decimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n            // ordinal: \"\", // 1st, 2nd, 3rd,...\r\n            // ordinalText: \"\", //First, Second, Third, ...\r\n            // cardinalText: \"\", //One,Two Three,...\r\n            // numberInDash: \"\", //-1-,-2-,-3-, ...\r\n            // hex: \"upper-hexadecimal\",\r\n            aiueo: \"katakana\",\r\n            aiueoFullWidth: \"katakana\",\r\n            chineseCounting: \"simp-chinese-informal\",\r\n            chineseCountingThousand: \"simp-chinese-informal\",\r\n            chineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n            chosung: \"hangul-consonant\",\r\n            ideographDigital: \"cjk-ideographic\",\r\n            ideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n            ideographLegalTraditional: \"trad-chinese-formal\",\r\n            ideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n            iroha: \"katakana-iroha\",\r\n            irohaFullWidth: \"katakana-iroha\",\r\n            japaneseCounting: \"japanese-informal\",\r\n            japaneseDigitalTenThousand: \"cjk-decimal\",\r\n            japaneseLegal: \"japanese-formal\",\r\n            thaiNumbers: \"thai\",\r\n            koreanCounting: \"korean-hangul-formal\",\r\n            koreanDigital: \"korean-hangul-formal\",\r\n            koreanDigital2: \"korean-hanja-informal\",\r\n            hebrew1: \"hebrew\",\r\n            hebrew2: \"hebrew\",\r\n            hindiNumbers: \"devanagari\",\r\n            ganada: \"hangul\",\r\n            taiwaneseCounting: \"cjk-ideographic\",\r\n            taiwaneseCountingThousand: \"cjk-ideographic\",\r\n            taiwaneseDigital: \"cjk-decimal\",\r\n        };\r\n\r\n        return mapping[format] ?? format;\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    // \tlet css = \"\";\r\n    // \tconst numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    // \tconst bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    // \tconst topCounters = [];\r\n    //\r\n    // \tfor (let num of numberingPart.numberings) {\r\n    // \t\tconst absNum = numberingMap[num.abstractId];\r\n    //\r\n    // \t\tfor (let lvl of absNum.levels) {\r\n    // \t\t\tconst className = this.numberingClass(num.id, lvl.level);\r\n    // \t\t\tlet listStyleType = \"none\";\r\n    //\r\n    // \t\t\tif (lvl.text && lvl.format == 'decimal') {\r\n    // \t\t\t\tconst counter = this.numberingCounter(num.id, lvl.level);\r\n    //\r\n    // \t\t\t\tif (lvl.level > 0) {\r\n    // \t\t\t\t\tcss += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    // \t\t\t\t\t\t\"counter-reset\": counter\r\n    // \t\t\t\t\t});\r\n    // \t\t\t\t} else {\r\n    // \t\t\t\t\ttopCounters.push(counter);\r\n    // \t\t\t\t}\r\n    //\r\n    // \t\t\t\tcss += this.styleToString(`p.${className}:before`, {\r\n    // \t\t\t\t\t\"content\": this.levelTextToContent(lvl.text, num.id),\r\n    // \t\t\t\t\t\"counter-increment\": counter\r\n    // \t\t\t\t});\r\n    // \t\t\t} else if (lvl.bulletPictureId) {\r\n    // \t\t\t\tlet pict = bulletMap[lvl.bulletPictureId];\r\n    // \t\t\t\tlet variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n    //\r\n    // \t\t\t\tcss += this.styleToString(`p.${className}:before`, {\r\n    // \t\t\t\t\t\"content\": \"' '\",\r\n    // \t\t\t\t\t\"display\": \"inline-block\",\r\n    // \t\t\t\t\t\"background\": `var(${variable})`\r\n    // \t\t\t\t}, pict.style);\r\n    //\r\n    // \t\t\t\tthis.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    // \t\t\t\t\tvar text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    // \t\t\t\t\tcontainer.appendChild(createStyleElement(text));\r\n    // \t\t\t\t});\r\n    // \t\t\t} else {\r\n    // \t\t\t\tlistStyleType = this.numFormatToCssValue(lvl.format);\r\n    // \t\t\t}\r\n    //\r\n    // \t\t\tcss += this.styleToString(`p.${className}`, {\r\n    // \t\t\t\t\"display\": \"list-item\",\r\n    // \t\t\t\t\"list-style-position\": \"inside\",\r\n    // \t\t\t\t\"list-style-type\": listStyleType,\r\n    // \t\t\t\t//TODO\r\n    // \t\t\t\t//...num.style\r\n    // \t\t\t});\r\n    // \t\t}\r\n    // \t}\r\n    //\r\n    // \tif (topCounters.length > 0) {\r\n    // \t\tcss += this.styleToString(`.${this.className}-wrapper`, {\r\n    // \t\t\t\"counter-reset\": topCounters.join(\" \")\r\n    // \t\t});\r\n    // \t}\r\n    //\r\n    // \treturn createStyleElement(css);\r\n    // }\r\n\r\n    // 字体列表CSS样式\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n                    this.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 生成父级容器\r\n    renderWrapper(children: HTMLElement[]) {\r\n        return createElement(\"div\", {className: `${this.className}-wrapper`}, children);\r\n    }\r\n\r\n    // 复制CSS样式\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input) {\r\n            return output;\r\n        }\r\n        if (output == null) {\r\n            output = {};\r\n        }\r\n        if (attrs == null) {\r\n            attrs = Object.getOwnPropertyNames(input);\r\n        }\r\n\r\n        for (let key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // 递归明确元素parent父级关系\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (let e of element.children) {\r\n                e.parent = element;\r\n                // 判断类型\r\n                if (e.type == DomType.Table) {\r\n                    // 渲染表格\r\n                    this.processTable(e);\r\n                } else {\r\n                    // 递归渲染\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表格style样式\r\n    processTable(table: WmlTable) {\r\n        for (let r of table.children) {\r\n            for (let c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 根据section切分页面\r\n    splitBySection(elements: OpenXmlElement[]): Section[] {\r\n        // 当前操作section，elements数组包含子元素\r\n        let current_section = {sectProps: null, elements: [], is_split: false,};\r\n        // 切分出的所有sections\r\n        let sections = [current_section];\r\n\r\n        for (let elem of elements) {\r\n            // 添加elem进入当前操作section\r\n            current_section.elements.push(elem);\r\n\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性，代表分节符\r\n                let sectProps = p.sectionProps;\r\n\r\n                /*\r\n                    检测段落是否默认存在强制分页符\r\n                */\r\n\r\n                // 查找内置默认段落样式\r\n                const default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n                // 段落内置样式之前存在强制分页符\r\n                if (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n                    // 标记当前section已拆分\r\n                    current_section.is_split = true;\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = {sectProps: null, elements: [], is_split: false};\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n\r\n                // 段落部分Break索引\r\n                let pBreakIndex = -1;\r\n                // Run部分Break索引\r\n                let rBreakIndex = -1;\r\n\r\n                // 查询段落中Break索引\r\n                if (p.children) {\r\n                    // 计算段落Break索引\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        // 计算Run Break索引\r\n                        rBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n                            // 分页符、换行符、分栏符\r\n                            if (t.type != DomType.Break) {\r\n                                return false;\r\n                            }\r\n                            // 默认忽略lastRenderedPageBreak，\r\n                            if ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n                                // 判断前一个p段落，\r\n                                // 如果含有分页符、分节符，那它们一定位于上一个section，\r\n                                // 如果前一个段落是普通段落，则代表文字过多超过一页，需要自动分页\r\n                                return current_section.elements.length > 1 || !this.options.ignoreLastRenderedPageBreak;\r\n                            }\r\n                            // 分页符\r\n                            if ((t as WmlBreak).break === \"page\") {\r\n                                return true;\r\n                            }\r\n                        });\r\n                        rBreakIndex = rBreakIndex ?? -1\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n\r\n                // 段落中存在节属性sectProps/段落Break索引\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    // 标记当前section已拆分\r\n                    current_section.is_split = true;\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = {sectProps: null, elements: [], is_split: false};\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n\r\n                // 根据段落Break索引，拆分Run部分\r\n                if (pBreakIndex != -1) {\r\n                    // 即将拆分的Run部分\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    // 是否需要拆分Run\r\n                    let is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || is_split) {\r\n                        // 原始的Run\r\n                        let origin_run = p.children;\r\n                        // 切出Break索引后面的Run，创建新段落\r\n                        let new_paragraph = {...p, children: origin_run.slice(pBreakIndex)};\r\n                        // 保存Break索引前面的Run\r\n                        p.children = origin_run.slice(0, pBreakIndex);\r\n                        // 添加新段落\r\n                        current_section.elements.push(new_paragraph);\r\n\r\n                        if (is_split) {\r\n                            // Run下面原始的元素\r\n                            let origin_elements = breakRun.children;\r\n                            // 切出Run Break索引前面的元素，创建新Run\r\n                            let newRun = {...breakRun, children: origin_elements.slice(0, rBreakIndex)};\r\n                            // 将新Run放入上一个section的段落\r\n                            p.children.push(newRun);\r\n                            // 切出Run Break索引后面的元素\r\n                            breakRun.children = origin_elements.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // elem元素是表格，需要渲染过程中拆分section，标记:is_split\r\n            if (elem.type === DomType.Table) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // 处理所有section的section_props\r\n        let currentSectProps = null;\r\n        // 倒序\r\n        for (let i = sections.length - 1; i >= 0; i--) {\r\n            if (sections[i].sectProps == null) {\r\n                sections[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = sections[i].sectProps\r\n            }\r\n        }\r\n        return sections;\r\n    }\r\n\r\n    // 生成所有的Page Section\r\n    renderSections(document: DocumentElement): HTMLElement[] {\r\n        const result = [];\r\n        // 生成页面parent父级关系\r\n        this.processElement(document);\r\n        // 根据options.breakPages，选择是否分页\r\n        let sections: Section[];\r\n        if (this.options.breakPages) {\r\n            // 根据section切分页面\r\n            sections = this.splitBySection(document.children);\r\n        } else {\r\n            // 不分页则，只有一个section\r\n            sections = [{sectProps: document.props, elements: document.children, is_split: false}];\r\n        }\r\n        let prevProps = null;\r\n        // 遍历生成每一个section\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n            const section: Section = sections[i];\r\n            // 页面属性\r\n            const props: SectionProperties = section.sectProps || document.props;\r\n            // 页码\r\n            let pageIndex = result.length;\r\n            // 是否第一个section\r\n            let isFirstSection = prevProps != props;\r\n            // 是否最后一个section\r\n            let isLastSection = i === (l - 1);\r\n            // 渲染单个section，有可能多个section\r\n            let sectionElement: HTMLElement[] = this.renderSection(section, props, document.cssStyle, pageIndex, isFirstSection, isLastSection);\r\n\r\n            result.push(...sectionElement);\r\n            prevProps = props;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 生成单个section\r\n    renderSection(section: Section, props: SectionProperties, sectionStyle: Record<string, string>, pageIndex: number, isFirstSection: boolean, isLastSection: boolean): HTMLElement[] {\r\n        // 根据sectProps，创建section\r\n        const sectionElement = this.createSection(this.className, props);\r\n        // 给section添加style样式\r\n        this.renderStyleValues(sectionStyle, sectionElement);\r\n        // 渲染section页眉\r\n        if (this.options.renderHeaders) {\r\n            this.renderHeaderFooterRef(props.headerRefs, props, pageIndex, isFirstSection, sectionElement);\r\n        }\r\n        // section主体内容\r\n        let contentElement = createElement(\"article\");\r\n        // 根据options.breakPages，设置article的高度\r\n        if (this.options.breakPages) {\r\n            // 不分页则，拥有最小高度\r\n            contentElement.style.minHeight = props.contentSize.height;\r\n        }\r\n\r\n        // 生成article内容\r\n        this.renderElements(section.elements, contentElement);\r\n        // 放入section\r\n        sectionElement.appendChild(contentElement);\r\n\r\n        // 渲染section脚注\r\n        if (this.options.renderFootnotes) {\r\n            this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n        }\r\n        // 渲染section尾注，判断最后一页\r\n        if (this.options.renderEndnotes && isLastSection) {\r\n            this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n        }\r\n        // 渲染section页脚\r\n        if (this.options.renderFooters) {\r\n            this.renderHeaderFooterRef(props.footerRefs, props, pageIndex, isFirstSection, sectionElement);\r\n        }\r\n        return [sectionElement]\r\n    }\r\n\r\n    // 创建Page Section\r\n    createSection(className: string, props: SectionProperties) {\r\n        let oSection = createElement(\"section\", {className});\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                oSection.style.paddingLeft = props.pageMargins.left;\r\n                oSection.style.paddingRight = props.pageMargins.right;\r\n                oSection.style.paddingTop = props.pageMargins.top;\r\n                oSection.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth) {\r\n                    oSection.style.width = props.pageSize.width;\r\n                }\r\n                if (!this.options.ignoreHeight) {\r\n                    oSection.style.minHeight = props.pageSize.height;\r\n                }\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                oSection.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                oSection.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    oSection.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return oSection;\r\n    }\r\n\r\n    // TODO 分页不准确，页脚页码混乱\r\n    // 渲染页眉/页脚的Ref\r\n    renderHeaderFooterRef(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, parent: HTMLElement) {\r\n        if (!refs) return;\r\n        // 查找奇数偶数的ref指向\r\n        let ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        // 查找ref对应的part部分\r\n        let part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n            this.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n            // 根据页眉页脚，设置CSS\r\n            switch (part.rootElement.type) {\r\n                case DomType.Header:\r\n                    part.rootElement.cssStyle = {\r\n                        left: props.pageMargins?.left,\r\n                        width: props.contentSize?.width,\r\n                        height: props.pageMargins?.top,\r\n                    }\r\n                    break;\r\n                case DomType.Footer:\r\n                    part.rootElement.cssStyle = {\r\n                        left: props.pageMargins?.left,\r\n                        width: props.contentSize?.width,\r\n                        height: props.pageMargins?.bottom,\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.warn('set header/footer style error', part.rootElement.type);\r\n                    break;\r\n            }\r\n\r\n            this.renderElements([part.rootElement], parent);\r\n            this.currentPart = null;\r\n        }\r\n    }\r\n\r\n    // 渲染脚注/尾注\r\n    renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n        let notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            let children = this.renderElements(notes);\r\n            let result = createElement(\"ol\", null, children);\r\n            parent.appendChild(result);\r\n        }\r\n    }\r\n\r\n    // 渲染多元素，\r\n    renderElements(elems: OpenXmlElement[], parent?: HTMLElement): Node[] {\r\n        if (elems == null) {\r\n            return null;\r\n        }\r\n\r\n        let result: Node[] = [];\r\n\r\n        for (let i = 0; i < elems.length; i++) {\r\n            let element = this.renderElement(elems[i]);\r\n            if (Array.isArray(element)) {\r\n                result.push(...element);\r\n            } else if (element) {\r\n                result.push(element);\r\n            }\r\n        }\r\n\r\n        if (parent) {\r\n            appendChildren(parent, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 渲染单个元素\r\n    renderElement(elem: OpenXmlElement): Node | Node[] {\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                return this.renderParagraph(elem as WmlParagraph);\r\n\r\n            case DomType.BookmarkStart:\r\n                return this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n            case DomType.BookmarkEnd:\r\n                return null; //ignore bookmark end\r\n\r\n            case DomType.Run:\r\n                return this.renderRun(elem as WmlRun);\r\n\r\n            case DomType.Table:\r\n                return this.renderTable(elem);\r\n\r\n            case DomType.Row:\r\n                return this.renderTableRow(elem);\r\n\r\n            case DomType.Cell:\r\n                return this.renderTableCell(elem);\r\n\r\n            case DomType.Hyperlink:\r\n                return this.renderHyperlink(elem);\r\n\r\n            case DomType.Drawing:\r\n                return this.renderDrawing(elem);\r\n\r\n            case DomType.Image:\r\n                return this.renderImage(elem as IDomImage);\r\n\r\n            case DomType.Text:\r\n                return this.renderText(elem as WmlText);\r\n\r\n            case DomType.DeletedText:\r\n                return this.renderDeletedText(elem as WmlText);\r\n\r\n            case DomType.Tab:\r\n                return this.renderTab(elem);\r\n\r\n            case DomType.Symbol:\r\n                return this.renderSymbol(elem as WmlSymbol);\r\n\r\n            case DomType.Break:\r\n                return this.renderBreak(elem as WmlBreak);\r\n\r\n            case DomType.Footer:\r\n                return this.renderHeaderFooter(elem, \"footer\");\r\n\r\n            case DomType.Header:\r\n                return this.renderHeaderFooter(elem, \"header\");\r\n\r\n            case DomType.Footnote:\r\n            case DomType.Endnote:\r\n                return this.renderContainer(elem, \"li\");\r\n\r\n            case DomType.FootnoteReference:\r\n                return this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.EndnoteReference:\r\n                return this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.NoBreakHyphen:\r\n                return createElement(\"wbr\");\r\n\r\n            case DomType.VmlPicture:\r\n                return this.renderVmlPicture(elem);\r\n\r\n            case DomType.VmlElement:\r\n                return this.renderVmlElement(elem as VmlElement);\r\n\r\n            case DomType.MmlMath:\r\n                return this.renderContainerNS(elem, ns.mathML, \"math\", {xmlns: ns.mathML});\r\n\r\n            case DomType.MmlMathParagraph:\r\n                return this.renderContainer(elem, \"span\");\r\n\r\n            case DomType.MmlFraction:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n            case DomType.MmlBase:\r\n                return this.renderContainerNS(elem, ns.mathML, elem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n\r\n            case DomType.MmlNumerator:\r\n            case DomType.MmlDenominator:\r\n            case DomType.MmlFunction:\r\n            case DomType.MmlLimit:\r\n            case DomType.MmlBox:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlGroupChar:\r\n                return this.renderMmlGroupChar(elem);\r\n\r\n            case DomType.MmlLimitLower:\r\n                return this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n\r\n            case DomType.MmlMatrix:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n\r\n            case DomType.MmlMatrixRow:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n\r\n            case DomType.MmlRadical:\r\n                return this.renderMmlRadical(elem);\r\n\r\n\r\n            case DomType.MmlSuperscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n            case DomType.MmlSubscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n            case DomType.MmlDegree:\r\n            case DomType.MmlSuperArgument:\r\n            case DomType.MmlSubArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlFunctionName:\r\n                return this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n\r\n            case DomType.MmlDelimiter:\r\n                return this.renderMmlDelimiter(elem);\r\n\r\n            case DomType.MmlRun:\r\n                return this.renderMmlRun(elem);\r\n\r\n            case DomType.MmlNary:\r\n                return this.renderMmlNary(elem);\r\n\r\n            case DomType.MmlPreSubSuper:\r\n                return this.renderMmlPreSubSuper(elem);\r\n\r\n            case DomType.MmlBar:\r\n                return this.renderMmlBar(elem);\r\n\r\n            case DomType.MmlEquationArray:\r\n                return this.renderMllList(elem);\r\n\r\n            case DomType.Inserted:\r\n                return this.renderInserted(elem);\r\n\r\n            case DomType.Deleted:\r\n                return this.renderDeleted(elem);\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // 判断是否存在分页元素\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        // 分页符、换行符、分栏符\r\n        if (elem.type != DomType.Break) {\r\n            return false;\r\n        }\r\n        // 默认以lastRenderedPageBreak作为分页依据\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n        }\r\n        // 分页符\r\n        if ((elem as WmlBreak).break === \"page\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    renderChildren(elem: OpenXmlElement, parent?: HTMLElement): Node[] {\r\n        return this.renderElements(elem.children, parent);\r\n    }\r\n\r\n    renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n        return createElement(tagName, props, this.renderChildren(elem));\r\n    }\r\n\r\n    renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n        return createElementNS(ns, tagName, props, this.renderChildren(elem));\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph) {\r\n        let result = createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n        elem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderCommonProperties(result.style, elem);\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            result.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderRun(elem: WmlRun) {\r\n        if (elem.fieldRun)\r\n            return null;\r\n\r\n        const result = createElement(\"span\");\r\n\r\n        if (elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.verticalAlign) {\r\n            const wrapper = createElement(elem.verticalAlign as any);\r\n            this.renderChildren(elem, wrapper);\r\n            result.appendChild(wrapper);\r\n        } else {\r\n            this.renderChildren(elem, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return document.createTextNode(elem.text);\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink) {\r\n        let result = createElement(\"a\");\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.href) {\r\n            result.href = elem.href;\r\n        } else if (elem.id) {\r\n            const rel = this.document.documentPart.rels\r\n                .find(it => it.id == elem.id && it.targetMode === \"External\");\r\n            result.href = rel?.target;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDrawing(elem: OpenXmlElement) {\r\n        let result = createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    // 渲染图片，默认转换blob--异步\r\n    renderImage(elem: IDomImage) {\r\n        let result = createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            this.document\r\n                .loadDocumentImage(elem.src, this.currentPart)\r\n                .then(src => {\r\n                    result.src = src;\r\n                });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDeletedText(elem: WmlText) {\r\n        return this.options.renderEndnotes ? document.createTextNode(elem.text) : null;\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.break == \"textWrapping\") {\r\n            return createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderInserted(elem: OpenXmlElement): Node | Node[] {\r\n        if (this.options.renderChanges) {\r\n            return this.renderContainer(elem, \"ins\");\r\n        }\r\n\r\n        return this.renderChildren(elem);\r\n    }\r\n\r\n    renderDeleted(elem: OpenXmlElement): Node {\r\n        if (this.options.renderChanges) {\r\n            return this.renderContainer(elem, \"del\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        let span = createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    // 渲染页眉页脚\r\n    renderHeaderFooter(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap,) {\r\n\r\n        let result: HTMLElement = createElement(tagName);\r\n        // 渲染子元素\r\n        this.renderChildren(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        let result = createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderEndnoteReference(elem: WmlNoteReference) {\r\n        let result = createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentEndnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    // 渲染制表符\r\n    renderTab(elem: OpenXmlElement) {\r\n        let tabSpan = createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n            tabSpan.className = this.tabStopClass();\r\n            let stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n            this.currentTabs.push({stops, span: tabSpan});\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        let result = createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    renderTable(elem: WmlTable) {\r\n        let oTable = createElement(\"table\");\r\n\r\n        this.tableCellPositions.push(this.currentCellPosition);\r\n        this.tableVerticalMerges.push(this.currentVerticalMerge);\r\n        this.currentVerticalMerge = {};\r\n        this.currentCellPosition = {col: 0, row: 0};\r\n        // 渲染表格column列\r\n        if (elem.columns) {\r\n            oTable.appendChild(this.renderTableColumns(elem.columns));\r\n        }\r\n\r\n        this.renderClass(elem, oTable);\r\n        this.renderChildren(elem, oTable);\r\n        this.renderStyleValues(elem.cssStyle, oTable);\r\n\r\n        this.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n        this.currentCellPosition = this.tableCellPositions.pop();\r\n        return oTable;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[]) {\r\n        let result = createElement(\"colgroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = createElement(\"col\");\r\n\r\n            if (col.width)\r\n                colElem.style.width = col.width;\r\n\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableRow(elem: OpenXmlElement) {\r\n        let result = createElement(\"tr\");\r\n\r\n        this.currentCellPosition.col = 0;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentCellPosition.row++;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell) {\r\n        let result = createElement(\"td\");\r\n\r\n        const key = this.currentCellPosition.col;\r\n\r\n        if (elem.verticalMerge) {\r\n            if (elem.verticalMerge == \"restart\") {\r\n                this.currentVerticalMerge[key] = result;\r\n                result.rowSpan = 1;\r\n            } else if (this.currentVerticalMerge[key]) {\r\n                this.currentVerticalMerge[key].rowSpan += 1;\r\n                result.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.currentVerticalMerge[key] = null;\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span)\r\n            result.colSpan = elem.span;\r\n\r\n        this.currentCellPosition.col += result.colSpan;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderVmlPicture(elem: OpenXmlElement) {\r\n        let result = createElement(\"div\");\r\n        this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    renderVmlElement(elem: VmlElement): SVGElement {\r\n        let container = createSvgElement(\"svg\");\r\n\r\n        container.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n        const result = this.renderVmlChildElement(elem);\r\n\r\n        if (elem.imageHref?.id) {\r\n            this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n                .then(x => result.setAttribute(\"href\", x));\r\n        }\r\n\r\n        container.appendChild(result);\r\n\r\n        requestAnimationFrame(() => {\r\n            const bb = (container.firstElementChild as any).getBBox();\r\n\r\n            container.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n            container.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n        });\r\n\r\n        return container;\r\n    }\r\n\r\n    renderVmlChildElement(elem: VmlElement) {\r\n        const result = createSvgElement(elem.tagName as any);\r\n        Object.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n        for (let child of elem.children) {\r\n            if (child.type == DomType.VmlElement) {\r\n                result.appendChild(this.renderVmlChildElement(child as VmlElement));\r\n            } else {\r\n                result.append(...asArray(this.renderElement(child as any)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderMmlRadical(elem: OpenXmlElement): HTMLElement {\r\n        const base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n        if (elem.props?.hideDegree) {\r\n            return createElementNS(ns.mathML, \"msqrt\", null, this.renderElements([base]));\r\n        }\r\n\r\n        const degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n        return createElementNS(ns.mathML, \"mroot\", null, this.renderElements([base, degree]));\r\n    }\r\n\r\n    renderMmlDelimiter(elem: OpenXmlElement): HTMLElement {\r\n        const children = [];\r\n\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n        children.push(...this.renderElements(elem.children));\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    renderMmlNary(elem: OpenXmlElement): HTMLElement {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\r\n\r\n        const charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n        if (supElem || subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n        } else if (supElem) {\r\n            children.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n        } else if (subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n        } else {\r\n            children.push(charElem);\r\n        }\r\n\r\n        children.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    renderMmlPreSubSuper(elem: OpenXmlElement) {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n        const stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n        children.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n        children.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    renderMmlGroupChar(elem: OpenXmlElement) {\r\n        const tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n        const result = this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n        if (elem.props.char) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mo\", null, [elem.props.char]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderMmlBar(elem: OpenXmlElement) {\r\n        const result = this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n        switch (elem.props.position) {\r\n            case \"top\":\r\n                result.style.textDecoration = \"overline\";\r\n                break\r\n            case \"bottom\":\r\n                result.style.textDecoration = \"underline\";\r\n                break\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderMmlRun(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"ms\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderChildren(elem, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderMllList(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"mtable\");\r\n        // 添加class类\r\n        this.renderClass(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        const children = this.renderChildren(elem);\r\n\r\n        for (let child of children) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mtr\", null, [\r\n                createElementNS(ns.mathML, \"mtd\", null, [child])\r\n            ]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 设置元素style样式\r\n    renderStyleValues(style: Record<string, string>, output: HTMLElement) {\r\n        for (let k in style) {\r\n            if (k.startsWith(\"$\")) {\r\n                output.setAttribute(k.slice(1), style[k]);\r\n            } else {\r\n                output.style[k] = style[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    // 添加class类名\r\n    renderClass(input: OpenXmlElement, output: HTMLElement) {\r\n        if (input.className) {\r\n            output.className = input.className;\r\n        }\r\n\r\n        if (input.styleName) {\r\n            output.classList.add(this.processStyleName(input.styleName));\r\n        }\r\n    }\r\n\r\n    // 查找内置默认style样式\r\n    findStyle(styleName: string) {\r\n        return styleName && this.styleMap?.[styleName];\r\n    }\r\n\r\n    tabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n    }\r\n\r\n    // 刷新tab制表符\r\n    refreshTabStops() {\r\n        if (!this.options.experimental) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this.tabsTimeout);\r\n\r\n        this.tabsTimeout = setTimeout(() => {\r\n            const pixelToPoint = computePixelToPoint();\r\n\r\n            for (let tab of this.currentTabs) {\r\n                updateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(tagName: T, props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>, children?: ChildType[]): HTMLElementTagNameMap[T] {\r\n    return createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(tagName: T, props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>, children?: ChildType[]): SVGElementTagNameMap[T] {\r\n    return createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n    let result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n    Object.assign(result, props);\r\n    children && appendChildren(result, children);\r\n    return result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: HTMLElement | Element, children: (Node | string)[]) {\r\n    children.forEach(child => {\r\n        parent.appendChild(isString(child) ? document.createTextNode(child) : child)\r\n    });\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", {innerHTML: cssText});\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    let parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}\r\n","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertBoolean } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n\r\n    xmlString = removeUTF8BOM(xmlString);\r\n\r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");\r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attrs(elem: Element) {\r\n        return Array.from(elem.attributes);\r\n    }\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    hexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n// 对象深度合并\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n// 转化为数组\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}","import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\n// word文件解析器：blob对象 => Object对象\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\t// 解压缩word文件转换为Office Open XML\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}\r\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_jszip__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["OpenXmlPackage","constructor","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","zip","JSZip","loadAsync","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","root","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlFunction","MmlFunctionName","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlPreSubSuper","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","MmlLimit","MmlLimitLower","MmlMatrix","MmlMatrixRow","MmlBox","MmlBar","MmlGroupChar","defaultDocumentParserOptions","ignoreWidth","debug","ignoreTableWrap","ignoreImageWrap","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","push","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","undefined","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","length","br","Break","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","textContent","join","Text","text","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","verticalJustification","position","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","wrapType","isAnchor","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","degree","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","ascii","ascii_theme","themeValue","east_Asia","east_Asia_theme","complex_script","complex_script_theme","high_ansi","high_ansi_theme","fonts_value","Set","filter","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","i","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","Px","mul","unit","LineHeight","VmlEmu","usage","test","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","leader","parseRunProperty","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","section","origin","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","contentSize","inWrapper","ignoreHeight","ignoreFonts","ignoreLastRenderedPageBreak","breakPages","useBase64URL","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","renderChanges","experimental","data","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","doc","render","HtmlRendererSync","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","Overflow","createElement","tagName","createElementNS","createSvgElement","oParent","document","Object","assign","appendChildren","removeAllElements","innerHTML","Array","isArray","append","isString","appendChild","createStyleElement","cssText","appendComment","comment","createComment","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","wrapper","renderDefaultStyle","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","processNumberings","domNumberings","renderNumbering","fontTablePart","renderFontTable","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","renderWrapper","renderSections","documentPart","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","k","entries","colors","styleToString","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","styleText","defaultStyles","subStyles","linkedStyle","concat","subStyle","numberings","num","findStyle","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","then","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","lvl","selectors","numformat","replace","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","fontsPart","ref","loadFont","fontData","cssValues","attrs","getOwnPropertyNames","hasOwnProperty","processElement","processTable","r","splitBySection","current_section","sectProps","is_split","sections","p","default_paragraph_style","pBreakIndex","rBreakIndex","findIndex","t","exist_table","some","exist_TOC","breakRun","origin_run","new_paragraph","slice","origin_elements","newRun","currentSectProps","prevProps","l","currentFootnoteIds","isFirstSection","isLastSection","pageIndex","checking_overflow","renderSection","sectionElement","createSection","dataset","splited","String","renderStyleValues","renderHeaderFooterRef","renderNotes","contentElement","minHeight","renderElements","paddingLeft","paddingRight","paddingTop","paddingBottom","columnCount","columnGap","columnRule","refs","page","firstOfSection","part","findPartByRelId","noteIds","notesMap","oList","elems","is_overflow","FALSE","elementIndex","renderElement","overflow","TRUE","oNode","renderParagraph","renderRun","renderText","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderBookmarkStart","renderTab","renderSymbol","renderBreak","renderInserted","renderDeleted","renderDeletedText","renderHeaderFooter","Footnote","Endnote","renderContainer","renderFootnoteReference","renderEndnoteReference","VmlElement","renderVmlElement","renderVmlPicture","renderContainerNS","xmlns","renderMmlGroupChar","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMmlPreSubSuper","renderMmlBar","renderMllList","isPageBreakElement","renderChildren","xml_element","UNKNOWN","current_overflow","getComputedStyle","clientHeight","scrollHeight","checkOverflow","row_index","table_headers","splice","Element","remove","removeChild","removeElements","oParagraph","renderClass","renderCommonProperties","classList","add","oSpan","oText","createTextNode","oTable","renderTableColumns","pop","oColGroup","oCol","oTableRow","oTableCell","rowSpan","display","colSpan","oAnchor","rel","it","oDrawing","textIndent","oImage","loadDocumentImage","tabSpan","tabStopClass","stops","findParent","fontFamily","oBr","oDeletedText","oElement","oSup","oSvg","setAttribute","cssStyleText","oChildren","renderVmlChildElement","imageHref","source","requestAnimationFrame","bb","getBBox","Math","ceil","y","oPictureContainer","oSvgElement","oChild","base","oMrow","grouped","sup","sub","supElem","asArray","subElem","charElem","stubElem","oGroupChar","textDecoration","oMs","oMtable","oMtd","renderRunProperties","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","sectionElements","sectionStyle","oSection","colElem","container","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","closest","ebb","getBoundingClientRect","pbb","pcs","tabStops","sort","lastTab","pWidthPt","marginLeft","pOffset","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","item","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","si","lastIndexOf","prefix","URL","toString","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","sources","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","module","exports","__WEBPACK_EXTERNAL_MODULE_jszip__","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}