{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/mathml.scss","webpack://docx/./node_modules/css-loader/dist/runtime/api.js","webpack://docx/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://docx/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/vml/vml.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/compat get default export","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/runtime/jsonp chunk loading","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:\\\"\\\";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/mathml.scss\"],\"names\":[],\"mappings\":\"AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA\",\"sourcesContent\":[\"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";\\r\\n\\r\\nmath {\\r\\n    display: inline-block;\\r\\n    line-height: initial;\\r\\n}\\r\\n\\r\\nmfrac {\\r\\n    display: inline-block;\\r\\n    vertical-align: -50%;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:first-child {\\r\\n        border-bottom: solid thin currentColor;\\r\\n    }\\r\\n\\r\\n    &>* {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsub {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: sub;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsup {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: super;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunder, mover, munderover {\\r\\n    display: inline-flex;\\r\\n    flex-flow: column nowrap;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:not(:first-child) {\\r\\n        font-size: smaller;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunderover {\\r\\n    &>:last-child { order: -1; }\\r\\n}\\r\\n\\r\\nmroot, msqrt {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    border-top: solid thin currentColor;  \\r\\n    margin-top: 0.5px;\\r\\n    vertical-align: middle;  \\r\\n    margin-left: 1ch; \\r\\n\\r\\n    &:before {\\r\\n        content: \\\"\\\";\\r\\n        display: inline-block;\\r\\n        position: absolute;\\r\\n        width: 1ch;\\r\\n        left: -1ch;\\r\\n        top: -1px;\\r\\n        bottom: 0;\\r\\n        background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E\\\");\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n// \r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n  protected _xmlDocument: Document;\r\n\r\n  rels: Relationship[];\r\n\r\n  constructor(protected _package: OpenXmlPackage, public path: string) {\r\n  }\r\n\r\n  async load(): Promise<any> {\r\n    this.rels = await this._package.loadRelationships(this.path);\r\n\r\n    const xmlText = await this._package.load(this.path);\r\n    const xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n    if (this._package.options.keepOrigin) {\r\n      this._xmlDocument = xmlDoc;\r\n    }\r\n\r\n    this.parseXml(xmlDoc.firstElementChild);\r\n  }\r\n\r\n  save() {\r\n    this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n  }\r\n\r\n  protected parseXml(root: Element) {\r\n  }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties, SectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\nimport { parseVmlElement } from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"func\": DomType.MmlFunction,\r\n\t\"fName\": DomType.MmlFunctionName,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sPre\": DomType.MmlPreSubSuper,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n\t\"lim\": DomType.MmlLimit,\r\n\t\"limLow\": DomType.MmlLimitLower,\r\n\t\"m\": DomType.MmlMatrix,\r\n\t\"mr\": DomType.MmlMatrixRow,\r\n\t\"box\": DomType.MmlBox,\r\n\t\"bar\": DomType.MmlBar,\r\n\t\"groupChr\": DomType.MmlGroupChar\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\tignoreWidth: false,\r\n\t\t\tdebug: false,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tvar result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\r\n\t\tvar background = xml.element(xmlDoc, \"background\");\r\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tvar result = {};\r\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tvar children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\r\n\t\t\tcase \"table\": result.target = \"table\"; break;\r\n\t\t\tcase \"character\": result.target = \"span\"; break;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\tvar type = xml.attr(node, \"type\");\r\n\t\tvar selector = \"\";\r\n\t\tvar modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar mapping = {};\r\n\t\tvar bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tvar pict = xml.element(elem, \"pict\");\r\n\t\tvar shape = pict && xml.element(pict, \"shape\");\r\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tvar result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Inserted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Deleted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n\t\tvar anchor = xml.attr(node, \"anchor\");\r\n\t\tvar relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tlet textContent = c.textContent;\r\n\t\t\t\t\t// 是否保留空格\r\n\t\t\t\t\tlet is_preserve_space = xml.attr(c, \"xml:space\") === \"preserve\";\r\n\t\t\t\t\tif (is_preserve_space) {\r\n\t\t\t\t\t\t// TODO \\u00A0 = 不间断空格，英文应该一个空格，中文两个空格，暂时两个空格，后期修复\r\n\t\t\t\t\t\ttextContent = textContent.split(/\\s/).join(\"\\u00A0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tvar run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"vertJc\": result.verticalJustification = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"pos\": result.position = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\r\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tvar choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\r\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n\t\tvar isAnchor = node.localName == \"anchor\";\r\n\r\n\t\t//TODO 计算\r\n\t\t// result.cssStyle[\"margin-left\"] = xml.lengthAttr(node, \"distL\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-top\"] = xml.lengthAttr(node, \"distT\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-right\"] = xml.lengthAttr(node, \"distR\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-bottom\"] = xml.lengthAttr(node, \"distB\", LengthUsage.Emu);\r\n\r\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode)\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\r\n\t\t\t\t\t\tif (offsetNode)\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\twrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tvar g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g)\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wrapType == \"wrapTopAndBottom\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\tif (posX.align) {\r\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (wrapType == \"wrapNone\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\tif (posX.offset)\r\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\tif (posY.offset)\r\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t}\r\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\r\n\t\tvar blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tvar spPr = xml.element(elem, \"spPr\");\r\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (var n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tvar val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\t// 转换Run字体，包含四种，ascii，eastAsia，ComplexScript，高 ANSI Font\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\t// 字体\r\n\t\tlet fonts = [];\r\n\t\t// ascii字体\r\n\t\tlet ascii = xml.attr(node, \"ascii\");\r\n\t\tlet ascii_theme = values.themeValue(node, \"asciiTheme\");\r\n\t\tfonts.push(ascii, ascii_theme);\r\n\t\t// eastAsia\r\n\t\tlet east_Asia = xml.attr(node, \"eastAsia\");\r\n\t\tlet east_Asia_theme = values.themeValue(node, \"eastAsiaTheme\");\r\n\t\tfonts.push(east_Asia, east_Asia_theme);\r\n\t\t// ComplexScript\r\n\t\tlet complex_script = xml.attr(node, \"cs\");\r\n\t\tlet complex_script_theme = values.themeValue(node, \"cstheme\");\r\n\t\tfonts.push(complex_script, complex_script_theme);\r\n\t\t// 高 ANSI Font\r\n\t\tlet high_ansi = xml.attr(node, \"hAnsi\");\r\n\t\tlet high_ansi_theme = values.themeValue(node, \"hAnsiTheme\");\r\n\t\tfonts.push(high_ansi, high_ansi_theme);\r\n\r\n\t\t// 去除重复字体，合并成一个字体配置\r\n\t\tlet fonts_value = [...new Set(fonts)].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0) {\r\n\t\t\tstyle[\"font-family\"] = fonts_value;\r\n\t\t}\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tvar left = xml.lengthAttr(node, \"left\");\r\n\t\tvar start = xml.lengthAttr(node, \"start\");\r\n\t\tvar right = xml.lengthAttr(node, \"right\");\r\n\t\tvar end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tvar before = xml.lengthAttr(node, \"before\");\r\n\t\tvar after = xml.lengthAttr(node, \"after\");\r\n\t\tvar line = xml.intAttr(node, \"line\", null);\r\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE) {\r\n\t\t\t\tcb(<Element>n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tvar v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tvar val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tvar type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\": break;\r\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\r\n\t\t\tcase \"auto\": return \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\": return \"left\";\r\n\t\t\tcase \"center\": return \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\": return \"right\";\r\n\t\t\tcase \"both\": return \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\": return \"sub\";\r\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\": return \"baseline\";\r\n\t\t\tcase \"top\": return \"top\";\r\n\t\t\tcase \"center\": return \"middle\";\r\n\t\t\tcase \"bottom\": return \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { computePixelToPoint } from \"../javascript\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n    compatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n    math: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n\r\n    // Windows系统默认是96dpi，Apple系统默认是72dpi。pt = 1/72(英寸), px = 1/dpi(英寸)\r\n    // 目前只考虑Windows系统，px = pt * 96 / 72 ;\r\n    Px: { mul: 1 / 15, unit: \"px\" },\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, // twentieth = 1/20\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: \"\" },\r\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n\r\n    return `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"color\":\r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlFunction = \"mmlFunction\",\r\n\tMmlFunctionName = \"mmlFunctionName\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlPreSubSuper = \"mmlPreSubSuper\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tMmlLimit = \"mmlLimit\",\r\n\tMmlLimitLower = \"mmlLimitLower\",\r\n\tMmlMatrix = \"mmlMatrix\",\r\n\tMmlMatrixRow = \"mmlMatrixRow\",\r\n\tMmlBox = \"mmlBox\",\r\n\tMmlBar = \"mmlBar\",\r\n\tMmlGroupChar = \"mmlGroupChar\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    props?: Record<string, any>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    props?: Record<string, any>;\r\n\r\n    className?: string;\r\n    styleName?: string;\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    start: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n\tstyleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if(parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Borders, parseBorders } from \"./border\";\r\nimport { Length } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length,\r\n    height: Length,\r\n    orientation: \"landscape\" | string\r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\"\r\n    | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n    | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\",\r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n}\r\n\r\nexport interface Section {\r\n    sectProps: SectionProperties,\r\n    elements: OpenXmlElement[],\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { WordDocument } from './word-document';\r\n\r\nimport { DocumentParser } from './document-parser';\r\n\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    className: string;                      //class name/prefix for default and document style classes\r\n    inWrapper: boolean;                     //enables rendering of wrapper around document content\r\n    ignoreWidth: boolean;                   //disables rendering width of page\r\n    ignoreHeight: boolean;                  //disables rendering height of page\r\n    ignoreFonts: boolean;                   //disables fonts rendering\r\n    breakPages: boolean;                    //enables page breaking on page breaks\r\n    ignoreLastRenderedPageBreak: boolean;   //disables page breaking on lastRenderedPageBreak elements\r\n    experimental: boolean;                  //enables experimental features (tab stops calculation)\r\n    trimXmlDeclaration: boolean;            //if true, xml declaration will be removed from xml documents before parsing\r\n    useBase64URL: boolean;                  //if true, images, fonts, etc. will be converted to base 64 URL, otherwise URL.createObjectURL is used\r\n    useMathMLPolyfill: boolean;             //@deprecated includes MathML polyfills for chrome, edge, etc.\r\n    renderChanges: boolean;                 //enables experimental rendering of document changes (inserions/deletions)\r\n    renderHeaders: boolean;                 //enables headers rendering\r\n    renderFooters: boolean;                 //enables footers rendering\r\n    renderFootnotes: boolean;               //enables footnotes rendering\r\n    renderEndnotes: boolean;                //enables endnotes rendering\r\n    debug: boolean;                         //enables additional logging\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    renderEndnotes: true,\r\n    useBase64URL: false,\r\n    useMathMLPolyfill: false,\r\n    renderChanges: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRenderer(window.document);\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n// TODO DOM元素在内存中，渲染错位\r\nexport async function docx2html(data: Blob | any, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n\r\n    return renderer.renderFragment(doc, styleContainer, ops);\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import { WordDocument } from './word-document';\r\nimport {\r\n    DomType,\r\n    WmlTable,\r\n    IDomNumbering,\r\n    WmlHyperlink,\r\n    IDomImage,\r\n    OpenXmlElement,\r\n    WmlTableColumn,\r\n    WmlTableCell,\r\n    WmlText,\r\n    WmlSymbol,\r\n    WmlBreak,\r\n    WmlNoteReference\r\n} from './document/dom';\r\nimport { CommonProperties } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph } from './document/paragraph';\r\nimport { asArray, escapeClassName, isString, keyBy, mergeDeep } from './utils';\r\nimport { computePixelToPoint, updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { FooterHeaderReference, SectionProperties, Section } from './document/section';\r\nimport { WmlRun, RunProperties } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\r\nimport { ThemePart } from './theme/theme-part';\r\nimport { BaseHeaderFooterPart } from './header-footer/parts';\r\nimport { Part } from './common/part';\r\nimport mathMLCSS from \"./mathml.scss\";\r\nimport { VmlElement } from './vml/vml';\r\n\r\nconst ns = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    mathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n    col: number;\r\n    row: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    rootSelector: string;\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n    currentPart: Part = null;\r\n\r\n    tableVerticalMerges: CellVerticalMergeType[] = [];\r\n    currentVerticalMerge: CellVerticalMergeType = null;\r\n    tableCellPositions: CellPos[] = [];\r\n    currentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n    endnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n    defaultTabSize: string;\r\n    // 当前制表位\r\n    currentTabs: any[] = [];\r\n    tabsTimeout: any = 0;\r\n    // 创建元素函数\r\n    createElement = createElement;\r\n\r\n    constructor(public htmlDocument: Document) {\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML标签\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param bodyContainer HTML生成容器\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n\r\n    async render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // styleContainer== null，styleContainer = bodyContainer\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n        // HTML生成容器，清空所有HTML元素\r\n        removeAllElements(bodyContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            bodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(bodyContainer, sectionElements);\r\n        }\r\n\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML字符串\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n    async renderFragment(document: WordDocument, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // 生成代码片段实例\r\n        const template = this.createElement('template');\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--section内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            template.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(template, sectionElements);\r\n        }\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n\r\n        return template.innerHTML;\r\n    }\r\n\r\n    // 文档CSS主题样式\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    // 字体列表CSS样式\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n                    this.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 计算className，小写，默认前缀：\"docx_\"\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n    }\r\n\r\n    // 处理样式继承\r\n    processStyles(styles: IDomStyle[]) {\r\n        //\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n        // 遍历base_on关系,合并样式\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            let baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                // 深度合并\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n                    if (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n                    } else {\r\n                        style.styles.push({ ...baseValues, values: { ...baseValues.values } });\r\n                    }\r\n                }\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    processNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 递归明确元素parent父级关系\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (let e of element.children) {\r\n                e.parent = element;\r\n                // 判断类型\r\n                if (e.type == DomType.Table) {\r\n                    // 渲染表格\r\n                    this.processTable(e);\r\n                } else {\r\n                    // 递归渲染\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表格style样式\r\n    processTable(table: WmlTable) {\r\n        for (let r of table.children) {\r\n            for (let c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 复制CSS样式\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input) {\r\n            return output;\r\n        }\r\n        if (output == null) {\r\n            output = {};\r\n        }\r\n        if (attrs == null) {\r\n            attrs = Object.getOwnPropertyNames(input);\r\n        }\r\n\r\n        for (let key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // 创建Page Section\r\n    createSection(className: string, props: SectionProperties) {\r\n        let elem = this.createElement(\"section\", { className });\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = props.pageMargins.left;\r\n                elem.style.paddingRight = props.pageMargins.right;\r\n                elem.style.paddingTop = props.pageMargins.top;\r\n                elem.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth) {\r\n                    elem.style.width = props.pageSize.width;\r\n                }\r\n                if (!this.options.ignoreHeight) {\r\n                    elem.style.minHeight = props.pageSize.height;\r\n                    // elem.style.height = props.pageSize.height;\r\n                }\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    // 生成Page Section\r\n    async renderSections(document: DocumentElement): Promise<HTMLElement[]> {\r\n        const result = [];\r\n        // 生成页面parent父级关系\r\n        this.processElement(document);\r\n        // 根据options.breakPages，判断是否分页\r\n        let sections: Section[];\r\n        if (this.options.breakPages) {\r\n            // 根据section切分页面\r\n            sections = this.splitBySection(document.children);\r\n        } else {\r\n            // 不分页则，只有一个section\r\n            sections = [{ sectProps: document.props, elements: document.children }];\r\n        }\r\n\r\n        let prevProps = null;\r\n        // 遍历生成每一个section\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n            const section = sections[i];\r\n            const props = section.sectProps || document.props;\r\n            // 根据sectProps，创建section\r\n            const sectionElement = this.createSection(this.className, props);\r\n            // 给section添加style样式\r\n            this.renderStyleValues(document.cssStyle, sectionElement);\r\n            // 渲染页眉\r\n            if (this.options.renderHeaders) {\r\n                await this.renderHeaderFooterRef(props.headerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n            // 渲染Page内容\r\n            let contentElement = this.createElement(\"article\");\r\n            await this.renderElements(section.elements, contentElement);\r\n            sectionElement.appendChild(contentElement);\r\n            // 渲染脚注\r\n            if (this.options.renderFootnotes) {\r\n                await this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n            }\r\n            // 渲染尾注\r\n            if (this.options.renderEndnotes && i == l - 1) {\r\n                await this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n            }\r\n            // 渲染页脚\r\n            if (this.options.renderFooters) {\r\n                await this.renderHeaderFooterRef(props.footerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n\r\n            result.push(sectionElement);\r\n            prevProps = props;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 渲染页眉/页脚的Ref\r\n    async renderHeaderFooterRef(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\r\n        if (!refs) return;\r\n        // 查找奇数偶数的ref指向\r\n        let ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        // 查找ref对应的part部分\r\n        let part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n            this.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n            // 根据页眉页脚，设置CSS\r\n            switch (part.rootElement.type) {\r\n                case DomType.Header:\r\n                    part.rootElement.cssStyle = {\r\n                        top: props.pageMargins?.header,\r\n                        left: props.pageMargins?.left,\r\n                        right: props.pageMargins?.right,\r\n                    }\r\n                    break;\r\n                case DomType.Footer:\r\n                    part.rootElement.cssStyle = {\r\n                        bottom: props.pageMargins?.footer,\r\n                        left: props.pageMargins?.left,\r\n                        right: props.pageMargins?.right,\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.warn('set header/footer style error', part.rootElement.type);\r\n                    break;\r\n            }\r\n\r\n            await this.renderElements([part.rootElement], into);\r\n            this.currentPart = null;\r\n        }\r\n    }\r\n\r\n    // 判断是否存在分页元素\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        // 分页符、换行符、分栏符\r\n        if (elem.type != DomType.Break) {\r\n            return false;\r\n        }\r\n        // 默认以lastRenderedPageBreak作为分页依据\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n        }\r\n        // 分页符\r\n        if ((elem as WmlBreak).break === \"page\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // 根据section切分页面\r\n    splitBySection(elements: OpenXmlElement[]): Section[] {\r\n        // 当前操作section，elements数组包含子元素\r\n        let current_section = { sectProps: null, elements: [] };\r\n        // 切分出的所有sections\r\n        let sections = [current_section];\r\n\r\n        for (let elem of elements) {\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性，代表分节符\r\n                let sectProps = p.sectionProps;\r\n\r\n                /*\r\n                    检测段落是否默认存在强制分页符\r\n                */\r\n\r\n                // 查找内置默认段落样式\r\n                const default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n                // 段落内置样式之前存在强制分页符\r\n                if (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = { sectProps: null, elements: [] };\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n            }\r\n\r\n            // 添加elem进入当前操作section\r\n            current_section.elements.push(elem);\r\n\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性\r\n                let sectProps = p.sectionProps;\r\n                // 段落部分Break索引\r\n                let pBreakIndex = -1;\r\n                // Run部分Break索引\r\n                let rBreakIndex = -1;\r\n\r\n                // 查询段落中Break索引\r\n                if (p.children) {\r\n                    // 计算段落Break索引\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        // 计算Run Break索引\r\n                        rBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n                            // 分页符、换行符、分栏符\r\n                            if (t.type != DomType.Break) {\r\n                                return false;\r\n                            }\r\n                            // 默认忽略lastRenderedPageBreak，\r\n                            if ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n                                // 判断前一个p段落，\r\n                                // 如果含有分页符、分节符，那它们一定位于上一个section，\r\n                                // 如果前一个段落是普通段落，则代表文字过多超过一页，需要自动分页\r\n                                return current_section.elements.length > 1 || !this.options.ignoreLastRenderedPageBreak;\r\n                            }\r\n                            // 分页符\r\n                            if ((t as WmlBreak).break === \"page\") {\r\n                                return true;\r\n                            }\r\n                        });\r\n                        rBreakIndex = rBreakIndex ?? -1\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n\r\n                // 段落中存在节属性sectProps/段落Break索引\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = { sectProps: null, elements: [] };\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n\r\n                // 根据段落Break索引，拆分Run部分\r\n                if (pBreakIndex != -1) {\r\n                    // 即将拆分的Run部分\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    // 是否需要拆分Run\r\n                    let is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || is_split) {\r\n                        // 原始的Run\r\n                        let origin_run = p.children;\r\n                        // 切出Break索引后面的Run，创建新段落\r\n                        let new_paragraph = { ...p, children: origin_run.slice(pBreakIndex) };\r\n                        // 保存Break索引前面的Run\r\n                        p.children = origin_run.slice(0, pBreakIndex);\r\n                        // 添加新段落\r\n                        current_section.elements.push(new_paragraph);\r\n\r\n                        if (is_split) {\r\n                            // Run下面原始的元素\r\n                            let origin_elements = breakRun.children;\r\n                            // 切出Run Break索引前面的元素，创建新Run\r\n                            let newRun = { ...breakRun, children: origin_elements.slice(0, rBreakIndex) };\r\n                            // 将新Run放入上一个section的段落\r\n                            p.children.push(newRun);\r\n                            // 切出Run Break索引后面的元素\r\n                            breakRun.children = origin_elements.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // TODO elem元素是表格，拆分section\r\n            if (elem.type === DomType.Table) {\r\n                // console.log(elem)\r\n            }\r\n        }\r\n\r\n        // 处理所有section的section_props\r\n        let currentSectProps = null;\r\n        // 倒序\r\n        for (let i = sections.length - 1; i >= 0; i--) {\r\n\r\n            if (sections[i].sectProps == null) {\r\n                sections[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = sections[i].sectProps\r\n            }\r\n        }\r\n        console.log(sections)\r\n        return sections;\r\n    }\r\n\r\n    // 生成父级容器\r\n    renderWrapper(children: HTMLElement[]) {\r\n        return this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\r\n    }\r\n\r\n    // 渲染默认样式\r\n    renderDefaultStyle() {\r\n        let c = this.className;\r\n        let styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n            section.${c}>header { position: absolute; z-index: 1; }\r\n\t\t\tsection.${c}>article { margin-bottom: auto; z-index: 1; }\r\n\t\t\tsection.${c}>footer { position: absolute; z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n\r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement | DocumentFragment) {\r\n        let styleText = \"\";\r\n        let resetCounters = [];\r\n\r\n        for (let num of numberings) {\r\n            let selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            let listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    let text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            } else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n                const counterReset = counter + \" \" + (num.start - 1);\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counterReset\r\n                    });\r\n                }\r\n                // reset all level counters with start value\r\n                resetCounters.push(counterReset);\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            } else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (resetCounters.length > 0) {\r\n            styleText += this.styleToString(this.rootSelector, {\r\n                \"counter-reset\": resetCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        let styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            let subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                let linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n                //TODO temporary disable modificators until test it well\r\n                let selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n                if (style.target != subStyle.target)\r\n                    selector += ` ${subStyle.target}`;\r\n\r\n                if (defautStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // 渲染脚注/尾注\r\n    async renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n        let notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            let children = await this.renderElements(notes);\r\n            let result = this.createElement(\"ol\", null, children);\r\n            parent.appendChild(result);\r\n        }\r\n    }\r\n\r\n    // 渲染单个元素\r\n    async renderElement(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                return this.renderParagraph(elem as WmlParagraph);\r\n\r\n            case DomType.BookmarkStart:\r\n                return this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n            case DomType.BookmarkEnd:\r\n                return null; //ignore bookmark end\r\n\r\n            case DomType.Run:\r\n                return this.renderRun(elem as WmlRun);\r\n\r\n            case DomType.Table:\r\n                return this.renderTable(elem);\r\n\r\n            case DomType.Row:\r\n                return this.renderTableRow(elem);\r\n\r\n            case DomType.Cell:\r\n                return this.renderTableCell(elem);\r\n\r\n            case DomType.Hyperlink:\r\n                return this.renderHyperlink(elem);\r\n\r\n            case DomType.Drawing:\r\n                return this.renderDrawing(elem);\r\n\r\n            case DomType.Image:\r\n                return await this.renderImage(elem as IDomImage);\r\n\r\n            case DomType.Text:\r\n                return this.renderText(elem as WmlText);\r\n\r\n            case DomType.DeletedText:\r\n                return this.renderDeletedText(elem as WmlText);\r\n\r\n            case DomType.Tab:\r\n                return this.renderTab(elem);\r\n\r\n            case DomType.Symbol:\r\n                return this.renderSymbol(elem as WmlSymbol);\r\n\r\n            case DomType.Break:\r\n                return this.renderBreak(elem as WmlBreak);\r\n\r\n            case DomType.Footer:\r\n                return this.renderHeaderFooter(elem, \"footer\");\r\n\r\n            case DomType.Header:\r\n                return this.renderHeaderFooter(elem, \"header\");\r\n\r\n            case DomType.Footnote:\r\n            case DomType.Endnote:\r\n                return this.renderContainer(elem, \"li\");\r\n\r\n            case DomType.FootnoteReference:\r\n                return this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.EndnoteReference:\r\n                return this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.NoBreakHyphen:\r\n                return this.createElement(\"wbr\");\r\n\r\n            case DomType.VmlPicture:\r\n                return this.renderVmlPicture(elem);\r\n\r\n            case DomType.VmlElement:\r\n                return this.renderVmlElement(elem as VmlElement);\r\n\r\n            case DomType.MmlMath:\r\n                return this.renderContainerNS(elem, ns.mathML, \"math\", { xmlns: ns.mathML });\r\n\r\n            case DomType.MmlMathParagraph:\r\n                return this.renderContainer(elem, \"span\");\r\n\r\n            case DomType.MmlFraction:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n            case DomType.MmlBase:\r\n                return this.renderContainerNS(elem, ns.mathML, elem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n\r\n            case DomType.MmlNumerator:\r\n            case DomType.MmlDenominator:\r\n            case DomType.MmlFunction:\r\n            case DomType.MmlLimit:\r\n            case DomType.MmlBox:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlGroupChar:\r\n                return this.renderMmlGroupChar(elem);\r\n\r\n            case DomType.MmlLimitLower:\r\n                return this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n\r\n            case DomType.MmlMatrix:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n\r\n            case DomType.MmlMatrixRow:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n\r\n            case DomType.MmlRadical:\r\n                return this.renderMmlRadical(elem);\r\n\r\n\r\n            case DomType.MmlSuperscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n            case DomType.MmlSubscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n            case DomType.MmlDegree:\r\n            case DomType.MmlSuperArgument:\r\n            case DomType.MmlSubArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlFunctionName:\r\n                return this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n\r\n            case DomType.MmlDelimiter:\r\n                return this.renderMmlDelimiter(elem);\r\n\r\n            case DomType.MmlRun:\r\n                return this.renderMmlRun(elem);\r\n\r\n            case DomType.MmlNary:\r\n                return this.renderMmlNary(elem);\r\n\r\n            case DomType.MmlPreSubSuper:\r\n                return this.renderMmlPreSubSuper(elem);\r\n\r\n            case DomType.MmlBar:\r\n                return this.renderMmlBar(elem);\r\n\r\n            case DomType.MmlEquationArray:\r\n                return this.renderMllList(elem);\r\n\r\n            case DomType.Inserted:\r\n                return this.renderInserted(elem);\r\n\r\n            case DomType.Deleted:\r\n                return this.renderDeleted(elem);\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    async renderChildren(elem: OpenXmlElement, into?: Element): Promise<Node[]> {\r\n        return await this.renderElements(elem.children, into);\r\n    }\r\n\r\n    // 渲染多元素\r\n    async renderElements(elems: OpenXmlElement[], into?: Element): Promise<Node[]> {\r\n        if (elems == null) {\r\n            return null;\r\n        }\r\n\r\n        let result: Node[] = [];\r\n\r\n        for (let i = 0; i < elems.length; i++) {\r\n            let element = await this.renderElement(elems[i]);\r\n\r\n            if (element) {\r\n                result.push(element as Node);\r\n            }\r\n        }\r\n\r\n        if (into) {\r\n            appendChildren(into, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n        return this.createElement(tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n        return createElementNS(ns, tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderParagraph(elem: WmlParagraph) {\r\n        let result = this.createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n        elem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderCommonProperties(result.style, elem);\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            result.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    async renderHyperlink(elem: WmlHyperlink) {\r\n        let result = this.createElement(\"a\");\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.href) {\r\n            result.href = elem.href;\r\n        } else if (elem.id) {\r\n            const rel = this.document.documentPart.rels\r\n                .find(it => it.id == elem.id && it.targetMode === \"External\");\r\n            result.href = rel?.target;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderDrawing(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderImage(elem: IDomImage) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            result.src = await this.document.loadDocumentImage(elem.src, this.currentPart)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderDeletedText(elem: WmlText) {\r\n        return this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.break == \"textWrapping\") {\r\n            return this.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    async renderInserted(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        if (this.options.renderChanges) {\r\n            return await this.renderContainer(elem, \"ins\");\r\n        }\r\n\r\n        return await this.renderChildren(elem);\r\n    }\r\n\r\n    async renderDeleted(elem: OpenXmlElement): Promise<Node> {\r\n        if (this.options.renderChanges) {\r\n            return await this.renderContainer(elem, \"del\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        let span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    // 渲染页眉页脚\r\n    async renderHeaderFooter(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap,) {\r\n\r\n        let result: HTMLElement = this.createElement(tagName);\r\n        // 渲染子元素\r\n        await this.renderChildren(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderEndnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentEndnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    // 渲染制表符\r\n    renderTab(elem: OpenXmlElement) {\r\n        let tabSpan = this.createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n            tabSpan.className = this.tabStopClass();\r\n            let stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n            this.currentTabs.push({ stops, span: tabSpan });\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        let result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    async renderRun(elem: WmlRun) {\r\n        if (elem.fieldRun)\r\n            return null;\r\n\r\n        const result = this.createElement(\"span\");\r\n\r\n        if (elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.verticalAlign) {\r\n            const wrapper = this.createElement(elem.verticalAlign as any);\r\n            await this.renderChildren(elem, wrapper);\r\n            result.appendChild(wrapper);\r\n        } else {\r\n            await this.renderChildren(elem, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        this.tableCellPositions.push(this.currentCellPosition);\r\n        this.tableVerticalMerges.push(this.currentVerticalMerge);\r\n        this.currentVerticalMerge = {};\r\n        this.currentCellPosition = { col: 0, row: 0 };\r\n\r\n        if (elem.columns) {\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n        this.currentCellPosition = this.tableCellPositions.pop();\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[]) {\r\n        let result = this.createElement(\"colgroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n\r\n            if (col.width)\r\n                colElem.style.width = col.width;\r\n\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableRow(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.currentCellPosition.col = 0;\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentCellPosition.row++;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n        const key = this.currentCellPosition.col;\r\n\r\n        if (elem.verticalMerge) {\r\n            if (elem.verticalMerge == \"restart\") {\r\n                this.currentVerticalMerge[key] = result;\r\n                result.rowSpan = 1;\r\n            } else if (this.currentVerticalMerge[key]) {\r\n                this.currentVerticalMerge[key].rowSpan += 1;\r\n                result.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.currentVerticalMerge[key] = null;\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span)\r\n            result.colSpan = elem.span;\r\n\r\n        this.currentCellPosition.col += result.colSpan;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderVmlPicture(elem: OpenXmlElement) {\r\n        let result = createElement(\"div\");\r\n        await this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    async renderVmlElement(elem: VmlElement): Promise<SVGElement> {\r\n        let container = createSvgElement(\"svg\");\r\n\r\n        container.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n        const result = await this.renderVmlChildElement(elem);\r\n\r\n        if (elem.imageHref?.id) {\r\n            this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n                .then(x => result.setAttribute(\"href\", x));\r\n        }\r\n\r\n        container.appendChild(result);\r\n\r\n        requestAnimationFrame(() => {\r\n            const bb = (container.firstElementChild as any).getBBox();\r\n\r\n            container.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n            container.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n        });\r\n\r\n        return container;\r\n    }\r\n\r\n    async renderVmlChildElement(elem: VmlElement): Promise<any> {\r\n        const result = createSvgElement(elem.tagName as any);\r\n        Object.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n        for (let child of elem.children) {\r\n            if (child.type == DomType.VmlElement) {\r\n                result.appendChild(await this.renderVmlChildElement(child as VmlElement));\r\n            } else {\r\n                result.appendChild(...asArray(await this.renderElement(child as any)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMmlRadical(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n        if (elem.props?.hideDegree) {\r\n            return createElementNS(ns.mathML, \"msqrt\", null, await this.renderElements([base]));\r\n        }\r\n\r\n        const degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n        return createElementNS(ns.mathML, \"mroot\", null, await this.renderElements([base, degree]));\r\n    }\r\n\r\n    async renderMmlDelimiter(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n        children.push(...await this.renderElements(elem.children));\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlNary(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n\r\n\r\n        const charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n        if (supElem || subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n        } else if (supElem) {\r\n            children.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n        } else if (subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n        } else {\r\n            children.push(charElem);\r\n        }\r\n\r\n        children.push(...await this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlPreSubSuper(elem: OpenXmlElement) {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n        const stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n        children.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n        children.push(...await this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlGroupChar(elem: OpenXmlElement) {\r\n        const tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n        const result = await this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n        if (elem.props.char) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mo\", null, [elem.props.char]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMmlBar(elem: OpenXmlElement) {\r\n        const result = await this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n        switch (elem.props.position) {\r\n            case \"top\":\r\n                result.style.textDecoration = \"overline\";\r\n                break\r\n            case \"bottom\":\r\n                result.style.textDecoration = \"underline\";\r\n                break\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMmlRun(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"ms\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        await this.renderChildren(elem, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMllList(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"mtable\");\r\n        // 添加class类\r\n        this.renderClass(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        const childern = await this.renderChildren(elem);\r\n\r\n        for (let child of await this.renderChildren(elem)) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mtr\", null, [\r\n                createElementNS(ns.mathML, \"mtd\", null, [child])\r\n            ]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 设置元素style样式\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        for (let k in style) {\r\n            if (k.startsWith(\"$\")) {\r\n                ouput.setAttribute(k.slice(1), style[k]);\r\n            } else {\r\n                ouput.style[k] = style[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加class类名\r\n    renderClass(input: OpenXmlElement, ouput: HTMLElement) {\r\n        if (input.className) {\r\n            ouput.className = input.className;\r\n        }\r\n\r\n        if (input.styleName) {\r\n            ouput.classList.add(this.processStyleName(input.styleName));\r\n        }\r\n    }\r\n\r\n    // 查找内置默认style样式\r\n    findStyle(styleName: string) {\r\n        return styleName && this.styleMap?.[styleName];\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    tabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            if (key.startsWith('$'))\r\n                continue;\r\n\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        let result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        let mapping = {\r\n            none: \"none\",\r\n            bullet: \"disc\",\r\n            decimal: \"decimal\",\r\n            lowerLetter: \"lower-alpha\",\r\n            upperLetter: \"upper-alpha\",\r\n            lowerRoman: \"lower-roman\",\r\n            upperRoman: \"upper-roman\",\r\n            decimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n            // ordinal: \"\", // 1st, 2nd, 3rd,...\r\n            // ordinalText: \"\", //First, Second, Third, ...\r\n            // cardinalText: \"\", //One,Two Three,...\r\n            // numberInDash: \"\", //-1-,-2-,-3-, ...\r\n            // hex: \"upper-hexadecimal\",\r\n            aiueo: \"katakana\",\r\n            aiueoFullWidth: \"katakana\",\r\n            chineseCounting: \"simp-chinese-informal\",\r\n            chineseCountingThousand: \"simp-chinese-informal\",\r\n            chineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n            chosung: \"hangul-consonant\",\r\n            ideographDigital: \"cjk-ideographic\",\r\n            ideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n            ideographLegalTraditional: \"trad-chinese-formal\",\r\n            ideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n            iroha: \"katakana-iroha\",\r\n            irohaFullWidth: \"katakana-iroha\",\r\n            japaneseCounting: \"japanese-informal\",\r\n            japaneseDigitalTenThousand: \"cjk-decimal\",\r\n            japaneseLegal: \"japanese-formal\",\r\n            thaiNumbers: \"thai\",\r\n            koreanCounting: \"korean-hangul-formal\",\r\n            koreanDigital: \"korean-hangul-formal\",\r\n            koreanDigital2: \"korean-hanja-informal\",\r\n            hebrew1: \"hebrew\",\r\n            hebrew2: \"hebrew\",\r\n            hindiNumbers: \"devanagari\",\r\n            ganada: \"hangul\",\r\n            taiwaneseCounting: \"cjk-ideographic\",\r\n            taiwaneseCountingThousand: \"cjk-ideographic\",\r\n            taiwaneseDigital: \"cjk-decimal\",\r\n        };\r\n\r\n        return mapping[format] ?? format;\r\n    }\r\n\r\n    // 刷新tab制表符\r\n    refreshTabStops() {\r\n        if (!this.options.experimental) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this.tabsTimeout);\r\n\r\n        this.tabsTimeout = setTimeout(() => {\r\n            const pixelToPoint = computePixelToPoint();\r\n\r\n            for (let tab of this.currentTabs) {\r\n                updateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): HTMLElementTagNameMap[T] {\r\n    return createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): SVGElementTagNameMap[T] {\r\n    return createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n    let result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n    Object.assign(result, props);\r\n    children && appendChildren(result, children);\r\n    return result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: Element | DocumentFragment, children: (Node | string)[]) {\r\n    children.forEach(child => {\r\n        parent.appendChild(isString(child) ? document.createTextNode(child) : child)\r\n    });\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", { innerHTML: cssText });\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement | DocumentFragment, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    let parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}\r\n","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertBoolean } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n\r\n    xmlString = removeUTF8BOM(xmlString);\r\n\r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");\r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attrs(elem: Element) {\r\n        return Array.from(elem.attributes);\r\n    }\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    hexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n// 对象深度合并\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n// 转化为数组\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}","import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\n// word文件解析器：blob对象 => Object对象\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\t// 解压缩word文件转换为Office Open XML\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t345: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","id","toString","cssWithMappingToString","list","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","OpenXmlPackage","constructor","_zip","xmlParser","XmlParser","get","path","files","startsWith","substr","normalizePath","update","file","static","input","zip","JSZip","loadAsync","save","type","generateAsync","load","async","Promise","resolve","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","loadRelationships","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","e","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlFunction","MmlFunctionName","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlPreSubSuper","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","MmlLimit","MmlLimitLower","MmlMatrix","MmlMatrixRow","MmlBox","MmlBar","MmlGroupChar","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","textContent","Text","text","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","verticalJustification","position","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","ascii","ascii_theme","themeValue","east_Asia","east_Asia_theme","complex_script","complex_script_theme","high_ansi","high_ansi_theme","fonts_value","Set","filter","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","Px","mul","unit","LineHeight","VmlEmu","usage","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","useMathMLPolyfill","renderChanges","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","renderFragment","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","svg","mathML","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","isString","createTextNode","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","renderDefaultStyle","MathMLElement","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","processNumberings","domNumberings","renderNumbering","fontTablePart","renderFontTable","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","entries","colors","styleToString","fontsPart","ref","loadFont","then","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","sectProps","prevProps","l","currentFootnoteIds","sectionElement","renderStyleValues","renderHeaderFooterRef","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current_section","p","default_paragraph_style","pBreakIndex","rBreakIndex","findIndex","t","breakRun","is_split","origin_run","new_paragraph","origin_elements","newRun","currentSectProps","log","styleText","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","subStyle","noteIds","notesMap","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderHeaderFooter","Footnote","Endnote","renderContainer","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlGroupChar","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMmlPreSubSuper","renderMmlBar","renderMllList","renderInserted","renderDeleted","elems","renderElement","renderChildren","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","container","setAttribute","cssStyleText","renderVmlChildElement","imageHref","requestAnimationFrame","bb","getBBox","Math","ceil","y","asArray","base","degree","grouped","sup","sub","supElem","subElem","charElem","stubElem","textDecoration","ouput","lvl","selectors","numformat","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","prefix","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","sources","source","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","getter","definition","o","defineProperty","enumerable","obj","prop","prototype","call","toStringTag","baseURI","self","location"],"sourceRoot":""}