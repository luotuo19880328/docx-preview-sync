{"version":3,"file":"docx-preview.min.js","mappings":"sHAAA,eACA,SACA,SACA,SAOA,MAAaA,EAGT,WAAAC,CAAoBC,EAAoBC,GAApB,KAAAD,KAAAA,EAAoB,KAAAC,QAAAA,EAFxC,KAAAC,UAAuB,IAAI,EAAAC,SAG3B,CAEA,GAAAC,CAAIC,GACA,OAAOC,KAAKN,KAAKO,MAsCzB,SAAuBF,GACnB,OAAOA,EAAKG,WAAW,KAAOH,EAAKI,OAAO,GAAKJ,CACnD,CAxC+BK,CAAcL,GACzC,CAEA,MAAAM,CAAON,EAAcO,GACjBN,KAAKN,KAAKa,KAAKR,EAAMO,EACzB,CAEA,iBAAaE,CAAKC,EAAmBd,GACjC,MAAMe,QAAYC,EAAMC,UAAUH,GACxC,OAAO,IAAIjB,EAAekB,EAAKf,EAC7B,CAEA,IAAAkB,CAAKC,EAAY,QACb,OAAOd,KAAKN,KAAKqB,cAAc,CAAED,QACrC,CAEA,IAAAN,CAAKT,EAAce,EAAyB,U,QACxC,OAAkC,QAA3B,EAAc,QAAd,EAAAd,KAAKF,IAAIC,UAAK,eAAEiB,MAAMF,UAAK,QAAIG,QAAQC,QAAQ,KAC1D,CAEA,uBAAMC,CAAkBpB,EAAe,MACnC,IAAIqB,EAAW,cAEf,GAAY,MAARrB,EAAc,CACd,MAAOsB,EAAGC,IAAM,IAAAC,WAAUxB,GAC1BqB,EAAW,GAAGC,UAAUC,Q,CAG5B,MAAME,QAAYxB,KAAKQ,KAAKY,GAClC,OAAOI,GAAM,IAAAC,oBAAmBzB,KAAK0B,iBAAiBF,GAAKG,kBAAmB3B,KAAKJ,WAAa,IAC9F,CAGA,gBAAA8B,CAAiBF,GACb,OAAO,IAAAI,gBAAeJ,EAAKxB,KAAKL,QAAQkC,mBAC5C,EA1CJ,kB,+ECVA,eAIA,aAKE,WAAApC,CAAsBqC,EAAiC/B,GAAjC,KAAA+B,SAAAA,EAAiC,KAAA/B,KAAAA,CACvD,CAEA,UAAMS,GACJR,KAAK+B,WAAa/B,KAAK8B,SAASX,kBAAkBnB,KAAKD,MAEvD,MAAMiC,QAAgBhC,KAAK8B,SAAStB,KAAKR,KAAKD,MACxCkC,EAASjC,KAAK8B,SAASJ,iBAAiBM,GAE1ChC,KAAK8B,SAASnC,QAAQuC,aACxBlC,KAAKmC,aAAeF,GAGtBjC,KAAKoC,SAASH,EAAON,kBACvB,CAEA,IAAAd,GACEb,KAAK8B,SAASzB,OAAOL,KAAKD,MAAM,IAAAsC,oBAAmBrC,KAAKmC,cAC1D,CAEU,QAAAC,CAASE,GACnB,E,cCrBF,IAAYC,E,iGAAZ,SAAYA,GACR,sGACA,4FACA,oFACA,4FACA,sFACA,+FACA,oFACA,0FACA,gGACA,4FACA,4FACH,0FACG,sFACA,sFACA,+GACA,yGACH,4GACA,CAlBD,CAAYA,IAAiB,oBAAjBA,EAAiB,KAoB7B,8BAAmCD,EAAeE,GAC9C,OAAOA,EAAIC,SAASH,GAAMI,KAAIC,IAAK,CAC/BC,GAAIJ,EAAIK,KAAKF,EAAG,MAChB7B,KAAM0B,EAAIK,KAAKF,EAAG,QAClBG,OAAQN,EAAIK,KAAKF,EAAG,UACpBI,WAAYP,EAAIK,KAAKF,EAAG,iBAEhC,C,iGCpCA,eAMA,SACA,QACA,SACA,SACA,SAGA,SACA,SAEW,EAAAK,MAAQ,CAClBC,IAAK,UACLC,MAAO,QACPC,YAAa,QACbC,UAAW,eAGZ,MAAMC,EAAyB,GAEzBC,EAAY,CACjB,MAAS,EAAAC,QAAQC,QACjB,UAAa,EAAAD,QAAQE,iBACrB,EAAK,EAAAF,QAAQG,YACb,KAAQ,EAAAH,QAAQI,YAChB,MAAS,EAAAJ,QAAQK,gBACjB,IAAO,EAAAL,QAAQM,aACf,IAAO,EAAAN,QAAQO,eACf,IAAO,EAAAP,QAAQQ,WACf,IAAO,EAAAR,QAAQS,UACf,EAAK,EAAAT,QAAQU,QACb,KAAQ,EAAAV,QAAQW,eAChB,KAAQ,EAAAX,QAAQY,aAChB,KAAQ,EAAAZ,QAAQa,eAChB,IAAO,EAAAb,QAAQc,iBACf,IAAO,EAAAd,QAAQe,eACf,EAAK,EAAAf,QAAQgB,aACb,KAAQ,EAAAhB,QAAQiB,QAChB,MAAS,EAAAjB,QAAQkB,iBACjB,IAAO,EAAAlB,QAAQmB,SACf,OAAU,EAAAnB,QAAQoB,cAClB,EAAK,EAAApB,QAAQqB,UACb,GAAM,EAAArB,QAAQsB,aACd,IAAO,EAAAtB,QAAQuB,OACf,IAAO,EAAAvB,QAAQwB,OACf,SAAY,EAAAxB,QAAQyB,cAQrB,uBAGC,WAAAvF,CAAYE,GACXK,KAAKL,QAAU,OAAH,QACXsF,aAAa,EACbC,OAAO,GACJvF,EAEL,CAEA,UAAAwF,CAAWlD,EAAiBmD,EAAkBC,GAC7C,IAAIC,EAAS,GAEb,IAAK,IAAIC,KAAM,UAAI9C,SAASR,EAAQmD,GAAW,CAC9C,MAAMI,EAAO,IAAIH,EACjBG,EAAK5C,GAAK,UAAIC,KAAK0C,EAAI,MACvBC,EAAKC,SAAW,UAAI5C,KAAK0C,EAAI,QAC7BC,EAAKE,SAAW1F,KAAK2F,kBAAkBJ,GACvCD,EAAOM,KAAKJ,E,CAGb,OAAOF,CACR,CAEA,iBAAAO,CAAkB5D,GACjB,IAAI6D,EAAQ,UAAIC,QAAQ9D,EAAQ,QAC5B+D,EAAa,UAAID,QAAQ9D,EAAQ,cACjCgE,EAAS,UAAIF,QAAQD,EAAO,UAEhC,MAAO,CACNhF,KAAM,EAAAyC,QAAQ2C,SACdR,SAAU1F,KAAK2F,kBAAkBG,GACjCK,MAAOF,GAAS,IAAAG,wBAAuBH,EAAQ,WAAO,CAAC,EACvDI,SAAUL,EAAahG,KAAKsG,gBAAgBN,GAAc,CAAC,EAE7D,CAEA,eAAAM,CAAgBC,GACf,IAAIjB,EAAS,CAAC,EACVpC,EAAQsD,EAAQC,UAAUF,EAAM,SAMpC,OAJIrD,IACHoC,EAAO,oBAAsBpC,GAGvBoC,CACR,CAEA,iBAAAK,CAAkBI,GACjB,IAAIL,EAAW,GAEf,IAAK,IAAIa,KAAQ,UAAI9D,SAASsD,GAC7B,OAAQQ,EAAKG,WACZ,IAAK,IACJhB,EAASE,KAAK5F,KAAK2G,eAAeJ,IAClC,MAED,IAAK,MACJb,EAASE,KAAK5F,KAAK4G,WAAWL,IAC9B,MAED,IAAK,MACJb,EAASE,QAAQ5F,KAAK6G,SAASN,GAAM5D,GAAK3C,KAAK2F,kBAAkBhD,MAKpE,OAAO+C,CACR,CAEA,eAAAoB,CAAgBC,GACf,IAAIzB,EAAS,GAcb,OAZAkB,EAAQQ,QAAQD,GAASE,IACxB,OAAQA,EAAEP,WACT,IAAK,QACJpB,EAAOM,KAAK5F,KAAKkH,WAAWD,IAC5B,MAED,IAAK,cACJ3B,EAAOM,KAAK5F,KAAKmH,mBAAmBF,I,IAKhC3B,CACR,CAEA,kBAAA6B,CAAmB3B,GAClB,IAAIF,EAAoB,CACvB1C,GAAI,KACJwE,KAAM,KACNtE,OAAQ,KACRuE,QAAS,KACTC,OAAQ,IA2BT,OAxBAd,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,aACJ,IAAIc,EAAM,UAAIzB,QAAQwB,EAAG,OAErBC,GACHlC,EAAOgC,OAAO1B,KAAK,CAClB9C,OAAQ,OACR2E,OAAQzH,KAAK0H,uBAAuBF,EAAK,CAAC,KAE5C,MAED,IAAK,aACJ,IAAIG,EAAM,UAAI5B,QAAQwB,EAAG,OAErBI,GACHrC,EAAOgC,OAAO1B,KAAK,CAClB9C,OAAQ,IACR2E,OAAQzH,KAAK0H,uBAAuBC,EAAK,CAAC,K,IAMxCrC,CACR,CAEA,UAAA4B,CAAW1B,GACV,IAAIF,EAAoB,CACvB1C,GAAI,UAAIC,KAAK2C,EAAM,WACnBoC,UAAW,UAAIC,SAASrC,EAAM,WAC9B4B,KAAM,KACNtE,OAAQ,KACRuE,QAAS,KACTC,OAAQ,GACRQ,OAAQ,MAGT,OAAQ,UAAIjF,KAAK2C,EAAM,SACtB,IAAK,YAAaF,EAAOxC,OAAS,IAAK,MACvC,IAAK,QAASwC,EAAOxC,OAAS,QAAS,MACvC,IAAK,YAAawC,EAAOxC,OAAS,OAsEnC,OAlEA0D,EAAQQ,QAAQxB,GAAMyB,IACrB,OAAQA,EAAEP,WACT,IAAK,UACJpB,EAAO+B,QAAU,UAAIxE,KAAKoE,EAAG,OAC7B,MAED,IAAK,OACJ3B,EAAO8B,KAAO,UAAIvE,KAAKoE,EAAG,OAC1B,MAED,IAAK,OACJ3B,EAAOwC,OAAS,UAAIjF,KAAKoE,EAAG,OAC5B,MAED,IAAK,OACJ3B,EAAOyC,KAAO,UAAIlF,KAAKoE,EAAG,OAC1B,MAED,IAAK,UACJ3B,EAAO0C,QAAU,UAAInF,KAAKoE,EAAG,OAAOgB,MAAM,KAC1C,MAED,IAAK,MACJ3C,EAAOgC,OAAO1B,KAAK,CAClB9C,OAAQ,IACR2E,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,KAEzC3B,EAAO4C,gBAAiB,IAAAC,0BAAyBlB,EAAG,WACpD,MAED,IAAK,MACJ3B,EAAOgC,OAAO1B,KAAK,CAClB9C,OAAQ,OACR2E,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,KAEzC3B,EAAO8C,UAAW,IAAAC,oBAAmBpB,EAAG,WACxC,MAED,IAAK,QACL,IAAK,OACJ3B,EAAOgC,OAAO1B,KAAK,CAClB9C,OAAQ,KACR2E,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,KAEzC,MAED,IAAK,aACJ,IAAK,IAAIqB,KAAKtI,KAAKuI,gBAAgBtB,GAClC3B,EAAOgC,OAAO1B,KAAK0C,GACpB,MAED,IAAK,OACL,IAAK,UACL,IAAK,SACL,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,aAEJ,MAED,QACCtI,KAAKL,QAAQuF,OAASsD,QAAQC,KAAK,gCAAgCxB,EAAEP,a,IAIjEpB,CACR,CAEA,eAAAiD,CAAgB/C,GACf,IAAIF,EAAS,GAETxE,EAAO,UAAI+B,KAAK2C,EAAM,QACtBkD,EAAW,GACXC,EAAc,GAElB,OAAQ7H,GACP,IAAK,WACJ6H,EAAc,aACdD,EAAW,kBACX,MACD,IAAK,UACJC,EAAc,YACdD,EAAW,iBACX,MACD,IAAK,WACJC,EAAc,aACdD,EAAW,eACX,MACD,IAAK,UACJC,EAAc,YACdD,EAAW,cACX,MACD,IAAK,YACJC,EAAc,kBACdD,EAAW,aACX,MACD,IAAK,YACJC,EAAc,kBACdD,EAAW,cACX,MACD,IAAK,YACJC,EAAc,kBACdD,EAAW,aACX,MACD,IAAK,YACJC,EAAc,kBACdD,EAAW,cACX,MACD,QAAS,MAAO,GAgCjB,OA7BAlC,EAAQQ,QAAQxB,GAAMyB,IACrB,OAAQA,EAAEP,WACT,IAAK,MACJpB,EAAOM,KAAK,CACX9C,OAAQ,GAAG4F,MACXE,IAAKD,EACLlB,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,KAEzC,MAED,IAAK,MACJ3B,EAAOM,KAAK,CACX9C,OAAQ,GAAG4F,SACXE,IAAKD,EACLlB,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,KAEzC,MAED,IAAK,QACL,IAAK,OACJ3B,EAAOM,KAAK,CACX9C,OAAQ4F,EACRE,IAAKD,EACLlB,OAAQzH,KAAK0H,uBAAuBT,EAAG,CAAC,K,IAMrC3B,CACR,CAEA,kBAAAuD,CAAmBC,GAClB,IAAIxD,EAAS,GACTyD,EAAU,CAAC,EACXC,EAAU,GAuBd,OArBAxC,EAAQQ,QAAQ8B,GAAO7B,IACtB,OAAQA,EAAEP,WACT,IAAK,cACJ1G,KAAKiJ,uBAAuBhC,EAAG+B,GAC7BE,SAAQC,GAAK7D,EAAOM,KAAKuD,KAC3B,MAED,IAAK,eACJH,EAAQpD,KAAK5F,KAAKoJ,wBAAwBnC,IAC1C,MAED,IAAK,MACJ,IAAIoC,EAAQ,UAAIxG,KAAKoE,EAAG,SACpBqC,EAAgB,UAAIC,YAAYtC,EAAG,gBAAiB,OACxD8B,EAAQO,GAAiBD,E,IAK5B/D,EAAO4D,SAAQC,GAAKA,EAAEvG,GAAKmG,EAAQI,EAAEvG,MAE9B0C,CACR,CAEA,uBAAA8D,CAAwB7C,GACvB,IAAIiD,EAAO,UAAIzD,QAAQQ,EAAM,QACzBkD,EAAQD,GAAQ,UAAIzD,QAAQyD,EAAM,SAClCE,EAAYD,GAAS,UAAI1D,QAAQ0D,EAAO,aAE5C,OAAOC,EAAY,CAClB9G,GAAI,UAAI+G,QAAQpD,EAAM,kBACtBqD,IAAK,UAAI/G,KAAK6G,EAAW,MACzBG,MAAO,UAAIhH,KAAK4G,EAAO,UACpB,IACL,CAEA,sBAAAR,CAAuBzD,EAAewD,GACrC,IAAI1D,EAAS,GACT1C,EAAK,UAAIC,KAAK2C,EAAM,iBAUxB,OARAgB,EAAQQ,QAAQxB,GAAMyB,IAEf,QADEA,EAAEP,WAERpB,EAAOM,KAAK5F,KAAK8J,oBAAoBlH,EAAIqE,EAAG+B,G,IAKxC1D,CACR,CAEA,mBAAAwE,CAAoBlH,EAAY4C,EAAewD,GAC9C,IAAI1D,EAAwB,CAC3B1C,GAAIA,EACJmH,MAAO,UAAIJ,QAAQnE,EAAM,QACzBwE,MAAO,EACPC,gBAAYC,EACZC,OAAQ,CAAC,EACTC,OAAQ,CAAC,EACTC,KAAM,OAwCP,OArCA7D,EAAQQ,QAAQxB,GAAMyB,IACrB,OAAQA,EAAEP,WACT,IAAK,QACJpB,EAAO0E,MAAQ,UAAIL,QAAQ1C,EAAG,OAC9B,MAED,IAAK,MACJjH,KAAK0H,uBAAuBT,EAAG3B,EAAO6E,QACtC,MAED,IAAK,MACJnK,KAAK0H,uBAAuBT,EAAG3B,EAAO8E,QACtC,MAED,IAAK,iBACJ,IAAIxH,EAAK,UAAI+G,QAAQ1C,EAAG,OACxB3B,EAAOgF,OAAStB,EAAQuB,MAAKpB,GAAKA,EAAEvG,IAAMA,IAC1C,MAED,IAAK,UACJ0C,EAAOkF,UAAY,UAAI3H,KAAKoE,EAAG,OAC/B,MAED,IAAK,SACJ3B,EAAO2E,WAAa,UAAIpH,KAAKoE,EAAG,OAChC,MAED,IAAK,SACJ3B,EAAOmF,OAAS,UAAI5H,KAAKoE,EAAG,OAC5B,MAED,IAAK,OACJ3B,EAAO+E,KAAO,UAAIxH,KAAKoE,EAAG,O,IAKtB3B,CACR,CAEA,QAAAuB,CAASrB,EAAekF,GACvB,MAAMC,EAAa,UAAI5E,QAAQP,EAAM,cACrC,OAAOmF,EAAaD,EAAOC,GAAc,EAC1C,CAEA,aAAAC,CAAcpF,EAAeqF,G,QAC5B,MAAuB,CACtB/J,KAAM,EAAAyC,QAAQuH,SACdpF,SAAsC,QAA5B,EAAkB,QAAlB,EAAAmF,EAAarF,UAAK,eAAEE,gBAAQ,QAAI,GAE5C,CAEA,YAAAqF,CAAavF,EAAeqF,G,QAC3B,MAAuB,CACtB/J,KAAM,EAAAyC,QAAQyH,QACdtF,SAAsC,QAA5B,EAAkB,QAAlB,EAAAmF,EAAarF,UAAK,eAAEE,gBAAQ,QAAI,GAE5C,CAEA,cAAAiB,CAAenB,GACd,IAAIF,EAAuB,CAAExE,KAAM,EAAAyC,QAAQ0H,UAAWvF,SAAU,IAEhE,IAAK,IAAIH,KAAM,UAAI9C,SAAS+C,GAC3B,OAAQD,EAAGmB,WACV,IAAK,MACJ1G,KAAKmI,yBAAyB5C,EAAID,GAClC,MAED,IAAK,IACJA,EAAOI,SAASE,KAAK5F,KAAKkL,SAAS3F,EAAID,IACvC,MAED,IAAK,YACJA,EAAOI,SAASE,KAAK5F,KAAKmL,eAAe5F,EAAID,IAC7C,MAED,IAAK,gBACJA,EAAOI,SAASE,MAAK,IAAAwF,oBAAmB7F,EAAI,YAC5C,MAED,IAAK,cACJD,EAAOI,SAASE,MAAK,IAAAyF,kBAAiB9F,EAAI,YAC1C,MAED,IAAK,QACL,IAAK,YACJD,EAAOI,SAASE,KAAK5F,KAAKsL,iBAAiB/F,IAC3C,MAED,IAAK,MACJD,EAAOI,SAASE,QAAQ5F,KAAK6G,SAAStB,GAAI5C,GAAK3C,KAAK2G,eAAehE,GAAG+C,YACtE,MAED,IAAK,MACJJ,EAAOI,SAASE,KAAK5F,KAAK4K,cAAcrF,GAAI5C,GAAK3C,KAAK2G,eAAehE,MACrE,MAED,IAAK,MACJ2C,EAAOI,SAASE,KAAK5F,KAAK+K,aAAaxF,GAAI5C,GAAK3C,KAAK2G,eAAehE,MAKvE,OAAO2C,CACR,CAEA,wBAAA6C,CAAyB5B,EAAegF,GACvCvL,KAAK0H,uBAAuBnB,EAAMgF,EAAUlF,SAAW,CAAC,EAAG,MAAMkB,IAChE,IAAI,IAAAiE,wBAAuBjE,EAAGgE,EAAW,WACxC,OAAO,EAER,OAAQhE,EAAEb,WACT,IAAK,SACJ6E,EAAUE,UAAY,UAAI5I,KAAK0E,EAAG,OAClC,MAED,IAAK,WACJgE,EAAUG,UAAYjE,EAAOkE,oBAAoBpE,GACjD,MAED,IAAK,UACJvH,KAAK4L,WAAWrE,EAAGgE,GACnB,MAED,IAAK,MAEJ,MAED,QACC,OAAO,EAGT,OAAO,CAAI,GAEb,CAEA,UAAAK,CAAWpG,EAAe+F,GAGV,QAFD,UAAI1I,KAAK2C,EAAM,aAG5B+F,EAAUlF,SAAgB,MAAI,OAChC,CAEA,cAAA8E,CAAe3F,EAAeqG,GAC7B,IAAIvG,EAAqC,CAAExE,KAAM,EAAAyC,QAAQuI,UAAWD,OAAQA,EAAQnG,SAAU,IAC1FqG,EAAS,UAAIlJ,KAAK2C,EAAM,UACxBwG,EAAQ,UAAInJ,KAAK2C,EAAM,MAgB3B,OAdIuG,IACHzG,EAAO2G,KAAO,IAAMF,GAEjBC,IACH1G,EAAO1C,GAAKoJ,GAEbxF,EAAQQ,QAAQxB,GAAM+B,IAEf,MADEA,EAAEb,WAERpB,EAAOI,SAASE,KAAK5F,KAAKkL,SAAS3D,EAAGjC,G,IAKlCA,CACR,CAEA,QAAA4F,CAAS1F,EAAeqG,GACvB,IAAIvG,EAAyB,CAAExE,KAAM,EAAAyC,QAAQ2I,IAAKL,OAAQA,EAAQnG,SAAU,IAmH5E,OAjHAc,EAAQQ,QAAQxB,GAAM+B,IAGrB,QAFAA,EAAIvH,KAAKmM,sBAAsB5E,IAErBb,WACT,IAAK,IACJ,IAAI0F,EAAc7E,EAAE6E,YAEiC,aAA7B,UAAIvJ,KAAK0E,EAAG,eAGnC6E,EAAcA,EAAYnE,MAAM,MAAMoE,KAAK,MAE5C/G,EAAOI,SAASE,KAAc,CAC7B9E,KAAM,EAAAyC,QAAQ+I,KACdC,KAAMH,IAEP,MAED,IAAK,UACJ9G,EAAOI,SAASE,KAAc,CAC7B9E,KAAM,EAAAyC,QAAQiJ,YACdD,KAAMhF,EAAE6E,cAET,MAED,IAAK,YACJ9G,EAAOI,SAASE,KAAqB,CACpC9E,KAAM,EAAAyC,QAAQkJ,YACdC,YAAa,UAAI7J,KAAK0E,EAAG,SACzBoF,KAAM,UAAI9E,SAASN,EAAG,QAAQ,GAC9BqF,MAAO,UAAI/E,SAASN,EAAG,SAAS,KAEjC,MAED,IAAK,YACJjC,EAAOuH,UAAW,EAClBvH,EAAOI,SAASE,KAAyB,CACxC9E,KAAM,EAAAyC,QAAQuJ,YACdP,KAAMhF,EAAE6E,cAET,MAED,IAAK,UACJ9G,EAAOuH,UAAW,EAClBvH,EAAOI,SAASE,KAAmB,CAClC9E,KAAM,EAAAyC,QAAQwJ,aACdC,SAAU,UAAInK,KAAK0E,EAAG,eACtBoF,KAAM,UAAI9E,SAASN,EAAG,QAAQ,GAC9BqF,MAAO,UAAI/E,SAASN,EAAG,SAAS,KAEjC,MAED,IAAK,gBACJjC,EAAOI,SAASE,KAAK,CAAE9E,KAAM,EAAAyC,QAAQ0J,gBACrC,MAED,IAAK,KACJ3H,EAAOI,SAASE,KAAe,CAC9B9E,KAAM,EAAAyC,QAAQ2J,MACdC,MAAO,UAAItK,KAAK0E,EAAG,SAAW,iBAE/B,MAED,IAAK,wBACJjC,EAAOI,SAASE,KAAe,CAC9B9E,KAAM,EAAAyC,QAAQ2J,MACdC,MAAO,0BAER,MAED,IAAK,MACJ7H,EAAOI,SAASE,KAAgB,CAC/B9E,KAAM,EAAAyC,QAAQ6J,OACdC,KAAM,UAAIxK,KAAK0E,EAAG,QAClB+F,KAAM,UAAIzK,KAAK0E,EAAG,UAEnB,MAED,IAAK,MACJjC,EAAOI,SAASE,KAAK,CAAE9E,KAAM,EAAAyC,QAAQgK,MACrC,MAED,IAAK,oBACJjI,EAAOI,SAASE,KAAuB,CACtC9E,KAAM,EAAAyC,QAAQiK,kBACd5K,GAAI,UAAIC,KAAK0E,EAAG,QAEjB,MAED,IAAK,mBACJjC,EAAOI,SAASE,KAAuB,CACtC9E,KAAM,EAAAyC,QAAQkK,iBACd7K,GAAI,UAAIC,KAAK0E,EAAG,QAEjB,MAED,IAAK,UACJ,IAAImG,EAAI1N,KAAK2N,aAAapG,GAEtBmG,IACHpI,EAAOI,SAAW,CAACgI,IACpB,MAED,IAAK,OACJpI,EAAOI,SAASE,KAAK5F,KAAK4N,gBAAgBrG,IAC1C,MAED,IAAK,MACJvH,KAAKqI,mBAAmBd,EAAGjC,G,IAKvBA,CACR,CAEA,gBAAAgG,CAAiB/E,GAChB,MAAMsH,EAAW,GAAGtH,EAAKG,cACnBpB,EAAS,CAAExE,KAAMwC,EAAUiD,EAAKG,WAAYhB,SAAU,IAE5D,IAAK,MAAMH,KAAM,UAAI9C,SAAS8D,GAG7B,GAFkBjD,EAAUiC,EAAGmB,WAG9BpB,EAAOI,SAASE,KAAK5F,KAAKsL,iBAAiB/F,SACrC,GAAoB,KAAhBA,EAAGmB,UAAkB,CAC/B,IAAIoH,EAAM9N,KAAKkL,SAAS3F,GACxBuI,EAAIhN,KAAO,EAAAyC,QAAQwK,OACnBzI,EAAOI,SAASE,KAAKkI,E,MACXvI,EAAGmB,WAAamH,IAC1BvI,EAAOa,MAAQnG,KAAKgO,mBAAmBzI,IAIzC,OAAOD,CACR,CAEA,kBAAA0I,CAAmBzH,GAClB,MAAMjB,EAA8B,CAAC,EAErC,IAAK,MAAMC,KAAM,UAAI9C,SAAS8D,GAC7B,OAAQhB,EAAGmB,WACV,IAAK,MAAOpB,EAAOgI,KAAO,UAAIzK,KAAK0C,EAAI,OAAQ,MAC/C,IAAK,SAAUD,EAAO2I,sBAAwB,UAAIpL,KAAK0C,EAAI,OAAQ,MACnE,IAAK,MAAOD,EAAO4I,SAAW,UAAIrL,KAAK0C,EAAI,OAAQ,MACnD,IAAK,UAAWD,EAAO6I,WAAa,UAAItG,SAAStC,EAAI,OAAQ,MAC7D,IAAK,SAAUD,EAAO8I,UAAY,UAAIvL,KAAK0C,EAAI,OAAQ,MACvD,IAAK,SAAUD,EAAO+I,QAAU,UAAIxL,KAAK0C,EAAI,OAI/C,OAAOD,CACR,CAEA,kBAAA+C,CAAmB9B,EAAeuH,GACjC9N,KAAK0H,uBAAuBnB,EAAMuH,EAAIzH,SAAW,CAAC,EAAG,MAAMkB,IAC1D,OAAQA,EAAEb,WACT,IAAK,SACJoH,EAAIrC,UAAY,UAAI5I,KAAK0E,EAAG,OAC5B,MAED,IAAK,YACJuG,EAAIQ,cAAgB7G,EAAO8G,iBAAiBhH,GAAG,GAC/C,MAED,QACC,OAAO,EAGT,OAAO,CAAI,GAEb,CAEA,eAAAqG,CAAgBrH,GACf,MAAMjB,EAAS,CAAExE,KAAM,EAAAyC,QAAQiL,WAAY9I,SAAU,IAErD,IAAK,MAAMH,KAAM,UAAI9C,SAAS8D,GAAO,CACpC,MAAMkI,GAAQ,IAAAC,iBAAgBnJ,EAAIvF,MAClCyO,GAASnJ,EAAOI,SAASE,KAAK6I,E,CAG/B,OAAOnJ,CACR,CAEA,qBAAA6G,CAAsB5F,G,MACrB,GAAsB,oBAAlBA,EAAKG,UACR,OAAOH,EAER,IAAIoI,EAAS,UAAI5I,QAAQQ,EAAM,UAE/B,GAAIoI,EAAQ,CACX,IAAIC,EAAW,UAAI/L,KAAK8L,EAAQ,YAC5BE,EAAetI,EAAKuI,mBAAmBF,GAE3C,GAAIvL,EAAuB0L,SAASF,GACnC,OAAOF,EAAOhN,iB,CAGhB,OAAoC,QAA7B,YAAIoE,QAAQQ,EAAM,mBAAW,eAAE5E,iBACvC,CAEA,YAAAgM,CAAanI,GACZ,IAAK,IAAIyB,KAAK,UAAIxE,SAAS+C,GAC1B,OAAQyB,EAAEP,WACT,IAAK,SACL,IAAK,SACJ,OAAO1G,KAAKgP,oBAAoB/H,GAGpC,CAEA,mBAAA+H,CAAoBxJ,G,MACfF,EAAyB,CAAExE,KAAM,EAAAyC,QAAQ0L,QAASvJ,SAAU,GAAIW,SAAU,CAAC,GAC3E6I,EAA6B,UAAlB1J,EAAKkB,UAQpB,IAAIyI,EAAmD,KACnDC,EAAY,UAAIvH,SAASrC,EAAM,aAE/B6J,EAAO,CAAEC,SAAU,OAAQC,MAAO,OAAQC,OAAQ,KAClDC,EAAO,CAAEH,SAAU,OAAQC,MAAO,MAAOC,OAAQ,KAErD,IAAK,IAAIvI,KAAK,UAAIxE,SAAS+C,GAC1B,OAAQyB,EAAEP,WACT,IAAK,YACA0I,IACHC,EAAKG,OAAS,UAAIE,WAAWzI,EAAG,IAAK,EAAA0I,YAAYC,KACjDH,EAAKD,OAAS,UAAIE,WAAWzI,EAAG,IAAK,EAAA0I,YAAYC,MAElD,MAED,IAAK,SACJtK,EAAOe,SAAgB,MAAI,UAAIqJ,WAAWzI,EAAG,KAAM,EAAA0I,YAAYC,KAC/DtK,EAAOe,SAAiB,OAAI,UAAIqJ,WAAWzI,EAAG,KAAM,EAAA0I,YAAYC,KAChE,MAED,IAAK,YACL,IAAK,YACJ,IAAKR,EAAW,CACf,IAAIS,EAAqB,aAAf5I,EAAEP,UAA2B2I,EAAOI,EAC9C,IAAIK,EAAY,UAAI/J,QAAQkB,EAAG,SAC3B8I,EAAa,UAAIhK,QAAQkB,EAAG,aAEhC4I,EAAIP,SAAsC,QAA3B,YAAIzM,KAAKoE,EAAG,uBAAe,QAAI4I,EAAIP,SAE9CQ,IACHD,EAAIN,MAAQO,EAAU1D,aAEnB2D,IACHF,EAAIL,OAAShJ,EAAQwJ,UAAUD,EAAY,EAAAJ,YAAYC,K,CAEzD,MAED,IAAK,mBACJT,EAAW,mBACX,MAED,IAAK,WACJA,EAAW,WACX,MAED,IAAK,UACJ,IAAIc,EAAIjQ,KAAKkQ,aAAajJ,GAEtBgJ,GACH3K,EAAOI,SAASE,KAAKqK,GA4BzB,MAvBgB,oBAAZd,GACH7J,EAAOe,SAAkB,QAAI,QAEzBgJ,EAAKE,QACRjK,EAAOe,SAAS,cAAgBgJ,EAAKE,MACrCjK,EAAOe,SAAgB,MAAI,SAGR,YAAZ8I,GACR7J,EAAOe,SAAkB,QAAI,QAC7Bf,EAAOe,SAAmB,SAAI,WAC9Bf,EAAOe,SAAgB,MAAI,MAC3Bf,EAAOe,SAAiB,OAAI,MAExBgJ,EAAKG,SACRlK,EAAOe,SAAe,KAAIgJ,EAAKG,QAC5BC,EAAKD,SACRlK,EAAOe,SAAc,IAAIoJ,EAAKD,UAEvBN,GAA2B,QAAdG,EAAKE,OAAiC,SAAdF,EAAKE,QAClDjK,EAAOe,SAAgB,MAAIgJ,EAAKE,OAG1BjK,CACR,CAEA,YAAA4K,CAAa3J,GACZ,IAAI4J,EAAc,UAAIpK,QAAQQ,EAAM,eAEpC,IAAK,IAAIU,KAAK,UAAIxE,SAAS0N,GAC1B,GACM,QADElJ,EAAEP,UAER,OAAO1G,KAAKoQ,aAAanJ,GAI5B,OAAO,IACR,CAEA,YAAAmJ,CAAa7J,GACZ,IAAIjB,EAAoB,CAAExE,KAAM,EAAAyC,QAAQ8M,MAAOzG,IAAK,GAAIvD,SAAU,CAAC,GAC/DiK,EAAW,UAAIvK,QAAQQ,EAAM,YAC7BgK,EAAO,UAAIxK,QAAQuK,EAAU,QAEjChL,EAAOsE,IAAM,UAAI/G,KAAK0N,EAAM,SAE5B,IAAIC,EAAO,UAAIzK,QAAQQ,EAAM,QACzBkK,EAAO,UAAI1K,QAAQyK,EAAM,QAI7B,IAAK,IAAIvJ,KAFT3B,EAAOe,SAAmB,SAAI,WAEhB,UAAI5D,SAASgO,IAC1B,OAAQxJ,EAAEP,WACT,IAAK,MACJpB,EAAOe,SAAgB,MAAI,UAAIqJ,WAAWzI,EAAG,KAAM,EAAA0I,YAAYC,KAC/DtK,EAAOe,SAAiB,OAAI,UAAIqJ,WAAWzI,EAAG,KAAM,EAAA0I,YAAYC,KAChE,MAED,IAAK,MACJtK,EAAOe,SAAe,KAAI,UAAIqJ,WAAWzI,EAAG,IAAK,EAAA0I,YAAYC,KAC7DtK,EAAOe,SAAc,IAAI,UAAIqJ,WAAWzI,EAAG,IAAK,EAAA0I,YAAYC,KAK/D,OAAOtK,CACR,CAEA,UAAAsB,CAAWpB,GACV,IAAIF,EAAmB,CAAExE,KAAM,EAAAyC,QAAQmN,MAAOhL,SAAU,IAkBxD,OAhBAc,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,KACJpB,EAAOI,SAASE,KAAK5F,KAAK2Q,cAAcpJ,IACxC,MAED,IAAK,UACJjC,EAAOsL,QAAU5Q,KAAK6Q,kBAAkBtJ,GACxC,MAED,IAAK,QACJvH,KAAK8Q,qBAAqBvJ,EAAGjC,G,IAKzBA,CACR,CAEA,iBAAAuL,CAAkBrL,GACjB,IAAIF,EAAS,GAUb,OARAkB,EAAQQ,QAAQxB,GAAMyB,IAEf,YADEA,EAAEP,WAERpB,EAAOM,KAAK,CAAEmL,MAAO,UAAIrB,WAAWzI,EAAG,M,IAKnC3B,CACR,CAEA,oBAAAwL,CAAqBvK,EAAeyK,GAiCnC,OAhCAA,EAAM3K,SAAW,CAAC,EAClB2K,EAAMC,UAAY,CAAC,EAEnBjR,KAAK0H,uBAAuBnB,EAAMyK,EAAM3K,SAAU2K,EAAMC,WAAW1J,IAClE,OAAQA,EAAEb,WACT,IAAK,WACJsK,EAAMvF,UAAY,UAAI5I,KAAK0E,EAAG,OAC9B,MAED,IAAK,UACJyJ,EAAMtF,UAAYjE,EAAOyJ,mBAAmB3J,GAC5C,MAED,IAAK,SACJvH,KAAKmR,mBAAmB5J,EAAGyJ,GAC3B,MAED,IAAK,sBACJA,EAAMI,YAAc,UAAIzH,QAAQpC,EAAG,OACnC,MAED,IAAK,sBACJyJ,EAAMK,YAAc,UAAI1H,QAAQpC,EAAG,OACnC,MAED,QACC,OAAO,EAGT,OAAO,CAAI,IAGJyJ,EAAM3K,SAAS,eACtB,IAAK,gBACG2K,EAAM3K,SAAS,cACtB2K,EAAM3K,SAAS,eAAiB,OAChC2K,EAAM3K,SAAS,gBAAkB,OACjC,MAED,IAAK,eACG2K,EAAM3K,SAAS,cACtB2K,EAAM3K,SAAS,eAAiB,OAGnC,CAEA,kBAAA8K,CAAmB3L,EAAewL,GACjC,IAAIM,EAAc,UAAI5B,WAAWlK,EAAM,eACnC+L,EAAiB,UAAI7B,WAAWlK,EAAM,kBACtCgM,EAAgB,UAAI9B,WAAWlK,EAAM,iBACrCiM,EAAe,UAAI/B,WAAWlK,EAAM,gBAExCwL,EAAM3K,SAAgB,MAAI,OAC1B2K,EAAM3K,SAAS,iBAAmBoB,EAAOiK,QAAQV,EAAM3K,SAAS,iBAAkBkL,GAClFP,EAAM3K,SAAS,eAAiBoB,EAAOiK,QAAQV,EAAM3K,SAAS,eAAgBoL,GAC9ET,EAAM3K,SAAS,gBAAkBoB,EAAOiK,QAAQV,EAAM3K,SAAS,gBAAiBmL,GAChFR,EAAM3K,SAAS,cAAgBoB,EAAOiK,QAAQV,EAAM3K,SAAS,cAAeiL,EAC7E,CAEA,aAAAX,CAAcnL,GACb,IAAIF,EAAsB,CAAExE,KAAM,EAAAyC,QAAQoO,IAAKjM,SAAU,IAczD,OAZAc,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,KACJpB,EAAOI,SAASE,KAAK5F,KAAK4R,eAAerK,IACzC,MAED,IAAK,OACJvH,KAAK6R,wBAAwBtK,EAAGjC,G,IAK5BA,CACR,CAEA,uBAAAuM,CAAwBtL,EAAeuL,GACtCA,EAAIzL,SAAWrG,KAAK0H,uBAAuBnB,EAAM,CAAC,EAAG,MAAMgB,IAC1D,OAAQA,EAAEb,WACT,IAAK,WACJoL,EAAIpG,UAAYjE,EAAOkE,oBAAoBpE,GAC3C,MAED,IAAK,YACJuK,EAAIC,SAAW,UAAIlK,SAASN,EAAG,OAC/B,MAED,QACC,OAAO,EAGT,OAAO,CAAI,GAEb,CAEA,cAAAqK,CAAepM,GACd,IAAIF,EAAuB,CAAExE,KAAM,EAAAyC,QAAQyO,KAAMtM,SAAU,IAkB3D,OAhBAc,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,MACJpB,EAAOI,SAASE,KAAK5F,KAAK4G,WAAWW,IACrC,MAED,IAAK,IACJjC,EAAOI,SAASE,KAAK5F,KAAK2G,eAAeY,IACzC,MAED,IAAK,OACJvH,KAAKiS,yBAAyB1K,EAAGjC,G,IAK7BA,CACR,CAEA,wBAAA2M,CAAyB1L,EAAe2L,GACvCA,EAAK7L,SAAWrG,KAAK0H,uBAAuBnB,EAAM,CAAC,EAAG,MAAMgB,I,MAC3D,OAAQA,EAAEb,WACT,IAAK,WACJwL,EAAKC,KAAO,UAAIxI,QAAQpC,EAAG,MAAO,MAClC,MAED,IAAK,SACJ2K,EAAKE,cAAkC,QAAlB,YAAIvP,KAAK0E,EAAG,cAAM,QAAI,WAC3C,MAED,IAAK,WACJ2K,EAAKxG,UAAYjE,EAAOkE,oBAAoBpE,GAC5C,MAED,QACC,OAAO,EAGT,OAAO,CAAI,GAEb,CAEA,sBAAAG,CAAuBnB,EAAesD,EAAgC,KAAMwI,EAAqC,KAAMC,EAAsC,MAoL5J,OAnLAzI,EAAQA,GAAS,CAAC,EAElBrD,EAAQQ,QAAQT,GAAMgB,IACrB,KAAI+K,aAAO,EAAPA,EAAU/K,IAGd,OAAQA,EAAEb,WACT,IAAK,KACJmD,EAAM,cAAgBpC,EAAO8K,UAAUhL,GACvC,MAED,IAAK,gBACJsC,EAAM,kBAAoBpC,EAAO+K,qBAAqBjL,GACtD,MAED,IAAK,QACJsC,EAAa,MAAIrD,EAAQC,UAAUc,EAAG,MAAO,KAAM,EAAAvE,MAAME,OACzD,MAED,IAAK,KACJ2G,EAAM,aAAeA,EAAM,cAAgB,UAAI6F,WAAWnI,EAAG,MAAO,EAAAoI,YAAY8C,UAChF,MAED,IAAK,MACJ5I,EAAM,oBAAsBrD,EAAQC,UAAUc,EAAG,OAAQ,KAAM,EAAAvE,MAAMC,KACrE,MAED,IAAK,YACJ4G,EAAM,oBAAsBrD,EAAQC,UAAUc,EAAG,MAAO,KAAM,EAAAvE,MAAMI,WACpE,MAED,IAAK,YAGJ,MAED,IAAK,WACJyG,EAAMyE,cAAgB,UAAIoB,WAAWnI,EAAG,MAAO,EAAAoI,YAAY8C,UAC3D,MAED,IAAK,MACJ,GAAIzS,KAAKL,QAAQsF,YAChB,MAEF,IAAK,OACJ4E,EAAa,MAAIpC,EAAOiL,YAAYnL,EAAG,KACvC,MAED,IAAK,WACJvH,KAAK2S,cAAcpL,EAAGsC,GACtB,MAED,IAAK,SACJA,EAAM,mBAAqB,UAAIhC,SAASN,EAAG,OAAO,GAAQ,eAAiB,OAC3E,MAED,IAAK,IACJsC,EAAM,eAAiB,UAAIhC,SAASN,EAAG,OAAO,GAAQ,OAAS,SAC/D,MAED,IAAK,IACJsC,EAAM,cAAgB,UAAIhC,SAASN,EAAG,OAAO,GAAQ,SAAW,SAChE,MAED,IAAK,OACJsC,EAAM,kBAAoB,UAAIhC,SAASN,EAAG,OAAO,GAAQ,YAAc,OACvE,MAED,IAAK,YACJsC,EAAM,kBAAoB,UAAIhC,SAASN,EAAG,OAAO,GAAQ,YAAc,OACvE,MAED,IAAK,IACJvH,KAAK4S,eAAerL,EAAGsC,GACvB,MAED,IAAK,MACL,IAAK,SACJ7J,KAAK6S,iBAAiBtL,EAAGsC,GACzB,MAED,IAAK,SACJ7J,KAAK8S,UAAUvL,EAAGsC,GAClB,MAED,IAAK,aACJ7J,KAAK+S,sBAAsBxL,EAAG8K,GAAcxI,GAC5C,MAED,IAAK,iBACJA,EAAM,kBAAoBpC,EAAOuL,cAAczL,GAC/CsC,EAAM,mBAAqB,WAC3B,MAED,IAAK,OACJ7J,KAAK+S,sBAAsBxL,EAAGsC,GAC9B,MAED,IAAK,MACJA,EAAc,OAAIpC,EAAOwL,cAAc1L,GACvC,MAED,IAAK,YACJvH,KAAK+S,sBAAsBxL,EAAGsC,GAC9B,MAED,IAAK,SACA,UAAIhC,SAASN,EAAG,OAAO,KAC1BsC,EAAe,QAAI,QACpB,MAED,IAAK,OAKL,IAAK,SAGJ,MAED,IAAK,aACL,IAAK,QACJ7J,KAAKkT,sBAAsB3L,EAAG8K,GAAcxI,GAC5C,MAED,IAAK,YACJA,EAAM,gBAAkBpC,EAAO0L,iBAAiB5L,GAChD,MAED,IAAK,SACJsC,EAAM,kBAAoBpC,EAAO+K,qBAAqBjL,GACtD,MAED,IAAK,UACkB,OAAlBhB,EAAKG,WACR1G,KAAKoT,aAAa7L,EAAGsC,GACtB,MAED,IAAK,WACA,UAAIhC,SAASN,EAAG,SACnBsC,EAAM,iBAAmB,cAC1B,MAED,IAAK,sBACJA,EAAe,QAAI,UAAIhC,SAASN,EAAG,OAAO,GAAQ,OAAS,OAC3D,MAED,IAAK,OACJsC,EAAa,MAAI,UAAIhH,KAAK0E,EAAG,OAC7B,MAED,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,aACL,IAAK,oBACL,IAAK,sBACL,IAAK,sBACL,IAAK,YACL,IAAK,kBACL,IAAK,sBACL,IAAK,YACL,IAAK,WACL,IAAK,eACL,IAAK,OACL,IAAK,MACL,IAAK,UAEJ,MAED,QACKvH,KAAKL,QAAQuF,OAChBsD,QAAQC,KAAK,mCAAmClC,EAAKG,aAAaa,EAAEb,a,IAKjEmD,CACR,CAEA,cAAA+I,CAAepN,EAAeqE,GAC7B,IAAIwJ,EAAM,UAAIxQ,KAAK2C,EAAM,OAEzB,GAAW,MAAP6N,EAAJ,CAGA,OAAQA,GACP,IAAK,OACL,IAAK,kBACL,IAAK,eACL,IAAK,cACL,IAAK,WACL,IAAK,gBACL,IAAK,UACL,IAAK,aACJxJ,EAAM,yBAA2B,SACjC,MAED,IAAK,SACL,IAAK,cACJA,EAAM,yBAA2B,SACjC,MAED,IAAK,SACJA,EAAM,yBAA2B,SACjC,MAED,IAAK,SACL,IAAK,QAUL,IAAK,QACJA,EAAM,mBAAqB,YAC3B,MARD,IAAK,OACL,IAAK,aACL,IAAK,YACJA,EAAM,yBAA2B,OACjC,MAMD,IAAK,OACJA,EAAM,mBAAqB,OAI7B,IAAIyJ,EAAM9M,EAAQC,UAAUjB,EAAM,SAE9B8N,IACHzJ,EAAM,yBAA2ByJ,EA9C3B,CA+CR,CAEA,SAAAR,CAAUtN,EAAeqE,GAExB,IAAI0J,EAAQ,GAERC,EAAQ,UAAI3Q,KAAK2C,EAAM,SACvBiO,EAAchM,EAAOiM,WAAWlO,EAAM,cAC1C+N,EAAM3N,KAAK4N,EAAOC,GAElB,IAAIE,EAAY,UAAI9Q,KAAK2C,EAAM,YAC3BoO,EAAkBnM,EAAOiM,WAAWlO,EAAM,iBAC9C+N,EAAM3N,KAAK+N,EAAWC,GAEtB,IAAIC,EAAiB,UAAIhR,KAAK2C,EAAM,MAChCsO,EAAuBrM,EAAOiM,WAAWlO,EAAM,WACnD+N,EAAM3N,KAAKiO,EAAgBC,GAE3B,IAAIC,EAAY,UAAIlR,KAAK2C,EAAM,SAC3BwO,EAAkBvM,EAAOiM,WAAWlO,EAAM,cAC9C+N,EAAM3N,KAAKmO,EAAWC,GAGtB,IAAIC,EAAc,IAAI,IAAIC,IAAIX,IAAQY,QAAOhL,GAAKA,IAAGkD,KAAK,MAEtDkH,EAAMa,OAAS,IAClBvK,EAAM,eAAiBoK,EAEzB,CAEA,gBAAApB,CAAiBrN,EAAeqE,GAC/B,IAAIwK,EAAY,UAAI3E,WAAWlK,EAAM,aACjC8O,EAAU,UAAI5E,WAAWlK,EAAM,WAC/B+O,EAAO,UAAI7E,WAAWlK,EAAM,QAC5BwE,EAAQ,UAAI0F,WAAWlK,EAAM,SAC7BgP,EAAQ,UAAI9E,WAAWlK,EAAM,SAC7BiP,EAAM,UAAI/E,WAAWlK,EAAM,OAE3B6O,IAAWxK,EAAM,eAAiBwK,GAClCC,IAASzK,EAAM,eAAiB,IAAIyK,MACpCC,GAAQvK,KAAOH,EAAM,eAAiB0K,GAAQvK,IAC9CwK,GAASC,KAAK5K,EAAM,gBAAkB2K,GAASC,EACpD,CAEA,YAAArB,CAAa5N,EAAeqE,GAC3B,IAAI6K,EAAS,UAAIhF,WAAWlK,EAAM,UAC9BmP,EAAQ,UAAIjF,WAAWlK,EAAM,SAC7BoP,EAAO,UAAIjL,QAAQnE,EAAM,OAAQ,MACjCqP,EAAW,UAAIhS,KAAK2C,EAAM,YAK9B,GAHIkP,IAAQ7K,EAAM,cAAgB6K,GAC9BC,IAAO9K,EAAM,iBAAmB8K,GAEvB,OAATC,EACH,OAAQC,GACP,IAAK,OACJhL,EAAM,eAAiB,IAAI+K,EAAO,KAAKE,QAAQ,KAC/C,MAED,IAAK,UACJjL,EAAM,eAAiB,eAAe+K,EAAO,QAC7C,MAED,QACC/K,EAAM,eAAiBA,EAAM,cAAmB+K,EAAO,GAAV,KAIjD,CAEA,qBAAA1B,CAAsB1N,EAAeuP,GACpCvO,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,OACJqO,EAAO,gBAAkBtN,EAAOuL,cAAczL,GAC9C,MAED,IAAK,QACJwN,EAAO,iBAAmBtN,EAAOuL,cAAczL,GAC/C,MAED,IAAK,MACJwN,EAAO,eAAiBtN,EAAOuL,cAAczL,GAC7C,MAED,IAAK,SACJwN,EAAO,kBAAoBtN,EAAOuL,cAAczL,G,GAIpD,CAEA,aAAAoL,CAAcnN,EAAeuP,GACpB,UAAIlS,KAAK2C,EAAM,SAOrBuP,EAAe,OAAI,UAAIrF,WAAWlK,EAAM,MAK3C,CAEA,qBAAAuN,CAAsBvN,EAAeuP,GACpCvO,EAAQQ,QAAQxB,GAAM+B,IACrB,OAAQA,EAAEb,WACT,IAAK,QACL,IAAK,OACJqO,EAAO,eAAiBtN,EAAOwL,cAAc1L,GAC7C,MAED,IAAK,MACL,IAAK,QACJwN,EAAO,gBAAkBtN,EAAOwL,cAAc1L,GAC9C,MAED,IAAK,MACJwN,EAAO,cAAgBtN,EAAOwL,cAAc1L,GAC5C,MAED,IAAK,SACJwN,EAAO,iBAAmBtN,EAAOwL,cAAc1L,G,GAInD,GAGD,MAAMyN,EAAc,CAAC,QAAS,OAAQ,OAAQ,WAAY,WAAY,WAAY,YAAa,cAAe,UAAW,aAAc,QAAS,YAAa,UAAW,OAAQ,MAAO,QAAS,UAEhM,MAAMxO,EACL,cAAOQ,CAAQxB,EAAeyP,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI1P,EAAK2P,WAAWf,OAAQc,IAAK,CAChD,IAAIjO,EAAIzB,EAAK2P,WAAWD,GAEpBjO,EAAEmO,UAAYC,KAAKC,cACtBL,EAAYhO,E,CAGf,CAEA,gBAAOR,CAAUjB,EAAe+P,EAAkBC,EAAmB,KAAMC,EAAoB,SAC9F,IAAIC,EAAI,UAAI7S,KAAK2C,EAAM+P,GAEvB,GAAIG,EACH,MAAS,QAALA,EACID,EACGT,EAAYjG,SAAS2G,GACxBA,EAGD,IAAIA,IAGZ,IAAIC,EAAa,UAAI9S,KAAK2C,EAAM,cAEhC,OAAOmQ,EAAa,cAAcA,WAAsBH,CACzD,CAEA,gBAAOxF,CAAUxK,EAAe1E,EAAwB,EAAA6O,YAAYiG,KACnE,OAAO,IAAAC,eAAcrQ,EAAK4G,YAAatL,EACxC,EAGD,MAAM2G,EACL,iBAAOiM,CAAWnM,EAAY1E,GAC7B,IAAIwQ,EAAM,UAAIxQ,KAAK0E,EAAG1E,GACtB,OAAOwQ,EAAM,cAAcA,UAAc,IAC1C,CAEA,kBAAOX,CAAYnL,EAAY1E,GAC9B,IAAI/B,EAAO,EAAA6O,YAAYiG,IAEvB,OAAQ,UAAI/S,KAAK0E,EAAG,SACnB,IAAK,MAAO,MACZ,IAAK,MAAOzG,EAAO,EAAA6O,YAAYmG,QAAS,MACxC,IAAK,OAAQ,MAAO,OAGrB,OAAO,UAAIpG,WAAWnI,EAAG1E,EAAM/B,EAChC,CAEA,oBAAOkS,CAAczL,GACpB,OAAO,UAAImI,WAAWnI,EAAG,IAC1B,CAEA,oBAAO0L,CAAc1L,GAGpB,GAAY,OAFD,UAAI1E,KAAK0E,EAAG,OAGtB,MAAO,OAER,IAAIrE,EAAQsD,EAAQC,UAAUc,EAAG,SAGjC,MAAO,GAFI,UAAImI,WAAWnI,EAAG,KAAM,EAAAoI,YAAYoG,iBAEd,QAAT7S,EAAkB,EAAAF,MAAMG,YAAcD,GAC/D,CAEA,uBAAOiQ,CAAiB5L,GAEvB,MAAe,SADJ,UAAI1E,KAAK0E,EAAG,OACE,QAAU,MACpC,CAEA,0BAAOoE,CAAoBpE,GAC1B,MAAM8L,EAAM,UAAIxQ,KAAK0E,EAAG,OAOxB,MANgB,CACf,YAAa,WAAY,YAAa,WACtC,UAAW,WAAY,UAAW,WAClC,UAAW,UAAW,UAAW,WAGnB4M,QAAO,CAAC6B,EAAGd,IAAgB,KAAV7B,EAAI6B,KAAW7I,KAAK,IACrD,CAEA,gBAAOkG,CAAUhL,GAChB,IAAIzG,EAAO,UAAI+B,KAAK0E,EAAG,OAEvB,OAAQzG,GACP,IAAK,QACL,IAAK,OAAQ,MAAO,OACpB,IAAK,SAAU,MAAO,SACtB,IAAK,MACL,IAAK,QAAS,MAAO,QACrB,IAAK,OAAQ,MAAO,UAGrB,OAAOA,CACR,CAEA,uBAAOyN,CAAiBhH,EAAY0O,GAAqB,GACxD,IAAInV,EAAO,UAAI+B,KAAK0E,EAAG,OAEvB,OAAQzG,GACP,IAAK,YAAa,MAAO,MACzB,IAAK,cAAe,OAAOmV,EAAY,MAAQ,QAGhD,OAAOA,EAAY,KAAOnV,CAC3B,CAEA,2BAAO0R,CAAqBjL,GAC3B,IAAIzG,EAAO,UAAI+B,KAAK0E,EAAG,OAEvB,OAAQzG,GACP,IAAK,OACL,IAAK,WAAY,MAAO,WACxB,IAAK,MAAO,MAAO,MACnB,IAAK,SAAU,MAAO,SACtB,IAAK,SAAU,MAAO,SAGvB,OAAOA,CACR,CAEA,cAAO4Q,CAAQwE,EAAWC,GACzB,OAAS,MAALD,EAAkBC,EACb,MAALA,EAAkBD,EAEf,QAAQA,OAAOC,IACvB,CAEA,yBAAOjF,CAAmB3J,GACzB,MAAM8L,EAAM,UAAI+C,QAAQ7O,EAAG,MAAO,GAClC,IAAImE,EAAY,GAShB,OAPI,UAAI7D,SAASN,EAAG,aAAsB,GAAN8L,KAAe3H,GAAa,eAC5D,UAAI7D,SAASN,EAAG,YAAqB,GAAN8L,KAAe3H,GAAa,cAC3D,UAAI7D,SAASN,EAAG,gBAAyB,IAAN8L,KAAe3H,GAAa,eAC/D,UAAI7D,SAASN,EAAG,eAAwB,IAAN8L,KAAe3H,GAAa,cAC9D,UAAI7D,SAASN,EAAG,YAAqB,IAAN8L,KAAe3H,GAAa,cAC3D,UAAI7D,SAASN,EAAG,YAAqB,KAAN8L,KAAe3H,GAAa,aAExDA,EAAU2K,MAClB,E,wFC5kDD,eACA,SAEA,MAAaC,UAAsB,EAAAC,KAG/B,QAAAnU,CAASE,GACLtC,KAAKmG,OAAQ,IAAAqQ,gBAAelU,EAAMtC,KAAK8B,SAASlC,UACpD,EALJ,iB,uFCUA,0BAA+B0C,EAAe1C,GAC1C,MAAM0F,EAA+B,CAAC,EAEtC,IAAK,IAAIC,KAAM3F,EAAU6C,SAASH,GAC9B,OAAQiD,EAAGmB,WACP,IAAK,QAASpB,EAAOmR,MAAQlR,EAAG6G,YAAa,MAC7C,IAAK,cAAe9G,EAAOoR,YAAcnR,EAAG6G,YAAa,MACzD,IAAK,UAAW9G,EAAOqR,QAAUpR,EAAG6G,YAAa,MACjD,IAAK,UAAW9G,EAAOsR,QAAUrR,EAAG6G,YAAa,MACjD,IAAK,WAAY9G,EAAOuR,SAAWtR,EAAG6G,YAAa,MACnD,IAAK,WAAY9G,EAAOwR,SAAWvR,EAAG6G,YAAa,MACnD,IAAK,iBAAkB9G,EAAOyR,eAAiBxR,EAAG6G,YAAa,MAC/D,IAAK,WAAY7G,EAAG6G,cAAgB9G,EAAO0R,SAAWC,SAAS1R,EAAG6G,cAI1E,OAAO9G,CACX,C,0FC9BA,eACA,SAEA,MAAa4R,UAAwB,EAAAX,KAGjC,QAAAnU,CAASE,GACLtC,KAAKmG,OAAQ,IAAAgR,kBAAiB7U,EAAMtC,KAAK8B,SAASlC,UACtD,EALJ,mB,yFCMA,4BAAiC0C,EAAeE,GAC/C,OAAOA,EAAIC,SAASH,EAAM,YAAYI,KAAIC,IACzC,MAAMyU,EAAazU,EAAEyU,WAErB,MAAO,CACNC,SAAU7U,EAAIK,KAAKF,EAAG,SACtByE,KAAM5E,EAAIK,KAAKF,EAAG,QAClB7B,KAAMsW,EAAWE,SACjBC,MAAOH,EAAWhL,YAClB,GAEH,C,4FCpBA,eACA,SAEA,MAAaoL,UAA0B,EAAAjB,KAGnC,QAAAnU,CAASE,GACLtC,KAAKmG,OAAQ,IAAAsR,oBAAmBnV,EAAMtC,KAAK8B,SAASlC,UACxD,EALJ,qB,cCoDA,SAAS8X,EAAeH,GACpB,QAAqB,IAAVA,EAEX,OAAON,SAASM,EACpB,C,6EA5CA,8BAAmCjV,EAAe1C,GAC9C,MAAM0F,EAAmC,CAAC,EAI1C,IAAK,IAAIC,KAAM3F,EAAU6C,SAASH,GAC9B,OAAQiD,EAAGmB,WACP,IAAK,WACDpB,EAAOqS,SAAWpS,EAAG6G,YACrB,MACJ,IAAK,QACD9G,EAAOsS,MAAQF,EAAenS,EAAG6G,aACjC,MACJ,IAAK,QACD9G,EAAOuS,MAAQH,EAAenS,EAAG6G,aACjC,MACJ,IAAK,aACD9G,EAAOwS,WAAaJ,EAAenS,EAAG6G,aACtC,MACJ,IAAK,cACD9G,EAAOyS,YAAcxS,EAAG6G,YACxB,MACJ,IAAK,QACD9G,EAAO0S,MAAQN,EAAenS,EAAG6G,aACjC,MACJ,IAAK,aACD9G,EAAO2S,WAAaP,EAAenS,EAAG6G,aACtC,MACJ,IAAK,UACD9G,EAAO4S,QAAU3S,EAAG6G,YACpB,MACJ,IAAK,aACD9G,EAAO6S,WAAa5S,EAAG6G,YAKnC,OAAO9G,CACX,C,gHCpDA,eAaA,8BAAmCiB,EAAe/D,GAC9C,MAAO,CACH1B,KAAM,EAAAyC,QAAQ6U,cACdxV,GAAIJ,EAAIK,KAAK0D,EAAM,MACnBa,KAAM5E,EAAIK,KAAK0D,EAAM,QACrB8R,SAAU7V,EAAImH,QAAQpD,EAAM,YAC5B+R,QAAS9V,EAAImH,QAAQpD,EAAM,WAEnC,EAEA,4BAAiCA,EAAe/D,GAC5C,MAAO,CACH1B,KAAM,EAAAyC,QAAQgV,YACd3V,GAAIJ,EAAIK,KAAK0D,EAAM,MAE3B,C,qGC5BA,eAkBA,SAAgBiS,EAAYjS,EAAe/D,GACvC,MAAO,CACH1B,KAAM0B,EAAIK,KAAK0D,EAAM,OACrBrD,MAAOV,EAAIK,KAAK0D,EAAM,SACtBkS,KAAMjW,EAAIkN,WAAWnJ,EAAM,KAAM,EAAAoJ,YAAYoG,QAC7CvG,OAAQhN,EAAIkN,WAAWnJ,EAAM,QAAS,EAAAoJ,YAAY+I,OAClDC,MAAOnW,EAAIqF,SAAStB,EAAM,SAC1BqS,OAAQpW,EAAIqF,SAAStB,EAAM,UAEnC,CATA,gBAWA,wBAA6BA,EAAe/D,GACxC,IAAI8C,EAAkB,CAAC,EAEvB,IAAK,IAAI3C,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,OAAQpB,EAAOiP,KAAOiE,EAAY7V,EAAGH,GAAM,MAChD,IAAK,MAAO8C,EAAOuT,IAAML,EAAY7V,EAAGH,GAAM,MAC9C,IAAK,QAAS8C,EAAOkP,MAAQgE,EAAY7V,EAAGH,GAAM,MAClD,IAAK,SAAU8C,EAAOwT,OAASN,EAAY7V,EAAGH,GAItD,OAAO8C,CACX,C,oKCxCa,EAAAyT,GAAK,CACdC,OAAQ,+DACRC,UAAW,wDACXC,QAAS,2DACTC,cAAe,8DACfC,KAAM,8DAkBG,EAAAzJ,YAA+C,CAIxD0J,GAAI,CAAEC,IAAK,EAAI,GAAIC,KAAM,MACzB3D,IAAK,CAAE0D,IAAK,IAAMC,KAAM,MACxB3J,IAAK,CAAE0J,IAAK,EAAI,MAAOC,KAAM,MAC7B9G,SAAU,CAAE6G,IAAK,GAAKC,KAAM,MAC5BxD,OAAQ,CAAEuD,IAAK,KAAOC,KAAM,MAC5Bb,MAAO,CAAEY,IAAK,EAAGC,KAAM,MACvBzD,QAAS,CAAEwD,IAAK,IAAMC,KAAM,KAC5BC,WAAY,CAAEF,IAAK,EAAI,IAAKC,KAAM,IAClCE,OAAQ,CAAEH,IAAK,EAAI,MAAOC,KAAM,KAGpC,yBAA8BlG,EAAsBqG,EAAyB,EAAA/J,YAAYiG,KAGrF,GAAKvC,EAIL,MAAmB,iBAARA,EACA,IAAIA,EAAMqG,EAAMJ,KAAKxE,QAAQ,KAAK4E,EAAMH,OAI/C,iBAAiBI,KAAKtG,GACfA,EAGJ,IAAI4D,SAAS5D,GAAOqG,EAAMJ,KAAKxE,QAAQ,KAAK4E,EAAMH,MAC7D,EAEA,0BAA+B7D,EAAWkE,GAAe,GACrD,OAAQlE,GACJ,IAAK,IAEL,IAAK,KAEL,IAAK,OAAQ,OAAO,EAHpB,IAAK,IAEL,IAAK,MAEL,IAAK,QAAS,OAAO,EACrB,QAAS,OAAOkE,EAExB,EAEA,6BAAkCvG,GAC9B,OAAOA,EAAM4D,SAAS5D,GAAO,IAAM,IACvC,EAEA,+BAAoC9M,EAAeJ,EAAyB3D,GACxE,GAAI+D,EAAKsI,cAAgB,EAAAkK,GAAGC,OACxB,OAAO,EAEX,OAAQzS,EAAKG,WACT,IAAK,QACDP,EAAMjD,MAAQV,EAAIK,KAAK0D,EAAM,OAC7B,MAEJ,IAAK,KACDJ,EAAM0T,SAAWrX,EAAIkN,WAAWnJ,EAAM,MAAO,EAAAoJ,YAAY8C,UACzD,MAEJ,QACI,OAAO,EAGf,OAAO,CACX,C,uFC7FA,eAIA,MAAaqH,UAAqB,EAAAvD,KAG9B,WAAA9W,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,GACXC,KAAKia,gBAAkBvP,CAC3B,CAIA,QAAAtI,CAASE,GACLtC,KAAKka,KAAOla,KAAKia,gBAAgBpU,kBAAkBvD,EACvD,EAZJ,gB,cCLA,IAAYiB,E,uFAAZ,SAAYA,GACR,sBACA,wBACA,YACA,gBACA,gCACA,gBACA,YACA,cACA,wBACA,oBACA,gBACA,cACA,YACA,kBACA,gCACA,4BACA,kBACA,kBACA,wCACH,sCACG,sBACA,oBACA,4BACA,8BACA,4BACH,0BACA,oBACA,sCACA,4BACA,4BACA,oCACA,8BACA,kCACA,0BACA,oBACA,wBACA,kCACA,8BACA,kCACA,kCACA,sCACA,oBACA,8BACA,kBACA,sCACA,sBACA,gCACA,wBACA,8BACA,kBACA,kBACA,8BACA,0BACA,sBACA,oBACA,2BACA,CAzDD,CAAYA,IAAO,UAAPA,EAAO,KAuEnB,yCAEI,KAAAmC,SAA8B,GAC9B,KAAAW,SAAoC,CAAC,CAOzC,E,yFCvEA,4BAAiCE,EAAe/D,GAC5C,MAAO,CACHkS,OAAQlS,EAAIkN,WAAWnJ,EAAM,UAC7BoO,MAAOnS,EAAIkN,WAAWnJ,EAAM,SAC5BqO,KAAMpS,EAAImH,QAAQpD,EAAM,QACxBsO,SAAUrS,EAAIK,KAAK0D,EAAM,YAEjC,C,yJChBA,eAEA,QACA,SAEA,SA2CA,SAAgBiF,EAAuBjF,EAAeJ,EAA4B3D,GAC9E,GAAI+D,EAAKsI,cAAgB,EAAAkK,GAAGC,OACxB,OAAO,EAEX,IAAI,IAAAmB,qBAAoB5T,EAAMJ,EAAO3D,GACjC,OAAO,EAEX,OAAQ+D,EAAKG,WACT,IAAK,OACDP,EAAMiU,KAAOC,EAAU9T,EAAM/D,GAC7B,MAEJ,IAAK,SACD2D,EAAMmU,cAAe,IAAAlU,wBAAuBG,EAAM/D,GAClD,MAEJ,IAAK,QACD2D,EAAMoU,UAAYC,EAAejU,EAAM/D,GACvC,MAEJ,IAAK,UAED,OADA2D,EAAMsU,aAAc,IAAAC,kBAAiBnU,EAAM/D,IACpC,EAGX,IAAK,gBAED,OADA2D,EAAMwU,cAAgBnY,EAAIK,KAAK0D,EAAM,QAC9B,EAGX,IAAK,YACDJ,EAAMyU,UAAYpY,EAAIqF,SAAStB,EAAM,OAAO,GAC5C,MAEJ,IAAK,WACDJ,EAAM0U,SAAWrY,EAAIqF,SAAStB,EAAM,OAAO,GAC3C,MAEJ,IAAK,kBACDJ,EAAM2U,gBAAkBtY,EAAIqF,SAAStB,EAAM,OAAO,GAClD,MAEJ,IAAK,aACDJ,EAAM4U,aAAevY,EAAImH,QAAQpD,EAAM,OACvC,MAEJ,IAAK,SACDJ,EAAMsF,UAAYjJ,EAAIK,KAAK0D,EAAM,OACjC,MAEJ,IAAK,MACDJ,EAAMiC,UAAW,IAAAC,oBAAmB9B,EAAM/D,GAC1C,MAEJ,QACI,OAAO,EAGf,OAAO,CACX,CAEA,SAAgB6X,EAAU9T,EAAe/D,GACrC,OAAOA,EAAIC,SAAS8D,EAAM,OACrB7D,KAAIC,IAAK,CACNuL,SAAU1L,EAAIkN,WAAW/M,EAAG,OAC5BqY,OAAQxY,EAAIK,KAAKF,EAAG,UACpBkH,MAAOrH,EAAIK,KAAKF,EAAG,UAE/B,CAEA,SAAgB6X,EAAejU,EAAe/D,GAC1C,IAAI8C,EAA6B,CAAC,EAElC,IAAK,IAAI3C,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,QACDpB,EAAO1C,GAAKJ,EAAIK,KAAKF,EAAG,OACxB,MAEJ,IAAK,OACD2C,EAAOyE,MAAQvH,EAAImH,QAAQhH,EAAG,OAK1C,OAAO2C,CACX,CAhGA,oCAAyCiB,EAAe/D,GACpD,IAAI8C,EAA8B,CAAC,EAEnC,IAAK,IAAIC,KAAM/C,EAAIC,SAAS8D,GACxBiF,EAAuBjG,EAAID,EAAQ9C,GAGvC,OAAO8C,CACX,EAEA,2BA6DA,cASA,kB,gHCtHA,eAuBA,SAAgB2V,EAAiB1U,EAAeJ,EAAsB3D,GAClE,SAAI,IAAA2X,qBAAoB5T,EAAMJ,EAAO3D,EAIzC,CAfA,8BAAmC+D,EAAe/D,GAC9C,IAAI8C,EAAwB,CAAC,EAE7B,IAAI,IAAIC,KAAM/C,EAAIC,SAAS8D,GACvB0U,EAAiB1V,EAAID,EAAQ9C,GAGjC,OAAO8C,CACX,EAEA,oB,8GCxBA,eACA,SACA,SA4CA,IAAY4V,EA2IZ,SAASC,EAAa5U,EAAe/D,GACjC,MAAO,CACH4Y,gBAAiB5Y,EAAImH,QAAQpD,EAAM,OACnC8U,MAAO7Y,EAAIkN,WAAWnJ,EAAM,SAC5B+U,UAAW9Y,EAAIqF,SAAStB,EAAM,OAC9BgV,WAAY/Y,EAAIqF,SAAStB,EAAM,cAAc,GAC7CqK,QAASpO,EAAIC,SAAS8D,EAAM,OACvB7D,KAAIC,IAAK,CACNoO,MAAOvO,EAAIkN,WAAW/M,EAAG,KACzB0Y,MAAO7Y,EAAIkN,WAAW/M,EAAG,aAGzC,CAEA,SAAS6Y,EAAgBjV,EAAe/D,GACpC,MAAO,CACHiZ,QAASjZ,EAAIK,KAAK0D,EAAM,WACxBmV,UAAWlZ,EAAIK,KAAK0D,EAAM,aAC1BkE,OAAQjI,EAAIK,KAAK0D,EAAM,OACvByD,MAAOxH,EAAImH,QAAQpD,EAAM,SAEjC,CAEA,SAASoV,EAA2BpV,EAAe/D,GAC/C,MAAO,CACHI,GAAIJ,EAAIK,KAAK0D,EAAM,MACnBzF,KAAM0B,EAAIK,KAAK0D,EAAM,QAE7B,EAvKA,SAAY2U,GACR,0BACA,sBACA,0BACA,sBACA,mBACH,CAND,CAAYA,IAAW,cAAXA,EAAW,KAuDvB,kCAAuC3U,EAAe/D,EAAiB,W,QAC/DoZ,EAA6B,CAAC,EAElC,IAAIC,EAAqB,CAAC,EAE1B,IAAK,IAAIlZ,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,OACDkV,EAAQE,SAAW,CACf/K,MAAOvO,EAAIkN,WAAW/M,EAAG,KACzBoZ,OAAQvZ,EAAIkN,WAAW/M,EAAG,KAC1BqZ,YAAaxZ,EAAIK,KAAKF,EAAG,WAG7BkZ,EAAOC,SAAW,CACd/K,MAAOvO,EAAImH,QAAQhH,EAAG,KACtBoZ,OAAQvZ,EAAImH,QAAQhH,EAAG,MAE3B,MAEJ,IAAK,OACDiZ,EAAQ9a,KAAO0B,EAAIK,KAAKF,EAAG,OAC3B,MAEJ,IAAK,QACDiZ,EAAQK,YAAc,CAClB1H,KAAM/R,EAAIkN,WAAW/M,EAAG,QACxB6R,MAAOhS,EAAIkN,WAAW/M,EAAG,SACzBkW,IAAKrW,EAAIkN,WAAW/M,EAAG,OACvBmW,OAAQtW,EAAIkN,WAAW/M,EAAG,UAC1BuZ,OAAQ1Z,EAAIkN,WAAW/M,EAAG,UAC1BwZ,OAAQ3Z,EAAIkN,WAAW/M,EAAG,UAC1ByZ,OAAQ5Z,EAAIkN,WAAW/M,EAAG,WAG9BkZ,EAAOI,YAAc,CACjB1H,KAAM/R,EAAImH,QAAQhH,EAAG,QACrB6R,MAAOhS,EAAImH,QAAQhH,EAAG,SACtBkW,IAAKrW,EAAImH,QAAQhH,EAAG,OACpBmW,OAAQtW,EAAImH,QAAQhH,EAAG,UACvBuZ,OAAQ1Z,EAAImH,QAAQhH,EAAG,UACvBwZ,OAAQ3Z,EAAImH,QAAQhH,EAAG,UACvByZ,OAAQ5Z,EAAImH,QAAQhH,EAAG,WAE3B,MAEJ,IAAK,OACDiZ,EAAQhL,QAAUuK,EAAaxY,EAAGH,GAClC,MAEJ,IAAK,mBACkB,QAAlB,EAAAoZ,EAAQS,kBAAU,QAAKT,EAAQS,WAAa,IAAKzW,KAAK+V,EAA2BhZ,EAAGH,IACrF,MAEJ,IAAK,mBACkB,QAAlB,EAAAoZ,EAAQU,kBAAU,QAAKV,EAAQU,WAAa,IAAK1W,KAAK+V,EAA2BhZ,EAAGH,IACrF,MAEJ,IAAK,UACDoZ,EAAQW,UAAY/Z,EAAIqF,SAASlF,EAAG,OAAO,GAC3C,MAEJ,IAAK,YACDiZ,EAAQY,aAAc,IAAAC,cAAa9Z,EAAGH,GACtC,MAEJ,IAAK,YACDoZ,EAAQc,WAAalB,EAAgB7Y,EAAGH,GAMpD,IAAI,MAACuO,EAAK,OAAEgL,GAAUF,EAAOC,UACzB,KAACvH,EAAI,MAAEC,EAAK,IAAEqE,EAAG,OAAEC,GAAU+C,EAAOI,YAOxC,OALAL,EAAQe,YAAc,CAClB5L,OAAO,IAAA8E,eAAc9E,EAAQwD,EAAOC,GACpCuH,QAAQ,IAAAlG,eAAckG,EAASlD,EAAMC,IAGlC8C,CACX,C,oFCvLA,eAEA,SAGA,SAGA,SAqBa,KAA0B,CACnCgB,cAAc,EACd3X,aAAa,EACb4X,aAAa,EACbC,YAAY,EACZ5X,OAAO,EACP6X,cAAc,EACdrR,UAAW,OACXsR,WAAW,EACXnb,oBAAoB,EACpBob,6BAA6B,EAC7BC,eAAe,EACfC,eAAe,EACfC,iBAAiB,EACjBC,gBAAgB,EAChBC,cAAc,EACdC,eAAe,GAGnB,cAA2BC,EAAkBC,EAAgC,MACzE,MAAMC,EAAM,OAAH,wBAAO,MAAmBD,GACnC,OAAO,EAAAE,aAAand,KAAKgd,EAAM,IAAI,EAAAI,eAAeF,GAAMA,EAC5D,EAEA,KAAO1c,eAA2Bwc,EAAkBK,EAA4BC,EAA8B,KAAML,EAAgC,MAChJ,MAAMC,EAAM,OAAH,wBAAO,MAAmBD,GAE7BM,EAAW,IAAI,EAAAC,aAEfC,QAAY,EAAAN,aAAand,KAAKgd,EAAM,IAAI,EAAAI,eAAeF,GAAMA,GAInE,aAFMK,EAASG,OAAOD,EAAKJ,EAAeC,EAAgBJ,GAEnDO,CACX,EAEA,KAAOjd,eAA0Bwc,EAAkBK,EAA4BC,EAA8B,KAAML,EAAgC,MAC/I,MAAMC,EAAM,OAAH,wBAAO,MAAmBD,GAE7BM,EAAW,IAAI,EAAAI,iBAEfF,QAAY,EAAAN,aAAand,KAAKgd,EAAM,IAAI,EAAAI,eAAeF,GAAMA,GAInE,aAFMK,EAASG,OAAOD,EAAKJ,EAAeC,EAAgBJ,GAEnDO,CACX,C,wFC3EA,eACA,SAEA,MAAaG,UAAsB,EAAA7H,KAG/B,QAAAnU,CAASE,GACLtC,KAAKuT,OAAQ,IAAA8K,YAAW/b,EAAMtC,KAAK8B,SAASlC,UAChD,EALJ,iB,mHCDA,MAAM0e,EAAmB,CACrBC,aAAc,UACdC,UAAW,OACXC,YAAa,SACbC,gBAAiB,cAoBrB,SAAgB5L,EAAUvM,EAAe/D,GACrC,IAAI8C,EAA0B,CAC1B8B,KAAM5E,EAAIK,KAAK0D,EAAM,QACrBoY,cAAe,IAGnB,IAAK,IAAIpZ,KAAM/C,EAAIC,SAAS8D,GACxB,OAAQhB,EAAGmB,WACP,IAAK,SACDpB,EAAOsZ,OAASpc,EAAIK,KAAK0C,EAAI,OAC7B,MAEJ,IAAK,UACDD,EAAOuZ,QAAUrc,EAAIK,KAAK0C,EAAI,OAC9B,MAEJ,IAAK,eACL,IAAK,YACL,IAAK,cACL,IAAK,kBACDD,EAAOqZ,cAAc/Y,KAAKkZ,EAAkBvZ,EAAI/C,IAK5D,OAAO8C,CACX,CAEA,SAAgBwZ,EAAkBvY,EAAe/D,GAC7C,MAAO,CACHI,GAAIJ,EAAIK,KAAK0D,EAAM,MACnBwY,IAAKvc,EAAIK,KAAK0D,EAAM,WACpBzF,KAAMwd,EAAiB/X,EAAKG,WAEpC,CAtCA,sBAA2BpE,EAAeE,GACtC,OAAOA,EAAIC,SAASH,GAAMI,KAAI6C,GAAMuN,EAAUvN,EAAI/C,IACtD,EAEA,cA4BA,qB,gGCtDA,eAEA,MAAawc,UAAkB,EAAAC,mBAA/B,c,oBACI,KAAAne,KAAgB,EAAAyC,QAAQ2b,MAC5B,EAFA,cAIA,MAAaC,UAAkB,EAAAF,mBAA/B,c,oBACI,KAAAne,KAAgB,EAAAyC,QAAQ6b,MAC5B,EAFA,a,yHCLA,eAGA,SAEA,MAAsBC,UAAwE,EAAA9I,KAK1F,WAAA9W,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,GACXC,KAAKia,gBAAkBvP,CAC3B,CAEA,QAAAtI,CAASE,GACLtC,KAAKsf,YAActf,KAAKuf,oBACxBvf,KAAKsf,YAAY5Z,SAAW1F,KAAKia,gBAAgBtU,kBAAkBrD,EACvE,EAbJ,yBAkBA,2BAAgC+c,EAClB,iBAAAE,GACN,OAAO,IAAI,EAAAP,SACf,GAGJ,2BAAgCK,EAClB,iBAAAE,GACN,OAAO,IAAI,EAAAJ,SACf,E,2FChCJ,eAkBA,SACA,SAYMpG,EAGM,qCAsvDZ,SAASyG,EAAqDC,EAAYtZ,GACtE,OAAOuZ,EAAgB,KAAMD,EAAStZ,EAC1C,CAGA,SAASwZ,EAAuDF,EAAYtZ,GACxE,OAAOuZ,EA7vDF,6BA6vD0BD,EAAStZ,EAC5C,CAMA,SAASuZ,EAAmB3G,EAAY0G,EAAYtZ,EAAmCT,GACnF,IAAIka,EACJ,OAAQ7G,GACJ,IAAK,qCAGL,IAAK,6BACD6G,EAAUC,SAASH,gBAAgB3G,EAAI0G,GACvC,MAIJ,QACIG,EAAUC,SAASL,cAAcC,GAWzC,OARItZ,GACA2Z,OAAOC,OAAOH,EAASzZ,GAGvBT,GACAsa,EAAeJ,EAASla,GAGrBka,CACX,CAGA,SAASK,EAAkB1Z,GACvBA,EAAK2Z,UAAY,EACrB,CAGA,SAASF,EAAenU,EAAiBnG,GACjCya,MAAMC,QAAQ1a,GACdmG,EAAOwU,UAAU3a,GACVA,KACH,IAAA4a,UAAS5a,GACTmG,EAAOwU,OAAO3a,GAEdmG,EAAO0U,YAAY7a,GAG/B,CAkCA,SAAS8a,EAAmBC,GACxB,OAAOjB,EAAc,QAAS,CAACU,UAAWO,GAC9C,CAGA,SAASC,EAAcna,EAAmBoa,GACtCpa,EAAKga,YAAYV,SAASe,cAAcD,GAC5C,CAv0DA,uCAEI,KAAAjV,UAAoB,OAIpB,KAAAmV,SAAsC,CAAC,EACvC,KAAAC,YAAoB,KAMpB,KAAAC,gBAAkC,CAAClV,OAAQ,MAE3C,KAAAmV,oBAA+C,GAC/C,KAAAC,qBAA8C,KAC9C,KAAAC,mBAAgC,GAChC,KAAAC,oBAA+B,KAE/B,KAAAC,YAA2C,CAAC,EAC5C,KAAAC,WAA0C,CAAC,EAE3C,KAAAC,kBAA8B,GAC9B,KAAAC,qBAA8B,GAI9B,KAAAC,YAAqB,GACrB,KAAAC,YAAmB,CA8rDvB,CAnrDI,MAAAvD,CAAO2B,EAAwBhC,EAA4BC,EAA8B,KAAMne,G,MAC3FK,KAAK6f,SAAWA,EAChB7f,KAAKL,QAAUA,EAEfK,KAAK0L,UAAY/L,EAAQ+L,UAEzB1L,KAAK0hB,aAAe/hB,EAAQqd,UAAY,IAAIhd,KAAK0L,oBAAsB,QAEvE1L,KAAK6gB,SAAW,KAEhB7gB,KAAK2hB,QAAU9D,EAKfoC,EAHAnC,EAAiBA,GAAkBD,GAKnCoC,EAAkBpC,GAGlB6C,EAAc5C,EAAgB,oCAE9BA,EAAeyC,YAAYvgB,KAAK4hB,sBAG5B/B,EAASgC,YACTnB,EAAc5C,EAAgB,gCAC9B9d,KAAK8hB,YAAYjC,EAASgC,UAAW/D,IAGd,MAAvB+B,EAASkC,aACT/hB,KAAK6gB,SAAW7gB,KAAKgiB,cAAcnC,EAASkC,WAAWza,QAEvDoZ,EAAc5C,EAAgB,0BAC9BA,EAAeyC,YAAYvgB,KAAKiiB,aAAapC,EAASkC,WAAWza,UAGjEuY,EAASqC,gBACTliB,KAAKmiB,kBAAkBtC,EAASqC,cAAcE,eAE9C1B,EAAc5C,EAAgB,oCAC9BA,EAAeyC,YAAYvgB,KAAKqiB,gBAAgBxC,EAASqC,cAAcE,cAAetE,MAIrFne,EAAQkd,aAAegD,EAASyC,eACjCtiB,KAAKuiB,gBAAgB1C,EAASyC,cAAexE,GAG7C+B,EAAS2C,gBACTxiB,KAAKohB,aAAc,IAAAqB,OAAM5C,EAAS2C,cAAcE,OAAOvZ,GAAKA,EAAEvG,MAG9Did,EAAS8C,eACT3iB,KAAKqhB,YAAa,IAAAoB,OAAM5C,EAAS8C,aAAaD,OAAOvZ,GAAKA,EAAEvG,MAG5Did,EAAS+C,eACT5iB,KAAK6iB,eAA+C,QAA9B,EAAAhD,EAAS+C,aAAaE,gBAAQ,eAAEC,gBAGtD/iB,KAAKL,QAAQqd,WACbhd,KAAK2hB,QAAU3hB,KAAKgjB,gBACpBnF,EAAc0C,YAAYvgB,KAAK2hB,UAE/B3hB,KAAK2hB,QAAU9D,EAGnB7d,KAAKijB,eAAepD,EAASqD,aAAahJ,MAG1Cla,KAAKmjB,iBACT,CAGA,kBAAAvB,GACI,IAAIra,EAAIvH,KAAK0L,UAgBb,OAAO8U,EAfS,YAClBjZ,uIACAA,qBAAqBA,kGACrBA,qDACOA,qIACSA,6GACTA,8DACAA,mEACPA,kDACAA,gBAAgBA,+CAChBA,iDACAA,wEACAA,0DAIF,CAGA,WAAAua,CAAYD,EAAsB/D,G,QAC9B,MAAMsF,EAAY,CAAC,EACbC,EAA4B,QAAf,EAAAxB,EAAUyB,aAAK,eAAED,WAEhCA,IACIA,EAAWE,YACXH,EAAU,0BAA4BC,EAAWE,UAAUC,eAG3DH,EAAWI,YACXL,EAAU,0BAA4BC,EAAWI,UAAUD,gBAInE,MAAME,EAA6B,QAAf,EAAA7B,EAAUyB,aAAK,eAAEI,YAErC,GAAIA,EACA,IAAK,IAAKC,EAAGjO,KAAMoK,OAAO8D,QAAQF,EAAYG,QAC1CT,EAAU,UAAUO,WAAa,IAAIjO,IAI7C,MAAM+K,EAAUzgB,KAAK8jB,cAAc,IAAI9jB,KAAK0L,YAAa0X,GACzDtF,EAAeyC,YAAYC,EAAmBC,GAClD,CAGA,gBAAAsD,CAAiBrY,GACb,OAAOA,EAAY,GAAG1L,KAAK0L,cAAa,IAAAsY,iBAAgBtY,KAAe1L,KAAK0L,SAChF,CAGA,aAAAsW,CAAc1a,GAEV,MAAM2c,GAAY,IAAAxB,OAAMnb,EAAO6M,QAAOhL,GAAa,MAARA,EAAEvG,MAAauG,GAAKA,EAAEvG,KAEjE,IAAK,MAAMiH,KAASvC,EAAO6M,QAAOhL,GAAKA,EAAE9B,UAAU,CAC/C,IAAI6c,EAAYD,EAAUpa,EAAMxC,SAEhC,GAAI6c,EAAW,CAEXra,EAAM3B,gBAAiB,IAAAic,WAAUta,EAAM3B,eAAgBgc,EAAUhc,gBACjE2B,EAAMzB,UAAW,IAAA+b,WAAUta,EAAMzB,SAAU8b,EAAU9b,UAErD,IAAK,MAAMgc,KAAcF,EAAU5c,OAAQ,CACvC,MAAM+c,EAAcxa,EAAMvC,OAAOiD,MAAKpB,GAAKA,EAAErG,QAAUshB,EAAWthB,SAE9DuhB,EACArkB,KAAKskB,oBAAoBF,EAAW3c,OAAQ4c,EAAY5c,QAExDoC,EAAMvC,OAAO1B,KAAK,OAAD,wBAAKwe,GAAU,CAAE3c,OAAQ,OAAF,UAAM2c,EAAW3c,U,OAG1DzH,KAAKL,QAAQuF,OACpBsD,QAAQC,KAAK,yBAAyBoB,EAAMxC,U,CAIpD,IAAK,IAAIwC,KAASvC,EACduC,EAAM0a,QAAUvkB,KAAK+jB,iBAAiBla,EAAMjH,IAGhD,OAAOqhB,CACX,CAEA,YAAAhC,CAAa3a,G,MACT,IAAIkd,EAAY,GAChB,MAAMP,EAAYjkB,KAAK6gB,SACjB4D,GAAgB,IAAAhC,OAAMnb,EAAO6M,QAAO7L,GAAKA,EAAEV,aAAYU,GAAKA,EAAExF,SAEpE,IAAK,MAAM+G,KAASvC,EAAQ,CACxB,IAAIod,EAAY7a,EAAMvC,OAEtB,GAAIuC,EAAM/B,OAAQ,CACd,IAAI6c,EAAc9a,EAAM/B,QAAUmc,EAAUpa,EAAM/B,QAE9C6c,EACAD,EAAYA,EAAUE,OAAOD,EAAYrd,QACpCtH,KAAKL,QAAQuF,OAClBsD,QAAQC,KAAK,2BAA2BoB,EAAM/B,S,CAGtD,IAAK,MAAM+c,KAAYH,EAAW,CAE9B,IAAIhc,EAAW,GAAe,QAAZ,EAAAmB,EAAM/G,cAAM,QAAI,MAAM+G,EAAM0a,UAE1C1a,EAAM/G,QAAU+hB,EAAS/hB,SACzB4F,GAAY,IAAImc,EAAS/hB,UAEzB2hB,EAAc5a,EAAM/G,SAAW+G,IAC/BnB,EAAW,IAAI1I,KAAK0L,aAAa7B,EAAM/G,WAAa4F,GAExD8b,GAAaxkB,KAAK8jB,cAAcpb,EAAUmc,EAASpd,O,EAI3D,OAAO+Y,EAAmBgE,EAC9B,CAEA,iBAAArC,CAAkB2C,G,MACd,IAAK,IAAIC,KAAOD,EAAW3Q,QAAOlN,GAAKA,EAAEgD,aAAa,CAClD,MAAMJ,EAAQ7J,KAAKglB,UAAUD,EAAI9a,aAER,QAArB,EAAAJ,aAAK,EAALA,EAAO3B,sBAAc,eAAEqS,aACvB1Q,EAAM3B,eAAeqS,UAAUxQ,MAAQgb,EAAIhb,M,CAGvD,CAEA,eAAAsY,CAAgByC,EAA6BhH,GACzC,IAAI0G,EAAY,GACZS,EAAgB,GAEpB,IAAK,IAAIF,KAAOD,EAAY,CACxB,IAAIpc,EAAW,KAAK1I,KAAKklB,eAAeH,EAAIniB,GAAImiB,EAAIhb,SAChDob,EAAgB,OAEpB,GAAIJ,EAAIza,OAAQ,CACZ,IAAI8a,EAAW,KAAKplB,KAAK0L,aAAaqZ,EAAIza,OAAOV,MAAMyb,cAEvDb,GAAaxkB,KAAK8jB,cAAc,GAAGpb,WAAmB,CAClD,QAAW,MACX,QAAW,eACX,WAAc,OAAO0c,MACtBL,EAAIza,OAAOT,OAEd7J,KAAK6f,SAASyF,mBAAmBP,EAAIza,OAAOV,KAAK2b,MAAK/H,IAClD,IAAIjR,EAAO,GAAGvM,KAAK0hB,kBAAkB0D,UAAiB5H,OACtDM,EAAeyC,YAAYC,EAAmBjU,GAAM,G,MAErD,GAAIwY,EAAIva,UAAW,CACtB,IAAIgb,EAAUxlB,KAAKylB,iBAAiBV,EAAIniB,GAAImiB,EAAIhb,OAChD,MAAM2b,EAAeF,EAAU,KAAOT,EAAI/a,MAAQ,GAC9C+a,EAAIhb,MAAQ,IACZya,GAAaxkB,KAAK8jB,cAAc,KAAK9jB,KAAKklB,eAAeH,EAAIniB,GAAImiB,EAAIhb,MAAQ,KAAM,CAC/E,gBAAiB2b,KAIzBT,EAAcrf,KAAK8f,GAEnBlB,GAAaxkB,KAAK8jB,cAAc,GAAGpb,WAAmB,OAAF,QAChD,QAAW1I,KAAK2lB,mBAAmBZ,EAAIva,UAAWua,EAAI1a,KAAM0a,EAAIniB,GAAI5C,KAAK4lB,oBAAoBb,EAAIta,SACjG,oBAAqB+a,GAClBT,EAAI3a,Q,MAGX+a,EAAgBnlB,KAAK4lB,oBAAoBb,EAAIta,QAGjD+Z,GAAaxkB,KAAK8jB,cAAcpb,EAAU,OAAF,QACpC,QAAW,YACX,sBAAuB,SACvB,kBAAmByc,GAChBJ,EAAI5a,Q,CAUf,OANI8a,EAAc7Q,OAAS,IACvBoQ,GAAaxkB,KAAK8jB,cAAc9jB,KAAK0hB,aAAc,CAC/C,gBAAiBuD,EAAc5Y,KAAK,QAIrCmU,EAAmBgE,EAC9B,CAEA,cAAAU,CAAetiB,EAAYijB,GACvB,MAAO,GAAG7lB,KAAK0L,iBAAiB9I,KAAMijB,GAC1C,CAEA,aAAA/B,CAAcgC,EAAmBre,EAAgCgZ,EAAkB,MAC/E,IAAInb,EAAS,GAAGwgB,UAEhB,IAAK,MAAM/G,KAAOtX,EACVsX,EAAI7e,WAAW,OAGnBoF,GAAU,KAAKyZ,MAAQtX,EAAOsX,WAMlC,OAHI0B,IACAnb,GAAUmb,GAEPnb,EAAS,OACpB,CAEA,gBAAAmgB,CAAiB7iB,EAAYijB,GACzB,MAAO,GAAG7lB,KAAK0L,iBAAiB9I,KAAMijB,GAC1C,CAEA,kBAAAF,CAAmBpZ,EAAclC,EAAczH,EAAYmjB,G,MAWvD,MAAO,IALMxZ,EAAKyZ,QAAQ,SAAS1d,IAC/B,IAAIud,EAAM5O,SAAS3O,EAAE2d,UAAU,GAAI,IAAM,EACzC,MAAO,YAAYjmB,KAAKylB,iBAAiB7iB,EAAIijB,OAASE,KAAa,MAGtC,QAAb,EAVJ,CACZ,IAAO,MACP,MAAS,QAQe1b,UAAK,QAAI,KACzC,CAEA,mBAAAub,CAAoBnb,G,MA2ChB,OAAsB,QAAf,EA1CO,CACVyb,KAAM,OACN5b,OAAQ,OACR6b,QAAS,UACTC,YAAa,cACbC,YAAa,cACbC,WAAY,cACZC,WAAY,cACZC,YAAa,uBAMbC,MAAO,WACPC,eAAgB,WAChBC,gBAAiB,wBACjBC,wBAAyB,wBACzBC,uBAAwB,sBACxBC,QAAS,mBACTC,iBAAkB,kBAClBC,qBAAsB,oBACtBC,0BAA2B,sBAC3BC,gBAAiB,qBACjBC,MAAO,iBACPC,eAAgB,iBAChBC,iBAAkB,oBAClBC,2BAA4B,cAC5BC,cAAe,kBACfC,YAAa,OACbC,eAAgB,uBAChBC,cAAe,uBACfC,eAAgB,wBAChBC,QAAS,SACTC,QAAS,SACTC,aAAc,aACdC,OAAQ,SACRC,kBAAmB,kBACnBC,0BAA2B,kBAC3BC,iBAAkB,eAGPzd,UAAO,QAAIA,CAC9B,CAoEA,eAAA8X,CAAgB4F,EAA0BrK,GACtC,IAAK,IAAIzc,KAAK8mB,EAAU5U,MACpB,IAAK,IAAI6U,KAAO/mB,EAAEsd,cACd3e,KAAK6f,SAASwI,SAASD,EAAIxlB,GAAIwlB,EAAIrJ,KAAKwG,MAAK+C,IACzC,MAAMC,EAAY,CACd,cAAelnB,EAAE+F,KACjB,IAAO,OAAOkhB,MAGF,QAAZF,EAAItnB,MAA8B,cAAZsnB,EAAItnB,OAC1BynB,EAAU,eAAiB,QAGf,UAAZH,EAAItnB,MAAgC,cAAZsnB,EAAItnB,OAC5BynB,EAAU,cAAgB,UAG9B7H,EAAc5C,EAAgB,UAAUzc,EAAE+F,aAC1C,MAAMqZ,EAAUzgB,KAAK8jB,cAAc,aAAcyE,GACjDzK,EAAeyC,YAAYC,EAAmBC,IAC9CzgB,KAAKmjB,iBAAiB,GAItC,CAGA,aAAAH,GACI,OAAOxD,EAAc,MAAO,CAAC9T,UAAW,GAAG1L,KAAK0L,qBACpD,CAGA,mBAAA4Y,CAAoB7jB,EAA+BsU,EAAgCyT,EAAkB,MACjG,IAAK/nB,EACD,OAAOsU,EAEG,MAAVA,IACAA,EAAS,CAAC,GAED,MAATyT,IACAA,EAAQ1I,OAAO2I,oBAAoBhoB,IAGvC,IAAK,IAAIse,KAAOyJ,EACR/nB,EAAMioB,eAAe3J,KAAShK,EAAO2T,eAAe3J,KACpDhK,EAAOgK,GAAOte,EAAMse,IAG5B,OAAOhK,CACX,CAGA,cAAA4T,CAAe5iB,GACX,GAAIA,EAAQL,SACR,IAAK,IAAI/C,KAAKoD,EAAQL,SAClB/C,EAAEkJ,OAAS9F,EAEPpD,EAAE7B,MAAQ,EAAAyC,QAAQmN,MAElB1Q,KAAK4oB,aAAajmB,GAGlB3C,KAAK2oB,eAAehmB,EAIpC,CAGA,YAAAimB,CAAa5X,GACT,IAAK,IAAI6X,KAAK7X,EAAMtL,SAChB,IAAK,IAAI6B,KAAKshB,EAAEnjB,SACZ6B,EAAElB,SAAWrG,KAAKskB,oBAAoBtT,EAAMC,UAAW1J,EAAElB,SAAU,CAC/D,cAAe,eAAgB,aAAc,gBAC7C,eAAgB,gBAAiB,cAAe,mBAGpDrG,KAAK2oB,eAAephB,EAGhC,CAGA,cAAAuhB,CAAermB,G,MAEX,IAAIsmB,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAW,CAACH,GAEhB,IAAK,IAAIxiB,KAAQ9D,EAAU,CAIvB,GAFAsmB,EAAgBtmB,SAASmD,KAAKW,GAE1BA,EAAKzF,MAAQ,EAAAyC,QAAQ0H,UAAW,CAChC,MAAMke,EAAI5iB,EAEV,IAAIyiB,EAAYG,EAAE7O,aAOlB,MAAM8O,EAA0BppB,KAAKglB,UAAUmE,EAAE1d,YAGN,QAAvC,EAAA2d,aAAuB,EAAvBA,EAAyBlhB,sBAAc,eAAE4S,mBAEzCiO,EAAgBE,UAAW,EAE3BF,EAAgBC,UAAYA,EAE5BD,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAStjB,KAAKmjB,IAIlB,IAAIM,GAAe,EAEfC,GAAe,EAgDnB,GA7CIH,EAAEzjB,WAEF2jB,EAAcF,EAAEzjB,SAAS6jB,WAAUV,I,MAoB/B,OAlBAS,EAAwB,QAAV,EAAAT,EAAEnjB,gBAAQ,eAAE6jB,WAAWC,GAE7BA,EAAE1oB,MAAQ,EAAAyC,QAAQ2J,QAIO,yBAAxBsc,EAAerc,MAIT4b,EAAgBtmB,SAAS2R,OAAS,IAAMpU,KAAKL,QAAQsd,4BAGlC,SAAzBuM,EAAerc,YAApB,KAIJmc,EAAcA,QAAAA,GAAgB,GACP,GAAhBA,CAAiB,KAI5BN,IAEAD,EAAgBE,UAAW,IAGX,GAAhBI,IAEAN,EAAgBE,UAAW,IAG3BD,IAA6B,GAAhBK,KAEbN,EAAgBC,UAAYA,EAE5BD,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAStjB,KAAKmjB,KAGE,GAAhBM,EAAmB,CAEnB,IAAII,EAAWN,EAAEzjB,SAAS2jB,GAEtBJ,EAAWK,EAAcG,EAAS/jB,SAAS0O,OAAS,EAExD,GAAIiV,EAAcF,EAAEzjB,SAAS0O,OAAS,GAAK6U,EAAU,CAEjD,IAAIS,EAAaP,EAAEzjB,SAEfikB,EAAgB,OAAH,wBAAOR,GAAC,CAAEzjB,SAAUgkB,EAAWE,MAAMP,KAMtD,GAJAF,EAAEzjB,SAAWgkB,EAAWE,MAAM,EAAGP,GAEjCN,EAAgBtmB,SAASmD,KAAK+jB,GAE1BV,EAAU,CAEV,IAAIY,EAAkBJ,EAAS/jB,SAE3BokB,EAAS,OAAH,wBAAOL,GAAQ,CAAE/jB,SAAUmkB,EAAgBD,MAAM,EAAGN,KAE9DH,EAAEzjB,SAASE,KAAKkkB,GAEhBL,EAAS/jB,SAAWmkB,EAAgBD,MAAMN,E,IAOtD/iB,EAAKzF,OAAS,EAAAyC,QAAQmN,QACtBqY,EAAgBE,UAAW,E,CAMnC,IAAIc,EAAmB,KAEvB,IAAK,IAAI7U,EAAIgU,EAAS9U,OAAS,EAAGc,GAAK,EAAGA,IACT,MAAzBgU,EAAShU,GAAG8T,UACZE,EAAShU,GAAG8T,UAAYe,EAExBA,EAAmBb,EAAShU,GAAG8T,UAGvC,OAAOE,CACX,CAGA,cAAAjG,CAAepD,GAIX,IAAIqJ,EAFJlpB,KAAK2oB,eAAe9I,GAKhBqJ,EAFAlpB,KAAKL,QAAQmd,WAEF9c,KAAK8oB,eAAejJ,EAASna,UAG7B,CAAC,CAACsjB,UAAWnJ,EAAS1Z,MAAO1D,SAAUod,EAASna,SAAUujB,UAAU,IAGnF,IAAIe,EAAY,KAEhB,IAAK,IAAI9U,EAAI,EAAG+U,EAAIf,EAAS9U,OAAQc,EAAI+U,EAAG/U,IAAK,CAC7ClV,KAAKkqB,mBAAqB,GAE1B,IAAItO,EAAmBsN,EAAShU,IAE5B,UAAC8T,GAAapN,EAElBA,EAAQoN,UAAYA,QAAAA,EAAanJ,EAAS1Z,MAE1CyV,EAAQuO,eAAiBH,GAAahB,EAEtCpN,EAAQwO,cAAgBlV,IAAO+U,EAAI,EAEnCrO,EAAQyO,UAAYnV,EAEpB0G,EAAQ0O,mBAAoB,EAE5BtqB,KAAK+oB,gBAAkBnN,EAEvB5b,KAAKuqB,gBAELP,EAAYhB,C,CAEpB,CAGA,aAAAuB,GAEI,IAAI3O,EAAmB5b,KAAK+oB,iBAExB,UAACC,EAAS,eAAEmB,EAAc,cAAEC,EAAa,UAAEC,GAAazO,EAE5D,MAAM4O,EAAiBxqB,KAAKyqB,cAAczqB,KAAK0L,UAAWsd,GAE1DhpB,KAAK0qB,kBAAkB1qB,KAAK6f,SAASqD,aAAahJ,KAAK7T,SAAUmkB,GAE7DxqB,KAAKL,QAAQud,eACbld,KAAK2qB,sBAAsB3B,EAAU3M,WAAY2M,EAAWqB,EAAWF,EAAgBK,GAGvFxqB,KAAKL,QAAQyd,iBACbpd,KAAK4qB,YAAY5qB,KAAKkqB,mBAAoBlqB,KAAKohB,YAAaoJ,GAG5DxqB,KAAKL,QAAQ0d,gBAAkB+M,GAC/BpqB,KAAK4qB,YAAY5qB,KAAKshB,kBAAmBthB,KAAKqhB,WAAYmJ,GAG1DxqB,KAAKL,QAAQwd,eACbnd,KAAK2qB,sBAAsB3B,EAAU1M,WAAY0M,EAAWqB,EAAWF,EAAgBK,GAG3F,IAAIK,EAAiBrL,EAAc,WAE/Bxf,KAAKL,QAAQmd,WAEb+N,EAAehhB,MAAMkS,OAASiN,EAAUrM,YAAYZ,OAGpD8O,EAAehhB,MAAMihB,UAAY9B,EAAUrM,YAAYZ,OAG3D/b,KAAK+oB,gBAAgB8B,eAAiBA,EAEtCL,EAAejK,YAAYsK,GAE3B7qB,KAAK+oB,gBAAgBuB,mBAAoB,EAEzCtqB,KAAK+qB,eAAenP,EAAQnZ,SAAUooB,GAEtC7qB,KAAK+oB,gBAAgBuB,mBAAoB,CAC7C,CAGA,aAAAG,CAAc/e,EAAmBvF,GAC7B,IAAII,EAAOiZ,EAAc,UAAW,CAAC9T,cA+BrC,OA7BIvF,IACIA,EAAM8V,cACN1V,EAAKsD,MAAMmhB,YAAc7kB,EAAM8V,YAAY1H,KAC3ChO,EAAKsD,MAAMohB,aAAe9kB,EAAM8V,YAAYzH,MAC5CjO,EAAKsD,MAAMqhB,WAAa/kB,EAAM8V,YAAYpD,IAC1CtS,EAAKsD,MAAMshB,cAAgBhlB,EAAM8V,YAAYnD,QAG7C3S,EAAM2V,WACD9b,KAAKL,QAAQsF,cACdsB,EAAKsD,MAAMkH,MAAQ5K,EAAM2V,SAAS/K,OAEjC/Q,KAAKL,QAAQid,eACdrW,EAAKsD,MAAMihB,UAAY3kB,EAAM2V,SAASC,SAI1C5V,EAAMyK,SAAWzK,EAAMyK,QAAQwK,kBAC/B7U,EAAKsD,MAAMuhB,YAAc,GAAGjlB,EAAMyK,QAAQwK,kBAC1C7U,EAAKsD,MAAMwhB,UAAYllB,EAAMyK,QAAQyK,MAEjClV,EAAMyK,QAAQ0K,YACd/U,EAAKsD,MAAMyhB,WAAa,qBAKpCtrB,KAAK2hB,QAAQpB,YAAYha,GAElBA,CACX,CAIA,qBAAAokB,CAAsBY,EAA+BplB,EAA0BqlB,EAAcC,EAAyB5f,G,oBAClH,IAAK0f,EAAM,OAEX,IAAInD,EAC4D,QADrD,EAA6E,QAA9E,EAACjiB,EAAMoW,WAAakP,EAAiBF,EAAKhhB,MAAKpB,GAAe,SAAVA,EAAErI,OAAmB,YAAK,QAChF0qB,EAAO,GAAK,EAAID,EAAKhhB,MAAKpB,GAAe,QAAVA,EAAErI,OAAkB,YAAK,QACzDyqB,EAAKhhB,MAAKpB,GAAe,WAAVA,EAAErI,OAGpB4qB,EAAOtD,GAAOpoB,KAAK6f,SAAS8L,gBAAgBvD,EAAIxlB,GAAI5C,KAAK6f,SAASqD,cAEtE,GAAIwI,EAAM,CAON,OANA1rB,KAAK8gB,YAAc4K,EACd1rB,KAAKuhB,qBAAqBxS,SAAS2c,EAAK3rB,QACzCC,KAAK2oB,eAAe+C,EAAKpM,aACzBtf,KAAKuhB,qBAAqB3b,KAAK8lB,EAAK3rB,OAGhC2rB,EAAKpM,YAAYxe,MACrB,KAAK,EAAAyC,QAAQ2b,OACTwM,EAAKpM,YAAYjZ,SAAW,CACxBkO,KAAuB,QAAjB,EAAApO,EAAM8V,mBAAW,eAAE1H,KACzBxD,MAAwB,QAAjB,EAAA5K,EAAMwW,mBAAW,eAAE5L,MAC1BgL,OAAyB,QAAjB,EAAA5V,EAAM8V,mBAAW,eAAEpD,KAE/B,MACJ,KAAK,EAAAtV,QAAQ6b,OACTsM,EAAKpM,YAAYjZ,SAAW,CACxBkO,KAAuB,QAAjB,EAAApO,EAAM8V,mBAAW,eAAE1H,KACzBxD,MAAwB,QAAjB,EAAA5K,EAAMwW,mBAAW,eAAE5L,MAC1BgL,OAAyB,QAAjB,EAAA5V,EAAM8V,mBAAW,eAAEnD,QAE/B,MACJ,QACItQ,QAAQC,KAAK,gCAAiCijB,EAAKpM,YAAYxe,MAIvEd,KAAK+qB,eAAe,CAACW,EAAKpM,aAAczT,GACxC7L,KAAK8gB,YAAc,I,CAE3B,CAGA,WAAA8J,CAAYgB,EAAmBC,EAAuChgB,GAClE,IAAI6W,EAAQkJ,EAAQlpB,KAAIE,GAAMipB,EAASjpB,KAAKuR,QAAOhL,GAAKA,IAExD,GAAIuZ,EAAMtO,OAAS,EAAG,CAClB,IAAI0X,EAAQtM,EAAc,KAAM,MAChCxf,KAAK+qB,eAAerI,EAAOoJ,GAC3BjgB,EAAO0U,YAAYuL,E,CAE3B,CAGA,cAAAf,CAAegB,EAAyBlgB,GAEpC,IAAK,IAAIqJ,EAAI,EAAGA,EAAI6W,EAAM3X,OAAQc,IAC9BlV,KAAKgsB,cAAcD,EAAM7W,GAAIrJ,GAE7B7L,KAAK+oB,gBAAgBkD,aAAe/W,CAG5C,CAGA,aAAA8W,CAAczlB,EAAsBsF,GAChC,IAAIqgB,EAEJ,OAAQ3lB,EAAKzF,MACT,KAAK,EAAAyC,QAAQ0H,UACTihB,EAAQlsB,KAAKmsB,gBAAgB5lB,EAAsBsF,GACnD,MACJ,KAAK,EAAAtI,QAAQ6U,cACT8T,EAAQlsB,KAAKosB,oBAAoB7lB,EAA0BsF,GAC3D,MACJ,KAAK,EAAAtI,QAAQgV,YACT2T,EAAQ,KACR,MACJ,KAAK,EAAA3oB,QAAQ2I,IACTggB,EAAQlsB,KAAKqsB,UAAU9lB,EAAgBsF,GACvC,MACJ,KAAK,EAAAtI,QAAQmN,MACTwb,EAAQlsB,KAAKssB,YAAY/lB,EAAMsF,GAC/B,MACJ,KAAK,EAAAtI,QAAQoO,IACTua,EAAQlsB,KAAKusB,eAAehmB,EAAMsF,GAClC,MACJ,KAAK,EAAAtI,QAAQyO,KACTka,EAAQlsB,KAAKwsB,gBAAgBjmB,EAAMsF,GACnC,MACJ,KAAK,EAAAtI,QAAQuI,UACTogB,EAAQlsB,KAAKysB,gBAAgBlmB,EAAMsF,GACnC,MACJ,KAAK,EAAAtI,QAAQ0L,QACTid,EAAQlsB,KAAK0sB,cAAcnmB,EAAMsF,GACjC,MACJ,KAAK,EAAAtI,QAAQ8M,MACT6b,EAAQlsB,KAAK2sB,YAAYpmB,EAAmBsF,GAC5C,MACJ,KAAK,EAAAtI,QAAQ+I,KACT4f,EAAQlsB,KAAK4sB,WAAWrmB,EAAiBsF,GACzC,MACJ,KAAK,EAAAtI,QAAQiJ,YACT0f,EAAQlsB,KAAK6sB,kBAAkBtmB,EAAiBsF,GAChD,MACJ,KAAK,EAAAtI,QAAQgK,IACT2e,EAAQlsB,KAAK8sB,UAAUvmB,EAAMsF,GAC7B,MACJ,KAAK,EAAAtI,QAAQ6J,OACT8e,EAAQlsB,KAAK+sB,aAAaxmB,EAAmBsF,GAC7C,MACJ,KAAK,EAAAtI,QAAQ2J,MACTgf,EAAQlsB,KAAKgtB,YAAYzmB,EAAkBsF,GAC3C,MACJ,KAAK,EAAAtI,QAAQ6b,OACT8M,EAAQlsB,KAAKitB,mBAAmB1mB,EAAM,UAClCsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQ2b,OACTgN,EAAQlsB,KAAKitB,mBAAmB1mB,EAAM,UAClCsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQ2pB,SACb,KAAK,EAAA3pB,QAAQ4pB,QACTjB,EAAQlsB,KAAKotB,gBAAgB7mB,EAAM,MAC/BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQiK,kBACT0e,EAAQlsB,KAAKqtB,wBAAwB9mB,GACjCsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQkK,iBACTye,EAAQlsB,KAAKstB,uBAAuB/mB,GAChCsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQ0J,cACTif,EAAQ1M,EAAc,OAClB3T,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQiL,WACT0d,EAAQlsB,KAAKutB,iBAAiBhnB,GAC1BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQiqB,WACTtB,EAAQlsB,KAAKytB,iBAAiBlnB,GAC1BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQC,QACT0oB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,OAAQ,CAAC4U,MAAO5U,IAC5DlN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQE,iBACTyoB,EAAQlsB,KAAKotB,gBAAgB7mB,EAAM,QAC/BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQG,YACTwoB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,SAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQU,QACTioB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAWxS,EAAKsF,OAAO/K,MAAQ,EAAAyC,QAAQsB,aAAe,MAAQ,QAC/FgH,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQM,aACb,KAAK,EAAAN,QAAQO,eACb,KAAK,EAAAP,QAAQI,YACb,KAAK,EAAAJ,QAAQmB,SACb,KAAK,EAAAnB,QAAQuB,OACTonB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQyB,aACTknB,EAAQlsB,KAAK4tB,mBAAmBrnB,GAC5BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQoB,cACTunB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,UAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQqB,UACTsnB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,UAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQsB,aACTqnB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,OAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQQ,WACTmoB,EAAQlsB,KAAK6tB,iBAAiBtnB,GAC1BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQW,eACTgoB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQY,aACT+nB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQS,UACb,KAAK,EAAAT,QAAQc,iBACb,KAAK,EAAAd,QAAQe,eACT4nB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,MAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQK,gBACTsoB,EAAQlsB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,MAC5ClN,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQgB,aACT2nB,EAAQlsB,KAAK8tB,mBAAmBvnB,GAC5BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQwK,OACTme,EAAQlsB,KAAK+tB,aAAaxnB,GACtBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQiB,QACT0nB,EAAQlsB,KAAKguB,cAAcznB,GACvBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQa,eACT8nB,EAAQlsB,KAAKiuB,qBAAqB1nB,GAC9BsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQwB,OACTmnB,EAAQlsB,KAAKkuB,aAAa3nB,GACtBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQkB,iBACTynB,EAAQlsB,KAAKmuB,cAAc5nB,GACvBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQuH,SACTohB,EAAQlsB,KAAKouB,eAAe7nB,GACxBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAEhC,MACJ,KAAK,EAAA3oB,QAAQyH,QACTkhB,EAAQlsB,KAAKquB,cAAc9nB,GACvBsF,GACA7L,KAAKggB,eAAenU,EAAQqgB,GAKxC,OAAOA,CACX,CAGA,kBAAAoC,CAAmB/nB,GAEf,OAAIA,EAAKzF,MAAQ,EAAAyC,QAAQ2J,QAIO,yBAA3B3G,EAAkB4G,OACXnN,KAAKL,QAAQsd,4BAGQ,SAA5B1W,EAAkB4G,YAAvB,EAGJ,CAGA,cAAAohB,CAAehoB,EAAsBsF,GACjC7L,KAAK+qB,eAAexkB,EAAKb,SAAUmG,EACvC,CAGA,cAAAmU,CAAenU,EAA+BnG,GAE1Csa,EAAenU,EAAQnG,GACvB,IAAI,SAACujB,EAAQ,eAAE4B,EAAc,UAAER,EAAS,aAAE4B,EAAY,kBAAE3B,EAAiB,SAAE7nB,GAAYzC,KAAK+oB,gBAE5F,IAAiB,IAAbE,GAAsBqB,EAAmB,CACzC,IAAIkE,GAqrBOjpB,EArrBqBslB,GAurB9B4D,YAAclpB,EAAGmpB,aAAenpB,EAAGopB,aAAeppB,EAAGqpB,aAtrBnDJ,IACAhmB,QAAQqmB,IAAI5C,EAAcvmB,EAAU8oB,GA2rBpD,SAAwB1rB,EAAsB+I,GACtCsU,MAAMC,QAAQtd,GACdA,EAAOoG,SAAS3C,IACRA,aAAgBuoB,QAChBvoB,EAAKwoB,SAEDljB,GACAA,EAAOmjB,YAAYzoB,E,IAK3BzD,aAAkBgsB,QAClBhsB,EAAOisB,SAEHjsB,GACA+I,EAAOmjB,YAAYlsB,EAInC,CA7sBgBmsB,CAAevpB,EAAUmG,GAEzBpJ,EAASysB,OAAO,EAAGjD,GAEnB5B,GAAa,EAEbC,GAAoB,EAEpBtqB,KAAK+oB,gBAAkB,OAAH,wBAAO/oB,KAAK+oB,iBAAe,CAAEsB,YAAWC,oBAAmB7nB,aAE/EzC,KAAKuqB,gB,CAuqBrB,IAAuBhlB,CApqBnB,CAEA,eAAA6nB,CAAgB7mB,EAAsBkZ,EAAsCtZ,GACxE,IAAI0F,EAAS2T,EAAcC,EAAStZ,GAEpC,OADAnG,KAAKuuB,eAAehoB,EAAMsF,GACnBA,CACX,CAEA,iBAAA6hB,CAAkBnnB,EAAsBwS,EAAY0G,EAAiBtZ,GACjE,IAAI0F,EAAS6T,EAAgB3G,EAAI0G,EAAgBtZ,GAEjD,OADAnG,KAAKuuB,eAAehoB,EAAMsF,GACnBA,CACX,CAEA,eAAAsgB,CAAgB5lB,EAAoBsF,G,YAChC,IAAIsjB,EAAa3P,EAAc,KAE/B,MAAM3V,EAAQ7J,KAAKglB,UAAUze,EAAKkF,WACzB,QAAT,EAAAlF,EAAK6T,YAAI,QAAT7T,EAAK6T,KAA8B,QAArB,EAAAvQ,aAAK,EAALA,EAAO3B,sBAAc,eAAEkS,MAErCpa,KAAKovB,YAAY7oB,EAAM4oB,GACvBnvB,KAAK0qB,kBAAkBnkB,EAAKF,SAAU8oB,GACtCnvB,KAAKqvB,uBAAuBF,EAAWtlB,MAAOtD,GAG1CsF,GACA7L,KAAKggB,eAAenU,EAAQsjB,GAGhCnvB,KAAKuuB,eAAehoB,EAAM4oB,GAG1B,MAAM5U,EAA0B,QAAd,EAAAhU,EAAKgU,iBAAS,QAAyB,QAArB,EAAA1Q,aAAK,EAALA,EAAO3B,sBAAc,eAAEqS,UAM3D,OAJIA,GACA4U,EAAWG,UAAUC,IAAIvvB,KAAKklB,eAAe3K,EAAU3X,GAAI2X,EAAUxQ,QAGlEolB,CACX,CAEA,mBAAAK,CAAoB3lB,EAAY1D,GAC5BnG,KAAKqvB,uBAAuBxlB,EAAO1D,EACvC,CAEA,sBAAAkpB,CAAuBxlB,EAAY1D,GAClB,MAATA,IAGAA,EAAMjD,QACN2G,EAAa,MAAI1D,EAAMjD,OAGvBiD,EAAM0T,WACNhQ,EAAM,aAAe1D,EAAM0T,UAEnC,CAEA,eAAA4S,CAAgBlmB,EAAoBsF,GAChC,IAAI4jB,EAAUjQ,EAAc,KAU5B,GAPI3T,GACA7L,KAAKggB,eAAenU,EAAQ4jB,GAGhCzvB,KAAKuuB,eAAehoB,EAAMkpB,GAC1BzvB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUopB,GAElClpB,EAAK0F,KACLwjB,EAAQxjB,KAAO1F,EAAK0F,UACjB,GAAI1F,EAAK3D,GAAI,CAChB,MAAM8sB,EAAM1vB,KAAK6f,SAASqD,aAAanhB,KAClCwI,MAAKolB,GAAMA,EAAG/sB,IAAM2D,EAAK3D,IAAwB,aAAlB+sB,EAAG5sB,aACvC0sB,EAAQxjB,KAAOyjB,aAAG,EAAHA,EAAK5sB,M,CAGxB,OAAO2sB,CACX,CAEA,aAAA/C,CAAcnmB,EAAsBsF,GAChC,IAAI+jB,EAAWpQ,EAAc,OAc7B,OAZAoQ,EAAS/lB,MAAMgmB,QAAU,eACzBD,EAAS/lB,MAAMqE,SAAW,WAC1B0hB,EAAS/lB,MAAMimB,WAAa,MAE5B9vB,KAAKuuB,eAAehoB,EAAMqpB,GAC1B5vB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUupB,GAGlC/jB,GACA7L,KAAKggB,eAAenU,EAAQ+jB,GAGzBA,CACX,CAGA,WAAAjD,CAAYpmB,EAAiBsF,GACzB,IAAIkkB,EAASvQ,EAAc,OAiB3B,OAfAxf,KAAK0qB,kBAAkBnkB,EAAKF,SAAU0pB,GAElC/vB,KAAK6f,UACL7f,KAAK6f,SACAmQ,kBAAkBzpB,EAAKqD,IAAK5J,KAAK8gB,aACjCyE,MAAK3b,IACFmmB,EAAOnmB,IAAMA,CAAG,IAKxBiC,GACA7L,KAAKggB,eAAenU,EAAQkkB,GAGzBA,CACX,CAEA,UAAAnD,CAAWrmB,EAAesF,GACtB,IAAIokB,EAAQpQ,SAASqQ,eAAe3pB,EAAKgG,MAKzC,OAHIV,GACA7L,KAAKggB,eAAenU,EAAQokB,GAEzBA,CACX,CAEA,iBAAApD,CAAkBtmB,EAAesF,GAC7B,IAAIskB,EAUJ,OATInwB,KAAKL,QAAQ0d,gBACb8S,EAAetQ,SAASqQ,eAAe3pB,EAAKgG,MAExCV,GACA7L,KAAKggB,eAAenU,EAAQskB,IAGhCA,EAAe,KAEZA,CACX,CAEA,WAAAnD,CAAYzmB,EAAgBsF,GACxB,GAAkB,gBAAdtF,EAAK4G,MAAyB,CAC9B,IAAIijB,EAAM5Q,EAAc,MAKxB,OAHI3T,GACA7L,KAAKggB,eAAenU,EAAQukB,GAEzBA,C,CAGX,OAAO,IACX,CAEA,cAAAhC,CAAe7nB,GACX,OAAIvG,KAAKL,QAAQ4d,cACNvd,KAAKotB,gBAAgB7mB,EAAM,OAG/BvG,KAAKotB,gBAAgB7mB,EAAM,OACtC,CAEA,aAAA8nB,CAAc9nB,GACV,OAAIvG,KAAKL,QAAQ4d,cACNvd,KAAKotB,gBAAgB7mB,EAAM,OAG/B,IACX,CAEA,YAAAwmB,CAAaxmB,EAAiBsF,GAC1B,IAAIwkB,EAAQ7Q,EAAc,QAS1B,OARA6Q,EAAMxmB,MAAMymB,WAAa/pB,EAAK8G,KAC9BgjB,EAAMnQ,UAAY,MAAM3Z,EAAK+G,QAGzBzB,GACA7L,KAAKggB,eAAenU,EAAQwkB,GAGzBA,CACX,CAGA,kBAAApD,CAAmB1mB,EAAsBkZ,GACrC,IAAI8Q,EAAwB/Q,EAAcC,GAM1C,OAJAzf,KAAKuuB,eAAehoB,EAAMgqB,GAE1BvwB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUkqB,GAE/BA,CACX,CAEA,uBAAAlD,CAAwB9mB,GACpB,IAAIiqB,EAAOhR,EAAc,OAGzB,OAFAxf,KAAKkqB,mBAAmBtkB,KAAKW,EAAK3D,IAClC4tB,EAAKpkB,YAAc,GAAGpM,KAAKkqB,mBAAmB9V,SACvCoc,CACX,CAEA,sBAAAlD,CAAuB/mB,GACnB,IAAIiqB,EAAOhR,EAAc,OAGzB,OAFAxf,KAAKshB,kBAAkB1b,KAAKW,EAAK3D,IACjC4tB,EAAKpkB,YAAc,GAAGpM,KAAKshB,kBAAkBlN,SACtCoc,CACX,CAGA,SAAA1D,CAAUvmB,EAAsBsF,G,MAC5B,IAAI4kB,EAAUjR,EAAc,QAI5B,GAFAiR,EAAQvQ,UAAY,SAEhBlgB,KAAKL,QAAQod,aAAc,CAC3B0T,EAAQ/kB,UAAY1L,KAAK0wB,eACzB,IAAIC,EAAyD,QAAjD,EAkfxB,SAA8CpqB,EAAsBzF,GAChE,IAAI+K,EAAStF,EAAKsF,OAElB,KAAiB,MAAVA,GAAkBA,EAAO/K,MAAQA,GACpC+K,EAASA,EAAOA,OAEpB,OAAUA,CACd,CAzfwB+kB,CAAyBrqB,EAAM,EAAAhD,QAAQ0H,kBAAU,eAAEmP,KAC/Dpa,KAAKwhB,YAAY5b,KAAK,CAAC+qB,QAAOxe,KAAMse,G,CAQxC,OAJI5kB,GACA7L,KAAKggB,eAAenU,EAAQ4kB,GAGzBA,CACX,CAEA,mBAAArE,CAAoB7lB,EAAwBsF,GACxC,IAAIwkB,EAAQ7Q,EAAc,QAQ1B,OAPA6Q,EAAMztB,GAAK2D,EAAKa,KAGZyE,GACA7L,KAAKggB,eAAenU,EAAQwkB,GAGzBA,CACX,CAEA,SAAAhE,CAAU9lB,EAAcsF,GACpB,GAAItF,EAAKsG,SACL,OAAO,KAGX,MAAMwjB,EAAQ7Q,EAAc,QAc5B,GAZIjZ,EAAK3D,KACLytB,EAAMztB,GAAK2D,EAAK3D,IAGpB5C,KAAKovB,YAAY7oB,EAAM8pB,GACvBrwB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUgqB,GAGlCxkB,GACA7L,KAAKggB,eAAenU,EAAQwkB,GAG5B9pB,EAAK+H,cAAe,CACpB,MAAMqT,EAAUnC,EAAcjZ,EAAK+H,eACnCtO,KAAKuuB,eAAehoB,EAAMob,GAC1B3hB,KAAKggB,eAAeqQ,EAAO1O,E,MAE3B3hB,KAAKuuB,eAAehoB,EAAM8pB,GAE9B,OAAOA,CACX,CAEA,WAAA/D,CAAY/lB,EAAgBsF,GACxB,IAAIglB,EAASrR,EAAc,SAuB3B,OArBAxf,KAAKkhB,mBAAmBtb,KAAK5F,KAAKmhB,qBAClCnhB,KAAKghB,oBAAoBpb,KAAK5F,KAAKihB,sBACnCjhB,KAAKihB,qBAAuB,CAAC,EAC7BjhB,KAAKmhB,oBAAsB,CAAC7N,IAAK,EAAGxB,IAAK,GAEzC9R,KAAKovB,YAAY7oB,EAAMsqB,GACvB7wB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUwqB,GAElChlB,GACA7L,KAAKggB,eAAenU,EAAQglB,GAI5BtqB,EAAKqK,SACU5Q,KAAK8wB,mBAAmBvqB,EAAKqK,QAASigB,GAGzD7wB,KAAKuuB,eAAehoB,EAAMsqB,GAE1B7wB,KAAKihB,qBAAuBjhB,KAAKghB,oBAAoB+P,MACrD/wB,KAAKmhB,oBAAsBnhB,KAAKkhB,mBAAmB6P,MAC5CF,CACX,CAEA,kBAAAC,CAAmBlgB,EAA2B/E,GAC1C,IAAImlB,EAAYxR,EAAc,YAG1B3T,GACA7L,KAAKggB,eAAenU,EAAQmlB,GAGhC,IAAK,IAAI1d,KAAO1C,EAAS,CACrB,IAAIqgB,EAAOzR,EAAc,OAErBlM,EAAIvC,QACJkgB,EAAKpnB,MAAMkH,MAAQuC,EAAIvC,OAE3B/Q,KAAKggB,eAAegR,EAAWC,E,CAGnC,OAAOD,CACX,CAEA,cAAAzE,CAAehmB,EAAsBsF,GACjC,IAAIqlB,EAAY1R,EAAc,MAe9B,OAbAxf,KAAKmhB,oBAAoB7N,IAAM,EAG3BzH,GACA7L,KAAKggB,eAAenU,EAAQqlB,GAGhClxB,KAAKovB,YAAY7oB,EAAM2qB,GACvBlxB,KAAKuuB,eAAehoB,EAAM2qB,GAC1BlxB,KAAK0qB,kBAAkBnkB,EAAKF,SAAU6qB,GAEtClxB,KAAKmhB,oBAAoBrP,MAElBof,CACX,CAEA,eAAA1E,CAAgBjmB,EAAoBsF,GAChC,IAAIslB,EAAa3R,EAAc,MAE/B,MAAMT,EAAM/e,KAAKmhB,oBAAoB7N,IA4BrC,OA1BI/M,EAAK6L,cACqB,WAAtB7L,EAAK6L,eACLpS,KAAKihB,qBAAqBlC,GAAOoS,EACjCA,EAAWC,QAAU,GACdpxB,KAAKihB,qBAAqBlC,KACjC/e,KAAKihB,qBAAqBlC,GAAKqS,SAAW,EAC1CD,EAAWtnB,MAAMgmB,QAAU,QAG/B7vB,KAAKihB,qBAAqBlC,GAAO,KAIjClT,GACA7L,KAAKggB,eAAenU,EAAQslB,GAGhCnxB,KAAKovB,YAAY7oB,EAAM4qB,GACvBnxB,KAAKuuB,eAAehoB,EAAM4qB,GAC1BnxB,KAAK0qB,kBAAkBnkB,EAAKF,SAAU8qB,GAElC5qB,EAAK4L,OACLgf,EAAWE,QAAU9qB,EAAK4L,MAE9BnS,KAAKmhB,oBAAoB7N,KAAO6d,EAAWE,QAEpCF,CACX,CAEA,gBAAA5D,CAAiBhnB,GACb,IAAI+qB,EAAoB9R,EAAc,OAEtC,OADAxf,KAAKuuB,eAAehoB,EAAM+qB,GACnBA,CACX,CAEA,gBAAA7D,CAAiBlnB,G,QACb,IAAIgrB,EAAO5R,EAAiB,OAE5B4R,EAAKC,aAAa,QAASjrB,EAAKkrB,cAEhC,MAAMC,EAAY1xB,KAAK2xB,sBAAsBprB,GAgB7C,OAdkB,QAAd,EAAAA,EAAKqrB,iBAAS,eAAEhvB,MACH,QAAb,EAAA5C,KAAK6f,gBAAQ,SAAEmQ,kBAAkBzpB,EAAKqrB,UAAUhvB,GAAI5C,KAAK8gB,aACpDyE,MAAKpc,GAAKuoB,EAAUF,aAAa,OAAQroB,MAGlD6W,EAAeuR,EAAMG,GAErBG,uBAAsB,KAClB,MAAMC,EAAMP,EAAK5vB,kBAA0BowB,UAE3CR,EAAKC,aAAa,QAAS,GAAGQ,KAAKC,KAAKH,EAAG3oB,EAAI2oB,EAAG/gB,UAClDwgB,EAAKC,aAAa,SAAU,GAAGQ,KAAKC,KAAKH,EAAGI,EAAIJ,EAAG/V,UAAU,IAG1DwV,CACX,CAEA,qBAAAI,CAAsBprB,GAClB,MAAM4rB,EAAcxS,EAAiBpZ,EAAKkZ,SAE1CK,OAAO8D,QAAQrd,EAAKiiB,OAAOtf,SAAQ,EAAEya,EAAGjO,KAAOyc,EAAYX,aAAa7N,EAAGjO,KAE3E,IAAK,IAAIjH,KAASlI,EAAKb,SACnB,GAAI+I,EAAM3N,MAAQ,EAAAyC,QAAQiqB,WAAY,CAClC,IAAI4E,EAASpyB,KAAK2xB,sBAAsBljB,GACxCuR,EAAemS,EAAaC,E,KACzB,CACH,IAAIA,EAASpyB,KAAKgsB,cAAcvd,GAChCuR,EAAemS,EAAaC,E,CAIpC,OAAOD,CACX,CAEA,gBAAAtE,CAAiBtnB,G,MACb,MAAM8rB,EAAO9rB,EAAKb,SAAS6E,MAAKhF,GAAMA,EAAGzE,MAAQ,EAAAyC,QAAQU,UACzD,IAAI2b,EACJ,GAAc,QAAV,EAAArZ,EAAKJ,aAAK,eAAEgI,WAGZ,OAFAyR,EAAUF,EAAgB3G,EAAW,QAAS,MAC9C/Y,KAAK+qB,eAAe,CAACsH,GAAOzS,GACrBA,EAGX,MAAM0S,EAAS/rB,EAAKb,SAAS6E,MAAKhF,GAAMA,EAAGzE,MAAQ,EAAAyC,QAAQS,YAG3D,OAFA4b,EAAUF,EAAgB3G,EAAW,QAAS,MAC9C/Y,KAAK+qB,eAAe,CAACsH,EAAMC,GAAS1S,GAC7BA,CACX,CAEA,kBAAAkO,CAAmBvnB,G,QACf,IAAIgsB,EAAQ7S,EAAgB3G,EAAW,OAAQ,MAU/C,OAPAiH,EAAeuS,EADF7S,EAAgB3G,EAAW,KAAM,KAAM,CAAqB,QAApB,EAAAxS,EAAKJ,MAAMiI,iBAAS,QAAI,OAG7EpO,KAAK+qB,eAAexkB,EAAKb,SAAU6sB,GAGnCvS,EAAeuS,EADJ7S,EAAgB3G,EAAW,KAAM,KAAM,CAAmB,QAAlB,EAAAxS,EAAKJ,MAAMkI,eAAO,QAAI,OAGlEkkB,CACX,CAEA,aAAAvE,CAAcznB,G,QACV,MAAMb,EAAW,GACX8sB,GAAU,IAAA/P,OAAMlc,EAAKb,UAAUyD,GAAKA,EAAErI,OAEtC2xB,EAAMD,EAAQ,EAAAjvB,QAAQc,kBACtBquB,EAAMF,EAAQ,EAAAjvB,QAAQe,gBAEtBquB,EAAUF,EAAM/S,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAcyG,KAAS,KAC3FI,EAAUH,EAAMhT,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAc0G,KAAS,KAE3FI,EAAWpT,EAAgB3G,EAAW,KAAM,KAAM,CAAiB,QAAhB,EAAU,QAAV,EAAAxS,EAAKJ,aAAK,eAAEmH,YAAI,QAAI,MAEzEqlB,GAAWE,EACXntB,EAASE,KAAK8Z,EAAgB3G,EAAW,aAAc,KAAM,CAAC+Z,EAAUD,EAASF,KAC1EA,EACPjtB,EAASE,KAAK8Z,EAAgB3G,EAAW,QAAS,KAAM,CAAC+Z,EAAUH,KAC5DE,EACPntB,EAASE,KAAK8Z,EAAgB3G,EAAW,SAAU,KAAM,CAAC+Z,EAAUD,KAEpEntB,EAASE,KAAKktB,GAGlB,IAAIP,EAAQ7S,EAAgB3G,EAAW,OAAQ,MAM/C,OAJAiH,EAAeuS,EAAO7sB,GAEtB1F,KAAK+qB,eAAeyH,EAAQ,EAAAjvB,QAAQU,SAASyB,SAAU6sB,GAEhDA,CACX,CAEA,oBAAAtE,CAAqB1nB,GACjB,MAAMb,EAAW,GACX8sB,GAAU,IAAA/P,OAAMlc,EAAKb,UAAUyD,GAAKA,EAAErI,OAEtC2xB,EAAMD,EAAQ,EAAAjvB,QAAQc,kBACtBquB,EAAMF,EAAQ,EAAAjvB,QAAQe,gBACtBquB,EAAUF,EAAM/S,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAcyG,KAAS,KAC3FI,EAAUH,EAAMhT,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAc0G,KAAS,KAC3FK,EAAWrT,EAAgB3G,EAAW,KAAM,MAElDrT,EAASE,KAAK8Z,EAAgB3G,EAAW,UAAW,KAAM,CAACga,EAAUF,EAASF,KAE9E,IAAIJ,EAAQ7S,EAAgB3G,EAAW,OAAQ,MAM/C,OAJAiH,EAAeuS,EAAO7sB,GAEtB1F,KAAK+qB,eAAeyH,EAAQ,EAAAjvB,QAAQU,SAASyB,SAAU6sB,GAEhDA,CACX,CAEA,kBAAA3E,CAAmBrnB,GACf,MAAMkZ,EAA+C,QAArClZ,EAAKJ,MAAM8H,sBAAkC,QAAU,SACjE+kB,EAAahzB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW0G,GAO3D,OALIlZ,EAAKJ,MAAMmH,MAEX0S,EAAegT,EADLtT,EAAgB3G,EAAW,KAAM,KAAM,CAACxS,EAAKJ,MAAMmH,QAI1D0lB,CACX,CAEA,YAAA9E,CAAa3nB,GACT,MAAMgsB,EAAQvyB,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAEtD,OAAQxS,EAAKJ,MAAM+H,UACf,IAAK,MACDqkB,EAAM1oB,MAAMopB,eAAiB,WAC7B,MACJ,IAAK,SACDV,EAAM1oB,MAAMopB,eAAiB,YAIrC,OAAOV,CACX,CAEA,YAAAxE,CAAaxnB,GACT,MAAM2sB,EAAMxT,EAAgB3G,EAAW,MAMvC,OAJA/Y,KAAKovB,YAAY7oB,EAAM2sB,GACvBlzB,KAAK0qB,kBAAkBnkB,EAAKF,SAAU6sB,GACtClzB,KAAKuuB,eAAehoB,EAAM2sB,GAEnBA,CACX,CAEA,aAAA/E,CAAc5nB,GACV,MAAM4sB,EAAUzT,EAAgB3G,EAAW,UAE3C/Y,KAAKovB,YAAY7oB,EAAM4sB,GAEvBnzB,KAAK0qB,kBAAkBnkB,EAAKF,SAAU8sB,GAEtC,IAAK,IAAI1kB,KAASlI,EAAKb,SAAU,CAE7B,IAAI0sB,EAASpyB,KAAKgsB,cAAcvd,GAE5B2kB,EAAO1T,EAAgB3G,EAAW,MAAO,KAAM,CAACqZ,IAIpDpS,EAAemT,EAFJzT,EAAgB3G,EAAW,MAAO,KAAM,CAACqa,I,CAKxD,OAAOD,CACX,CAGA,iBAAAzI,CAAkB7gB,EAA+BkL,GAC7C,IAAK,IAAI4O,KAAK9Z,EACN8Z,EAAEzjB,WAAW,KACb6U,EAAOyc,aAAa7N,EAAEiG,MAAM,GAAI/f,EAAM8Z,IAEtC5O,EAAOlL,MAAM8Z,GAAK9Z,EAAM8Z,EAGpC,CAGA,WAAAyL,CAAY3uB,EAAuBsU,GAC3BtU,EAAMiL,YACNqJ,EAAOrJ,UAAYjL,EAAMiL,WAGzBjL,EAAMgL,WACNsJ,EAAOua,UAAUC,IAAIvvB,KAAK+jB,iBAAiBtjB,EAAMgL,WAEzD,CAGA,SAAAuZ,CAAUvZ,G,MACN,OAAOA,IAA0B,QAAb,EAAAzL,KAAK6gB,gBAAQ,eAAGpV,GACxC,CAEA,YAAAilB,GACI,MAAO,GAAG1wB,KAAK0L,oBACnB,CAGA,eAAAyX,GACSnjB,KAAKL,QAAQod,eAIlBsW,aAAarzB,KAAKyhB,aAElBzhB,KAAKyhB,YAAc6R,YAAW,KAC1B,MAAMC,GAAe,IAAAC,uBAErB,IAAK,IAAIC,KAAOzzB,KAAKwhB,aACjB,IAAAkS,eAAcD,EAAIthB,KAAMshB,EAAI9C,MAAO3wB,KAAK6iB,eAAgB0Q,E,GAE7D,KACP,E,uFC3wDJ,eAkBA,SACA,SAYMxa,EAEG,qCAq/CT,SAASyG,EAAqDC,EAAYtZ,EAA8DT,GACvI,OAAOga,OAAgBxV,EAAWuV,EAAStZ,EAAOT,EACnD,CAEA,SAASia,EAAuDF,EAAYtZ,EAA6DT,GACxI,OAAOga,EA3/CF,6BA2/C0BD,EAAStZ,EAAOT,EAChD,CAEA,SAASga,EAAgB3G,EAAY0G,EAAiBtZ,EAAmCT,GACxF,IAAIJ,EAASyT,EAAK8G,SAASH,gBAAgB3G,EAAI0G,GAAWI,SAASL,cAAcC,GAGjF,OAFAK,OAAOC,OAAOza,EAAQa,GACtBT,GAAYsa,EAAe1a,EAAQI,GAC5BJ,CACR,CAEA,SAAS2a,EAAkB1Z,GAC1BA,EAAK2Z,UAAY,EAClB,CAGA,SAASF,EAAenU,EAA+BnG,GACtDA,EAASwD,SAAQuF,IAChB5C,EAAO0U,aAAY,IAAAD,UAAS7R,GAASoR,SAASqQ,eAAezhB,GAASA,EAAM,GAE9E,CAGA,SAAS+R,EAAmBC,GAC3B,OAAOjB,EAAc,QAAS,CAACU,UAAWO,GAC3C,CAGA,SAASC,EAAcna,EAAmBoa,GACzCpa,EAAKga,YAAYV,SAASe,cAAcD,GACzC,CA3gDA,mCAEC,KAAAjV,UAAoB,OAIpB,KAAAmV,SAAsC,CAAC,EACvC,KAAAC,YAAoB,KAEpB,KAAAE,oBAA+C,GAC/C,KAAAC,qBAA8C,KAC9C,KAAAC,mBAAgC,GAChC,KAAAC,oBAA+B,KAE/B,KAAAC,YAA2C,CAAC,EAC5C,KAAAC,WAA0C,CAAC,EAE3C,KAAAC,kBAA8B,GAC9B,KAAAC,qBAA8B,GAI9B,KAAAC,YAAqB,GACrB,KAAAC,YAAmB,EAEnB,KAAAjC,cAAgBA,CA48CjB,CAj8CC,MAAAtB,CAAO2B,EAAwBhC,EAA4BC,EAA8B,KAAMne,G,MAC9FK,KAAK6f,SAAWA,EAChB7f,KAAKL,QAAUA,EAEfK,KAAK0L,UAAY/L,EAAQ+L,UAEzB1L,KAAK0hB,aAAe/hB,EAAQqd,UAAY,IAAIhd,KAAK0L,oBAAsB,QAEvE1L,KAAK6gB,SAAW,KAKhBZ,EAHAnC,EAAiBA,GAAkBD,GAKnCoC,EAAkBpC,GAGlB6C,EAAc5C,EAAgB,oCAE9BA,EAAeyC,YAAYvgB,KAAK4hB,sBAG5B/B,EAASgC,YACZnB,EAAc5C,EAAgB,gCAC9B9d,KAAK8hB,YAAYjC,EAASgC,UAAW/D,IAGX,MAAvB+B,EAASkC,aACZ/hB,KAAK6gB,SAAW7gB,KAAKgiB,cAAcnC,EAASkC,WAAWza,QAEvDoZ,EAAc5C,EAAgB,0BAC9BA,EAAeyC,YAAYvgB,KAAKiiB,aAAapC,EAASkC,WAAWza,UAG9DuY,EAASqC,gBACZliB,KAAKmiB,kBAAkBtC,EAASqC,cAAcE,eAE9C1B,EAAc5C,EAAgB,oCAC9BA,EAAeyC,YAAYvgB,KAAKqiB,gBAAgBxC,EAASqC,cAAcE,cAAetE,MAIlFne,EAAQkd,aAAegD,EAASyC,eACpCtiB,KAAKuiB,gBAAgB1C,EAASyC,cAAexE,GAG1C+B,EAAS2C,gBACZxiB,KAAKohB,aAAc,IAAAqB,OAAM5C,EAAS2C,cAAcE,OAAOvZ,GAAKA,EAAEvG,MAG3Did,EAAS8C,eACZ3iB,KAAKqhB,YAAa,IAAAoB,OAAM5C,EAAS8C,aAAaD,OAAOvZ,GAAKA,EAAEvG,MAGzDid,EAAS+C,eACZ5iB,KAAK6iB,eAA+C,QAA9B,EAAAhD,EAAS+C,aAAaE,gBAAQ,eAAEC,gBAGvD,IAAI4Q,EAAkB3zB,KAAKijB,eAAepD,EAASqD,aAAahJ,MAC5Dla,KAAKL,QAAQqd,UAChBa,EAAc0C,YAAYvgB,KAAKgjB,cAAc2Q,IAE7C3T,EAAenC,EAAe8V,GAI/B3zB,KAAKmjB,iBACN,CAGA,WAAArB,CAAYD,EAAsB/D,G,QACjC,MAAMsF,EAAY,CAAC,EACbC,EAA4B,QAAf,EAAAxB,EAAUyB,aAAK,eAAED,WAEhCA,IACCA,EAAWE,YACdH,EAAU,0BAA4BC,EAAWE,UAAUC,eAGxDH,EAAWI,YACdL,EAAU,0BAA4BC,EAAWI,UAAUD,gBAI7D,MAAME,EAA6B,QAAf,EAAA7B,EAAUyB,aAAK,eAAEI,YAErC,GAAIA,EACH,IAAK,IAAKC,EAAGjO,KAAMoK,OAAO8D,QAAQF,EAAYG,QAC7CT,EAAU,UAAUO,WAAa,IAAIjO,IAIvC,MAAM+K,EAAUzgB,KAAK8jB,cAAc,IAAI9jB,KAAK0L,YAAa0X,GACzDtF,EAAeyC,YAAYC,EAAmBC,GAC/C,CAGA,eAAA8B,CAAgB4F,EAA0BrK,GACzC,IAAK,IAAIzc,KAAK8mB,EAAU5U,MACvB,IAAK,IAAI6U,KAAO/mB,EAAEsd,cACjB3e,KAAK6f,SAASwI,SAASD,EAAIxlB,GAAIwlB,EAAIrJ,KAAKwG,MAAK+C,IAC5C,MAAMC,EAAY,CACjB,cAAelnB,EAAE+F,KACjB,IAAO,OAAOkhB,MAGC,QAAZF,EAAItnB,MAA8B,cAAZsnB,EAAItnB,OAC7BynB,EAAU,eAAiB,QAGZ,UAAZH,EAAItnB,MAAgC,cAAZsnB,EAAItnB,OAC/BynB,EAAU,cAAgB,UAG3B7H,EAAc5C,EAAgB,UAAUzc,EAAE+F,aAC1C,MAAMqZ,EAAUzgB,KAAK8jB,cAAc,aAAcyE,GACjDzK,EAAeyC,YAAYC,EAAmBC,IAC9CzgB,KAAKmjB,iBAAiB,GAI1B,CAGA,gBAAAY,CAAiBrY,GAChB,OAAOA,EAAY,GAAG1L,KAAK0L,cAAa,IAAAsY,iBAAgBtY,KAAe1L,KAAK0L,SAC7E,CAGA,aAAAsW,CAAc1a,GAEb,MAAM2c,GAAY,IAAAxB,OAAMnb,EAAO6M,QAAOhL,GAAa,MAARA,EAAEvG,MAAauG,GAAKA,EAAEvG,KAEjE,IAAK,MAAMiH,KAASvC,EAAO6M,QAAOhL,GAAKA,EAAE9B,UAAU,CAClD,IAAI6c,EAAYD,EAAUpa,EAAMxC,SAEhC,GAAI6c,EAAW,CAEdra,EAAM3B,gBAAiB,IAAAic,WAAUta,EAAM3B,eAAgBgc,EAAUhc,gBACjE2B,EAAMzB,UAAW,IAAA+b,WAAUta,EAAMzB,SAAU8b,EAAU9b,UAErD,IAAK,MAAMgc,KAAcF,EAAU5c,OAAQ,CAC1C,MAAM+c,EAAcxa,EAAMvC,OAAOiD,MAAKpB,GAAKA,EAAErG,QAAUshB,EAAWthB,SAE9DuhB,EACHrkB,KAAKskB,oBAAoBF,EAAW3c,OAAQ4c,EAAY5c,QAExDoC,EAAMvC,OAAO1B,KAAK,OAAD,wBAAKwe,GAAU,CAAE3c,OAAQ,OAAF,UAAM2c,EAAW3c,U,OAGjDzH,KAAKL,QAAQuF,OACvBsD,QAAQC,KAAK,yBAAyBoB,EAAMxC,U,CAI9C,IAAK,IAAIwC,KAASvC,EACjBuC,EAAM0a,QAAUvkB,KAAK+jB,iBAAiBla,EAAMjH,IAG7C,OAAOqhB,CACR,CAEA,iBAAA9B,CAAkB2C,G,MACjB,IAAK,IAAIC,KAAOD,EAAW3Q,QAAOlN,GAAKA,EAAEgD,aAAa,CACrD,MAAMJ,EAAQ7J,KAAKglB,UAAUD,EAAI9a,aAER,QAArB,EAAAJ,aAAK,EAALA,EAAO3B,sBAAc,eAAEqS,aAC1B1Q,EAAM3B,eAAeqS,UAAUxQ,MAAQgb,EAAIhb,M,CAG9C,CAGA,cAAA4e,CAAe5iB,GACd,GAAIA,EAAQL,SACX,IAAK,IAAI/C,KAAKoD,EAAQL,SACrB/C,EAAEkJ,OAAS9F,EAEPpD,EAAE7B,MAAQ,EAAAyC,QAAQmN,MAErB1Q,KAAK4oB,aAAajmB,GAGlB3C,KAAK2oB,eAAehmB,EAIxB,CAGA,YAAAimB,CAAa5X,GACZ,IAAK,IAAI6X,KAAK7X,EAAMtL,SACnB,IAAK,IAAI6B,KAAKshB,EAAEnjB,SACf6B,EAAElB,SAAWrG,KAAKskB,oBAAoBtT,EAAMC,UAAW1J,EAAElB,SAAU,CAClE,cAAe,eAAgB,aAAc,gBAC7C,eAAgB,gBAAiB,cAAe,mBAGjDrG,KAAK2oB,eAAephB,EAGvB,CAGA,mBAAA+c,CAAoB7jB,EAA+BsU,EAAgCyT,EAAkB,MACpG,IAAK/nB,EACJ,OAAOsU,EAEM,MAAVA,IACHA,EAAS,CAAC,GAEE,MAATyT,IACHA,EAAQ1I,OAAO2I,oBAAoBhoB,IAGpC,IAAK,IAAIse,KAAOyJ,EACX/nB,EAAMioB,eAAe3J,KAAShK,EAAO2T,eAAe3J,KACvDhK,EAAOgK,GAAOte,EAAMse,IAGtB,OAAOhK,CACR,CAGA,aAAA0V,CAAc/e,EAAmBvF,GAChC,IAAII,EAAOvG,KAAKwf,cAAc,UAAW,CAAC9T,cA6B1C,OA3BIvF,IACCA,EAAM8V,cACT1V,EAAKsD,MAAMmhB,YAAc7kB,EAAM8V,YAAY1H,KAC3ChO,EAAKsD,MAAMohB,aAAe9kB,EAAM8V,YAAYzH,MAC5CjO,EAAKsD,MAAMqhB,WAAa/kB,EAAM8V,YAAYpD,IAC1CtS,EAAKsD,MAAMshB,cAAgBhlB,EAAM8V,YAAYnD,QAG1C3S,EAAM2V,WACJ9b,KAAKL,QAAQsF,cACjBsB,EAAKsD,MAAMkH,MAAQ5K,EAAM2V,SAAS/K,OAE9B/Q,KAAKL,QAAQid,eACjBrW,EAAKsD,MAAMihB,UAAY3kB,EAAM2V,SAASC,SAIpC5V,EAAMyK,SAAWzK,EAAMyK,QAAQwK,kBAClC7U,EAAKsD,MAAMuhB,YAAc,GAAGjlB,EAAMyK,QAAQwK,kBAC1C7U,EAAKsD,MAAMwhB,UAAYllB,EAAMyK,QAAQyK,MAEjClV,EAAMyK,QAAQ0K,YACjB/U,EAAKsD,MAAMyhB,WAAa,qBAKpB/kB,CACR,CAGA,cAAA0c,CAAepD,GACd,MAAMva,EAAS,GAIf,IAAI4jB,EAFJlpB,KAAK2oB,eAAe9I,GAKnBqJ,EAFGlpB,KAAKL,QAAQmd,WAEL9c,KAAK8oB,eAAejJ,EAASna,UAG7B,CAAC,CAACsjB,UAAWnJ,EAAS1Z,MAAO1D,SAAUod,EAASna,SAAUujB,UAAU,IAEhF,IAAIe,EAAY,KAEhB,IAAK,IAAI9U,EAAI,EAAG+U,EAAIf,EAAS9U,OAAQc,EAAI+U,EAAG/U,IAAK,CAChDlV,KAAKkqB,mBAAqB,GAE1B,MAAMtO,EAAmBsN,EAAShU,GAE5B/O,EAA2ByV,EAAQoN,WAAanJ,EAAS1Z,MAE/D,IAAIkkB,EAAY/kB,EAAO8O,OAEnB+V,EAAiBH,GAAa7jB,EAE9BikB,EAAgBlV,IAAO+U,EAAI,EAE3BO,EAAgCxqB,KAAKuqB,cAAc3O,EAASzV,EAAO0Z,EAASxZ,SAAUgkB,EAAWF,EAAgBC,GAErH9kB,EAAOM,QAAQ4kB,GACfR,EAAY7jB,C,CAGb,OAAOb,CACR,CAGA,aAAAilB,CAAc3O,EAAkBzV,EAA0BytB,EAAsCvJ,EAAmBF,EAAyBC,GAE3I,MAAMI,EAAiBxqB,KAAKyqB,cAAczqB,KAAK0L,UAAWvF,GAE1DnG,KAAK0qB,kBAAkBkJ,EAAcpJ,GAEjCxqB,KAAKL,QAAQud,eAChBld,KAAK2qB,sBAAsBxkB,EAAMkW,WAAYlW,EAAOkkB,EAAWF,EAAgBK,GAGhF,IAAIK,EAAiB7qB,KAAKwf,cAAc,WAwBxC,OAtBIxf,KAAKL,QAAQmd,aAEhB+N,EAAehhB,MAAMihB,UAAY3kB,EAAMwW,YAAYZ,QAIpD/b,KAAK+qB,eAAenP,EAAQnZ,SAAUooB,GAEtCL,EAAejK,YAAYsK,GAGvB7qB,KAAKL,QAAQyd,iBAChBpd,KAAK4qB,YAAY5qB,KAAKkqB,mBAAoBlqB,KAAKohB,YAAaoJ,GAGzDxqB,KAAKL,QAAQ0d,gBAAkB+M,GAClCpqB,KAAK4qB,YAAY5qB,KAAKshB,kBAAmBthB,KAAKqhB,WAAYmJ,GAGvDxqB,KAAKL,QAAQwd,eAChBnd,KAAK2qB,sBAAsBxkB,EAAMmW,WAAYnW,EAAOkkB,EAAWF,EAAgBK,GAEzE,CAACA,EACT,CAIA,qBAAAG,CAAsBY,EAA+BplB,EAA0BqlB,EAAcC,EAAyB5f,G,oBACrH,IAAK0f,EAAM,OAEX,IAAInD,EACyD,QADlD,EAA6E,QAA9E,EAACjiB,EAAMoW,WAAakP,EAAiBF,EAAKhhB,MAAKpB,GAAe,SAAVA,EAAErI,OAAmB,YAAK,QACnF0qB,EAAO,GAAK,EAAID,EAAKhhB,MAAKpB,GAAe,QAAVA,EAAErI,OAAkB,YAAK,QACzDyqB,EAAKhhB,MAAKpB,GAAe,WAAVA,EAAErI,OAGjB4qB,EAAOtD,GAAOpoB,KAAK6f,SAAS8L,gBAAgBvD,EAAIxlB,GAAI5C,KAAK6f,SAASqD,cAEtE,GAAIwI,EAAM,CAOT,OANA1rB,KAAK8gB,YAAc4K,EACd1rB,KAAKuhB,qBAAqBxS,SAAS2c,EAAK3rB,QAC5CC,KAAK2oB,eAAe+C,EAAKpM,aACzBtf,KAAKuhB,qBAAqB3b,KAAK8lB,EAAK3rB,OAG7B2rB,EAAKpM,YAAYxe,MACxB,KAAK,EAAAyC,QAAQ2b,OACZwM,EAAKpM,YAAYjZ,SAAW,CAC3BkO,KAAuB,QAAjB,EAAApO,EAAM8V,mBAAW,eAAE1H,KACzBxD,MAAwB,QAAjB,EAAA5K,EAAMwW,mBAAW,eAAE5L,MAC1BgL,OAAyB,QAAjB,EAAA5V,EAAM8V,mBAAW,eAAEpD,KAE5B,MACD,KAAK,EAAAtV,QAAQ6b,OACZsM,EAAKpM,YAAYjZ,SAAW,CAC3BkO,KAAuB,QAAjB,EAAApO,EAAM8V,mBAAW,eAAE1H,KACzBxD,MAAwB,QAAjB,EAAA5K,EAAMwW,mBAAW,eAAE5L,MAC1BgL,OAAyB,QAAjB,EAAA5V,EAAM8V,mBAAW,eAAEnD,QAE5B,MACD,QACCtQ,QAAQC,KAAK,gCAAiCijB,EAAKpM,YAAYxe,MAIjEd,KAAK+qB,eAAe,CAACW,EAAKpM,aAAczT,GACxC7L,KAAK8gB,YAAc,I,CAErB,CAGA,kBAAAwN,CAAmB/nB,GAElB,OAAIA,EAAKzF,MAAQ,EAAAyC,QAAQ2J,QAIO,yBAA3B3G,EAAkB4G,OACdnN,KAAKL,QAAQsd,4BAGW,SAA5B1W,EAAkB4G,YAAvB,EAGD,CAGA,cAAA2b,CAAermB,G,MAEd,IAAIsmB,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAW,CAACH,GAEhB,IAAK,IAAIxiB,KAAQ9D,EAAU,CAK1B,GAHAsmB,EAAgBtmB,SAASmD,KAAKW,GAG1BA,EAAKzF,MAAQ,EAAAyC,QAAQ0H,UAAW,CACnC,MAAMke,EAAI5iB,EAEV,IAAIyiB,EAAYG,EAAE7O,aAOlB,MAAM8O,EAA0BppB,KAAKglB,UAAUmE,EAAE1d,YAGN,QAAvC,EAAA2d,aAAuB,EAAvBA,EAAyBlhB,sBAAc,eAAE4S,mBAE5CiO,EAAgBE,UAAW,EAE3BF,EAAgBC,UAAYA,EAE5BD,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAStjB,KAAKmjB,IAIf,IAAIM,GAAe,EAEfC,GAAe,EA0CnB,GAvCIH,EAAEzjB,WAEL2jB,EAAcF,EAAEzjB,SAAS6jB,WAAUV,I,MAoBlC,OAlBAS,EAAwB,QAAV,EAAAT,EAAEnjB,gBAAQ,eAAE6jB,WAAWC,GAEhCA,EAAE1oB,MAAQ,EAAAyC,QAAQ2J,QAIO,yBAAxBsc,EAAerc,MAIZ4b,EAAgBtmB,SAAS2R,OAAS,IAAMpU,KAAKL,QAAQsd,4BAG/B,SAAzBuM,EAAerc,YAApB,KAIDmc,EAAcA,QAAAA,GAAgB,GACP,GAAhBA,CAAiB,MAKtBN,IAA6B,GAAhBK,KAEhBN,EAAgBE,UAAW,EAE3BF,EAAgBC,UAAYA,EAE5BD,EAAkB,CAACC,UAAW,KAAMvmB,SAAU,GAAIwmB,UAAU,GAE5DC,EAAStjB,KAAKmjB,KAIK,GAAhBM,EAAmB,CAEtB,IAAII,EAAWN,EAAEzjB,SAAS2jB,GAEtBJ,EAAWK,EAAcG,EAAS/jB,SAAS0O,OAAS,EAExD,GAAIiV,EAAcF,EAAEzjB,SAAS0O,OAAS,GAAK6U,EAAU,CAEpD,IAAIS,EAAaP,EAAEzjB,SAEfikB,EAAgB,OAAH,wBAAOR,GAAC,CAAEzjB,SAAUgkB,EAAWE,MAAMP,KAMtD,GAJAF,EAAEzjB,SAAWgkB,EAAWE,MAAM,EAAGP,GAEjCN,EAAgBtmB,SAASmD,KAAK+jB,GAE1BV,EAAU,CAEb,IAAIY,EAAkBJ,EAAS/jB,SAE3BokB,EAAS,OAAH,wBAAOL,GAAQ,CAAE/jB,SAAUmkB,EAAgBD,MAAM,EAAGN,KAE9DH,EAAEzjB,SAASE,KAAKkkB,GAEhBL,EAAS/jB,SAAWmkB,EAAgBD,MAAMN,E,IAO1C/iB,EAAKzF,OAAS,EAAAyC,QAAQmN,QACzBqY,EAAgBE,UAAW,E,CAM7B,IAAIc,EAAmB,KAEvB,IAAK,IAAI7U,EAAIgU,EAAS9U,OAAS,EAAGc,GAAK,EAAGA,IACZ,MAAzBgU,EAAShU,GAAG8T,UACfE,EAAShU,GAAG8T,UAAYe,EAExBA,EAAmBb,EAAShU,GAAG8T,UAGjC,OAAOE,CACR,CAGA,aAAAlG,CAActd,GACb,OAAO1F,KAAKwf,cAAc,MAAO,CAAC9T,UAAW,GAAG1L,KAAK0L,qBAAsBhG,EAC5E,CAGA,kBAAAkc,GACC,IAAIra,EAAIvH,KAAK0L,UAgBb,OAAO8U,EAfS,YACZjZ,uIACAA,qBAAqBA,kGACrBA,qDACOA,qIACSA,6GACTA,8DACAA,mEACPA,kDACAA,gBAAgBA,+CAChBA,iDACAA,wEACAA,0DAIL,CAmEA,eAAA8a,CAAgByC,EAA6BhH,GAC5C,IAAI0G,EAAY,GACZS,EAAgB,GAEpB,IAAK,IAAIF,KAAOD,EAAY,CAC3B,IAAIpc,EAAW,KAAK1I,KAAKklB,eAAeH,EAAIniB,GAAImiB,EAAIhb,SAChDob,EAAgB,OAEpB,GAAIJ,EAAIza,OAAQ,CACf,IAAI8a,EAAW,KAAKplB,KAAK0L,aAAaqZ,EAAIza,OAAOV,MAAMyb,cAEvDb,GAAaxkB,KAAK8jB,cAAc,GAAGpb,WAAmB,CACrD,QAAW,MACX,QAAW,eACX,WAAc,OAAO0c,MACnBL,EAAIza,OAAOT,OAEd7J,KAAK6f,SAASyF,mBAAmBP,EAAIza,OAAOV,KAAK2b,MAAK/H,IACrD,IAAIjR,EAAO,GAAGvM,KAAK0hB,kBAAkB0D,UAAiB5H,OACtDM,EAAeyC,YAAYC,EAAmBjU,GAAM,G,MAE/C,GAAIwY,EAAIva,UAAW,CACzB,IAAIgb,EAAUxlB,KAAKylB,iBAAiBV,EAAIniB,GAAImiB,EAAIhb,OAChD,MAAM2b,EAAeF,EAAU,KAAOT,EAAI/a,MAAQ,GAC9C+a,EAAIhb,MAAQ,IACfya,GAAaxkB,KAAK8jB,cAAc,KAAK9jB,KAAKklB,eAAeH,EAAIniB,GAAImiB,EAAIhb,MAAQ,KAAM,CAClF,gBAAiB2b,KAInBT,EAAcrf,KAAK8f,GAEnBlB,GAAaxkB,KAAK8jB,cAAc,GAAGpb,WAAmB,OAAF,QACnD,QAAW1I,KAAK2lB,mBAAmBZ,EAAIva,UAAWua,EAAI1a,KAAM0a,EAAIniB,GAAI5C,KAAK4lB,oBAAoBb,EAAIta,SACjG,oBAAqB+a,GAClBT,EAAI3a,Q,MAGR+a,EAAgBnlB,KAAK4lB,oBAAoBb,EAAIta,QAG9C+Z,GAAaxkB,KAAK8jB,cAAcpb,EAAU,OAAF,QACvC,QAAW,YACX,sBAAuB,SACvB,kBAAmByc,GAChBJ,EAAI5a,Q,CAUT,OANI8a,EAAc7Q,OAAS,IAC1BoQ,GAAaxkB,KAAK8jB,cAAc9jB,KAAK0hB,aAAc,CAClD,gBAAiBuD,EAAc5Y,KAAK,QAI/BmU,EAAmBgE,EAC3B,CAEA,YAAAvC,CAAa3a,G,MACZ,IAAIkd,EAAY,GAChB,MAAMP,EAAYjkB,KAAK6gB,SACjB4D,GAAgB,IAAAhC,OAAMnb,EAAO6M,QAAO7L,GAAKA,EAAEV,aAAYU,GAAKA,EAAExF,SAEpE,IAAK,MAAM+G,KAASvC,EAAQ,CAC3B,IAAIod,EAAY7a,EAAMvC,OAEtB,GAAIuC,EAAM/B,OAAQ,CACjB,IAAI6c,EAAc9a,EAAM/B,QAAUmc,EAAUpa,EAAM/B,QAE9C6c,EACHD,EAAYA,EAAUE,OAAOD,EAAYrd,QACjCtH,KAAKL,QAAQuF,OACrBsD,QAAQC,KAAK,2BAA2BoB,EAAM/B,S,CAGhD,IAAK,MAAM+c,KAAYH,EAAW,CAEjC,IAAIhc,EAAW,GAAe,QAAZ,EAAAmB,EAAM/G,cAAM,QAAI,MAAM+G,EAAM0a,UAE1C1a,EAAM/G,QAAU+hB,EAAS/hB,SAC5B4F,GAAY,IAAImc,EAAS/hB,UAEtB2hB,EAAc5a,EAAM/G,SAAW+G,IAClCnB,EAAW,IAAI1I,KAAK0L,aAAa7B,EAAM/G,WAAa4F,GAErD8b,GAAaxkB,KAAK8jB,cAAcpb,EAAUmc,EAASpd,O,EAIrD,OAAO+Y,EAAmBgE,EAC3B,CAGA,WAAAoG,CAAYgB,EAAmBC,EAAuChgB,GACrE,IAAI6W,EAAQkJ,EAAQlpB,KAAIE,GAAMipB,EAASjpB,KAAKuR,QAAOhL,GAAKA,IAExD,GAAIuZ,EAAMtO,OAAS,EAAG,CACrB,IAAI1O,EAAW1F,KAAK+qB,eAAerI,GAC/Bpd,EAAStF,KAAKwf,cAAc,KAAM,KAAM9Z,GAC5CmG,EAAO0U,YAAYjb,E,CAErB,CAGA,aAAA0mB,CAAczlB,GACb,OAAQA,EAAKzF,MACZ,KAAK,EAAAyC,QAAQ0H,UACZ,OAAOjL,KAAKmsB,gBAAgB5lB,GAE7B,KAAK,EAAAhD,QAAQ6U,cACZ,OAAOpY,KAAKosB,oBAAoB7lB,GAEjC,KAAK,EAAAhD,QAAQgV,YACZ,OAAO,KAER,KAAK,EAAAhV,QAAQ2I,IACZ,OAAOlM,KAAKqsB,UAAU9lB,GAEvB,KAAK,EAAAhD,QAAQmN,MACZ,OAAO1Q,KAAKssB,YAAY/lB,GAEzB,KAAK,EAAAhD,QAAQoO,IACZ,OAAO3R,KAAKusB,eAAehmB,GAE5B,KAAK,EAAAhD,QAAQyO,KACZ,OAAOhS,KAAKwsB,gBAAgBjmB,GAE7B,KAAK,EAAAhD,QAAQuI,UACZ,OAAO9L,KAAKysB,gBAAgBlmB,GAE7B,KAAK,EAAAhD,QAAQ0L,QACZ,OAAOjP,KAAK0sB,cAAcnmB,GAE3B,KAAK,EAAAhD,QAAQ8M,MACZ,OAAOrQ,KAAK2sB,YAAYpmB,GAEzB,KAAK,EAAAhD,QAAQ+I,KACZ,OAAOtM,KAAK4sB,WAAWrmB,GAExB,KAAK,EAAAhD,QAAQiJ,YACZ,OAAOxM,KAAK6sB,kBAAkBtmB,GAE/B,KAAK,EAAAhD,QAAQgK,IACZ,OAAOvN,KAAK8sB,UAAUvmB,GAEvB,KAAK,EAAAhD,QAAQ6J,OACZ,OAAOpN,KAAK+sB,aAAaxmB,GAE1B,KAAK,EAAAhD,QAAQ2J,MACZ,OAAOlN,KAAKgtB,YAAYzmB,GAEzB,KAAK,EAAAhD,QAAQ6b,OACZ,OAAOpf,KAAKitB,mBAAmB1mB,EAAM,UAEtC,KAAK,EAAAhD,QAAQ2b,OACZ,OAAOlf,KAAKitB,mBAAmB1mB,EAAM,UAEtC,KAAK,EAAAhD,QAAQ2pB,SACb,KAAK,EAAA3pB,QAAQ4pB,QACZ,OAAOntB,KAAKotB,gBAAgB7mB,EAAM,MAEnC,KAAK,EAAAhD,QAAQiK,kBACZ,OAAOxN,KAAKqtB,wBAAwB9mB,GAErC,KAAK,EAAAhD,QAAQkK,iBACZ,OAAOzN,KAAKstB,uBAAuB/mB,GAEpC,KAAK,EAAAhD,QAAQ0J,cACZ,OAAOjN,KAAKwf,cAAc,OAE3B,KAAK,EAAAjc,QAAQiL,WACZ,OAAOxO,KAAKutB,iBAAiBhnB,GAE9B,KAAK,EAAAhD,QAAQiqB,WACZ,OAAOxtB,KAAKytB,iBAAiBlnB,GAE9B,KAAK,EAAAhD,QAAQC,QACZ,OAAOxD,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,OAAQ,CAAC4U,MAAO5U,IAEhE,KAAK,EAAAxV,QAAQE,iBACZ,OAAOzD,KAAKotB,gBAAgB7mB,EAAM,QAEnC,KAAK,EAAAhD,QAAQG,YACZ,OAAO1D,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,SAEhD,KAAK,EAAAxV,QAAQU,QACZ,OAAOjE,KAAK0tB,kBAAkBnnB,EAAMwS,EAAWxS,EAAKsF,OAAO/K,MAAQ,EAAAyC,QAAQsB,aAAe,MAAQ,QAEnG,KAAK,EAAAtB,QAAQM,aACb,KAAK,EAAAN,QAAQO,eACb,KAAK,EAAAP,QAAQI,YACb,KAAK,EAAAJ,QAAQmB,SACb,KAAK,EAAAnB,QAAQuB,OACZ,OAAO9E,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAEhD,KAAK,EAAAxV,QAAQyB,aACZ,OAAOhF,KAAK4tB,mBAAmBrnB,GAEhC,KAAK,EAAAhD,QAAQoB,cACZ,OAAO3E,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,UAEhD,KAAK,EAAAxV,QAAQqB,UACZ,OAAO5E,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,UAEhD,KAAK,EAAAxV,QAAQsB,aACZ,OAAO7E,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,OAEhD,KAAK,EAAAxV,QAAQQ,WACZ,OAAO/D,KAAK6tB,iBAAiBtnB,GAG9B,KAAK,EAAAhD,QAAQW,eACZ,OAAOlE,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAEhD,KAAK,EAAAxV,QAAQY,aACZ,OAAOnE,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAEhD,KAAK,EAAAxV,QAAQS,UACb,KAAK,EAAAT,QAAQc,iBACb,KAAK,EAAAd,QAAQe,eACZ,OAAOtE,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,MAEhD,KAAK,EAAAxV,QAAQK,gBACZ,OAAO5D,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,MAEhD,KAAK,EAAAxV,QAAQgB,aACZ,OAAOvE,KAAK8tB,mBAAmBvnB,GAEhC,KAAK,EAAAhD,QAAQwK,OACZ,OAAO/N,KAAK+tB,aAAaxnB,GAE1B,KAAK,EAAAhD,QAAQiB,QACZ,OAAOxE,KAAKguB,cAAcznB,GAE3B,KAAK,EAAAhD,QAAQa,eACZ,OAAOpE,KAAKiuB,qBAAqB1nB,GAElC,KAAK,EAAAhD,QAAQwB,OACZ,OAAO/E,KAAKkuB,aAAa3nB,GAE1B,KAAK,EAAAhD,QAAQkB,iBACZ,OAAOzE,KAAKmuB,cAAc5nB,GAE3B,KAAK,EAAAhD,QAAQuH,SACZ,OAAO9K,KAAKouB,eAAe7nB,GAE5B,KAAK,EAAAhD,QAAQyH,QACZ,OAAOhL,KAAKquB,cAAc9nB,GAI5B,OAAO,IACR,CAEA,cAAAgoB,CAAehoB,EAAsBsF,GACpC,OAAO7L,KAAK+qB,eAAexkB,EAAKb,SAAUmG,EAC3C,CAGA,cAAAkf,CAAegB,EAAyBlgB,GACvC,GAAa,MAATkgB,EACH,OAAO,KAGR,IAAIzmB,EAAiB,GAErB,IAAK,IAAI4P,EAAI,EAAGA,EAAI6W,EAAM3X,OAAQc,IAAK,CACtC,IAAInP,EAAU/F,KAAKgsB,cAAcD,EAAM7W,IACnCiL,MAAMC,QAAQra,GACjBT,EAAOM,QAAQG,GACLA,GACVT,EAAOM,KAAKG,E,CAQd,OAJI8F,GACHmU,EAAenU,EAAQvG,GAGjBA,CACR,CAEA,eAAA8nB,CAAgB7mB,EAAsBkZ,EAAsCtZ,GAC3E,OAAOnG,KAAKwf,cAAcC,EAAStZ,EAAOnG,KAAKuuB,eAAehoB,GAC/D,CAEA,iBAAAmnB,CAAkBnnB,EAAsBwS,EAAY0G,EAAiBtZ,GACpE,OAAOuZ,EAAgB3G,EAAI0G,EAAStZ,EAAOnG,KAAKuuB,eAAehoB,GAChE,CAEA,eAAA4lB,CAAgB5lB,G,YACf,IAAIjB,EAAStF,KAAKwf,cAAc,KAEhC,MAAM3V,EAAQ7J,KAAKglB,UAAUze,EAAKkF,WACzB,QAAT,EAAAlF,EAAK6T,YAAI,QAAT7T,EAAK6T,KAA8B,QAArB,EAAAvQ,aAAK,EAALA,EAAO3B,sBAAc,eAAEkS,MAErCpa,KAAKovB,YAAY7oB,EAAMjB,GACvBtF,KAAKuuB,eAAehoB,EAAMjB,GAC1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GACtCtF,KAAKqvB,uBAAuB/pB,EAAOuE,MAAOtD,GAE1C,MAAMgU,EAA0B,QAAd,EAAAhU,EAAKgU,iBAAS,QAAyB,QAArB,EAAA1Q,aAAK,EAALA,EAAO3B,sBAAc,eAAEqS,UAM3D,OAJIA,GACHjV,EAAOgqB,UAAUC,IAAIvvB,KAAKklB,eAAe3K,EAAU3X,GAAI2X,EAAUxQ,QAG3DzE,CACR,CAEA,mBAAAkqB,CAAoB3lB,EAAY1D,GAC/BnG,KAAKqvB,uBAAuBxlB,EAAO1D,EACpC,CAEA,sBAAAkpB,CAAuBxlB,EAAY1D,GACrB,MAATA,IAGAA,EAAMjD,QACT2G,EAAa,MAAI1D,EAAMjD,OAGpBiD,EAAM0T,WACThQ,EAAM,aAAe1D,EAAM0T,UAE7B,CAEA,eAAA4S,CAAgBlmB,GACf,IAAIjB,EAAStF,KAAKwf,cAAc,KAKhC,GAHAxf,KAAKuuB,eAAehoB,EAAMjB,GAC1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAElCiB,EAAK0F,KACR3G,EAAO2G,KAAO1F,EAAK0F,UACb,GAAI1F,EAAK3D,GAAI,CACnB,MAAM8sB,EAAM1vB,KAAK6f,SAASqD,aAAanhB,KACrCwI,MAAKolB,GAAMA,EAAG/sB,IAAM2D,EAAK3D,IAAwB,aAAlB+sB,EAAG5sB,aACpCuC,EAAO2G,KAAOyjB,aAAG,EAAHA,EAAK5sB,M,CAGpB,OAAOwC,CACR,CAEA,aAAAonB,CAAcnmB,GACb,IAAIjB,EAAStF,KAAKwf,cAAc,OAShC,OAPAla,EAAOuE,MAAMgmB,QAAU,eACvBvqB,EAAOuE,MAAMqE,SAAW,WACxB5I,EAAOuE,MAAMimB,WAAa,MAE1B9vB,KAAKuuB,eAAehoB,EAAMjB,GAC1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAE/BA,CACR,CAGA,WAAAqnB,CAAYpmB,GACX,IAAIjB,EAAStF,KAAKwf,cAAc,OAYhC,OAVAxf,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAElCtF,KAAK6f,UACR7f,KAAK6f,SACHmQ,kBAAkBzpB,EAAKqD,IAAK5J,KAAK8gB,aACjCyE,MAAK3b,IACLtE,EAAOsE,IAAMA,CAAG,IAIZtE,CACR,CAEA,UAAAsnB,CAAWrmB,GACV,OAAOsZ,SAASqQ,eAAe3pB,EAAKgG,KACrC,CAEA,iBAAAsgB,CAAkBtmB,GACjB,OAAOvG,KAAKL,QAAQ0d,eAAiBwC,SAASqQ,eAAe3pB,EAAKgG,MAAQ,IAC3E,CAEA,WAAAygB,CAAYzmB,GACX,MAAkB,gBAAdA,EAAK4G,MACDnN,KAAKwf,cAAc,MAGpB,IACR,CAEA,cAAA4O,CAAe7nB,GACd,OAAIvG,KAAKL,QAAQ4d,cACTvd,KAAKotB,gBAAgB7mB,EAAM,OAG5BvG,KAAKuuB,eAAehoB,EAC5B,CAEA,aAAA8nB,CAAc9nB,GACb,OAAIvG,KAAKL,QAAQ4d,cACTvd,KAAKotB,gBAAgB7mB,EAAM,OAG5B,IACR,CAEA,YAAAwmB,CAAaxmB,GACZ,IAAI4L,EAAOnS,KAAKwf,cAAc,QAG9B,OAFArN,EAAKtI,MAAMymB,WAAa/pB,EAAK8G,KAC7B8E,EAAK+N,UAAY,MAAM3Z,EAAK+G,QACrB6E,CACR,CAGA,kBAAA8a,CAAmB1mB,EAAsBkZ,GAExC,IAAIna,EAAsBtF,KAAKwf,cAAcC,GAM7C,OAJAzf,KAAKuuB,eAAehoB,EAAMjB,GAE1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAE/BA,CACR,CAEA,uBAAA+nB,CAAwB9mB,GACvB,IAAIjB,EAAStF,KAAKwf,cAAc,OAGhC,OAFAxf,KAAKkqB,mBAAmBtkB,KAAKW,EAAK3D,IAClC0C,EAAO8G,YAAc,GAAGpM,KAAKkqB,mBAAmB9V,SACzC9O,CACR,CAEA,sBAAAgoB,CAAuB/mB,GACtB,IAAIjB,EAAStF,KAAKwf,cAAc,OAGhC,OAFAxf,KAAKshB,kBAAkB1b,KAAKW,EAAK3D,IACjC0C,EAAO8G,YAAc,GAAGpM,KAAKshB,kBAAkBlN,SACxC9O,CACR,CAGA,SAAAwnB,CAAUvmB,G,MACT,IAAIkqB,EAAUzwB,KAAKwf,cAAc,QAIjC,GAFAiR,EAAQvQ,UAAY,SAEhBlgB,KAAKL,QAAQod,aAAc,CAC9B0T,EAAQ/kB,UAAY1L,KAAK0wB,eACzB,IAAIC,EAAyD,QAAjD,EAkcf,SAA8CpqB,EAAsBzF,GACnE,IAAI+K,EAAStF,EAAKsF,OAElB,KAAiB,MAAVA,GAAkBA,EAAO/K,MAAQA,GACvC+K,EAASA,EAAOA,OAEjB,OAAUA,CACX,CAzce+kB,CAAyBrqB,EAAM,EAAAhD,QAAQ0H,kBAAU,eAAEmP,KAC/Dpa,KAAKwhB,YAAY5b,KAAK,CAAC+qB,QAAOxe,KAAMse,G,CAGrC,OAAOA,CACR,CAEA,mBAAArE,CAAoB7lB,GACnB,IAAIjB,EAAStF,KAAKwf,cAAc,QAEhC,OADAla,EAAO1C,GAAK2D,EAAKa,KACV9B,CACR,CAEA,SAAA+mB,CAAU9lB,GACT,GAAIA,EAAKsG,SACR,OAAO,KAER,MAAMvH,EAAStF,KAAKwf,cAAc,QAQlC,GANIjZ,EAAK3D,KACR0C,EAAO1C,GAAK2D,EAAK3D,IAElB5C,KAAKovB,YAAY7oB,EAAMjB,GACvBtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAElCiB,EAAK+H,cAAe,CACvB,MAAMqT,EAAU3hB,KAAKwf,cAAcjZ,EAAK+H,eACxCtO,KAAKuuB,eAAehoB,EAAMob,GAC1Brc,EAAOib,YAAYoB,E,MAEnB3hB,KAAKuuB,eAAehoB,EAAMjB,GAG3B,OAAOA,CACR,CAEA,WAAAgnB,CAAY/lB,GACX,IAAIsqB,EAAS7wB,KAAKwf,cAAc,SAiBhC,OAfAxf,KAAKkhB,mBAAmBtb,KAAK5F,KAAKmhB,qBAClCnhB,KAAKghB,oBAAoBpb,KAAK5F,KAAKihB,sBACnCjhB,KAAKihB,qBAAuB,CAAC,EAC7BjhB,KAAKmhB,oBAAsB,CAAC7N,IAAK,EAAGxB,IAAK,GAErCvL,EAAKqK,SACRigB,EAAOtQ,YAAYvgB,KAAK8wB,mBAAmBvqB,EAAKqK,UAGjD5Q,KAAKovB,YAAY7oB,EAAMsqB,GACvB7wB,KAAKuuB,eAAehoB,EAAMsqB,GAC1B7wB,KAAK0qB,kBAAkBnkB,EAAKF,SAAUwqB,GAEtC7wB,KAAKihB,qBAAuBjhB,KAAKghB,oBAAoB+P,MACrD/wB,KAAKmhB,oBAAsBnhB,KAAKkhB,mBAAmB6P,MAC5CF,CACR,CAEA,kBAAAC,CAAmBlgB,GAClB,IAAItL,EAAStF,KAAKwf,cAAc,YAEhC,IAAK,IAAIlM,KAAO1C,EAAS,CACxB,IAAIijB,EAAU7zB,KAAKwf,cAAc,OAE7BlM,EAAIvC,QACP8iB,EAAQhqB,MAAMkH,MAAQuC,EAAIvC,OAE3BzL,EAAOib,YAAYsT,E,CAGpB,OAAOvuB,CACR,CAEA,cAAAinB,CAAehmB,GACd,IAAIjB,EAAStF,KAAKwf,cAAc,MAUhC,OARAxf,KAAKmhB,oBAAoB7N,IAAM,EAE/BtT,KAAKovB,YAAY7oB,EAAMjB,GACvBtF,KAAKuuB,eAAehoB,EAAMjB,GAC1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAEtCtF,KAAKmhB,oBAAoBrP,MAElBxM,CACR,CAEA,eAAAknB,CAAgBjmB,GACf,IAAIjB,EAAStF,KAAKwf,cAAc,MAEhC,MAAMT,EAAM/e,KAAKmhB,oBAAoB7N,IAuBrC,OArBI/M,EAAK6L,cACkB,WAAtB7L,EAAK6L,eACRpS,KAAKihB,qBAAqBlC,GAAOzZ,EACjCA,EAAO8rB,QAAU,GACPpxB,KAAKihB,qBAAqBlC,KACpC/e,KAAKihB,qBAAqBlC,GAAKqS,SAAW,EAC1C9rB,EAAOuE,MAAMgmB,QAAU,QAGxB7vB,KAAKihB,qBAAqBlC,GAAO,KAGlC/e,KAAKovB,YAAY7oB,EAAMjB,GACvBtF,KAAKuuB,eAAehoB,EAAMjB,GAC1BtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAElCiB,EAAK4L,OACR7M,EAAO+rB,QAAU9qB,EAAK4L,MAEvBnS,KAAKmhB,oBAAoB7N,KAAOhO,EAAO+rB,QAEhC/rB,CACR,CAEA,gBAAAioB,CAAiBhnB,GAChB,IAAIjB,EAASka,EAAc,OAE3B,OADAxf,KAAKuuB,eAAehoB,EAAMjB,GACnBA,CACR,CAEA,gBAAAmoB,CAAiBlnB,G,QAChB,IAAIutB,EAAYnU,EAAiB,OAEjCmU,EAAUtC,aAAa,QAASjrB,EAAKkrB,cAErC,MAAMnsB,EAAStF,KAAK2xB,sBAAsBprB,GAgB1C,OAdkB,QAAd,EAAAA,EAAKqrB,iBAAS,eAAEhvB,MACN,QAAb,EAAA5C,KAAK6f,gBAAQ,SAAEmQ,kBAAkBzpB,EAAKqrB,UAAUhvB,GAAI5C,KAAK8gB,aACvDyE,MAAKpc,GAAK7D,EAAOksB,aAAa,OAAQroB,MAGzC2qB,EAAUvT,YAAYjb,GAEtBusB,uBAAsB,KACrB,MAAMC,EAAMgC,EAAUnyB,kBAA0BowB,UAEhD+B,EAAUtC,aAAa,QAAS,GAAGQ,KAAKC,KAAKH,EAAG3oB,EAAI2oB,EAAG/gB,UACvD+iB,EAAUtC,aAAa,SAAU,GAAGQ,KAAKC,KAAKH,EAAGI,EAAIJ,EAAG/V,UAAU,IAG5D+X,CACR,CAEA,qBAAAnC,CAAsBprB,GACrB,MAAMjB,EAASqa,EAAiBpZ,EAAKkZ,SACrCK,OAAO8D,QAAQrd,EAAKiiB,OAAOtf,SAAQ,EAAEya,EAAGjO,KAAOpQ,EAAOksB,aAAa7N,EAAGjO,KAEtE,IAAK,IAAIjH,KAASlI,EAAKb,SAClB+I,EAAM3N,MAAQ,EAAAyC,QAAQiqB,WACzBloB,EAAOib,YAAYvgB,KAAK2xB,sBAAsBljB,IAE9CnJ,EAAO+a,WAAU,IAAAuS,SAAQ5yB,KAAKgsB,cAAcvd,KAI9C,OAAOnJ,CACR,CAEA,gBAAAuoB,CAAiBtnB,G,MAChB,MAAM8rB,EAAO9rB,EAAKb,SAAS6E,MAAKhF,GAAMA,EAAGzE,MAAQ,EAAAyC,QAAQU,UAEzD,GAAc,QAAV,EAAAsC,EAAKJ,aAAK,eAAEgI,WACf,OAAOuR,EAAgB3G,EAAW,QAAS,KAAM/Y,KAAK+qB,eAAe,CAACsH,KAGvE,MAAMC,EAAS/rB,EAAKb,SAAS6E,MAAKhF,GAAMA,EAAGzE,MAAQ,EAAAyC,QAAQS,YAC3D,OAAO0b,EAAgB3G,EAAW,QAAS,KAAM/Y,KAAK+qB,eAAe,CAACsH,EAAMC,IAC7E,CAEA,kBAAAxE,CAAmBvnB,G,QAClB,MAAMb,EAAW,GAMjB,OAJAA,EAASE,KAAK8Z,EAAgB3G,EAAW,KAAM,KAAM,CAAqB,QAApB,EAAAxS,EAAKJ,MAAMiI,iBAAS,QAAI,OAC9E1I,EAASE,QAAQ5F,KAAK+qB,eAAexkB,EAAKb,WAC1CA,EAASE,KAAK8Z,EAAgB3G,EAAW,KAAM,KAAM,CAAmB,QAAlB,EAAAxS,EAAKJ,MAAMkI,eAAO,QAAI,OAErEqR,EAAgB3G,EAAW,OAAQ,KAAMrT,EACjD,CAEA,aAAAsoB,CAAcznB,G,QACb,MAAMb,EAAW,GACX8sB,GAAU,IAAA/P,OAAMlc,EAAKb,UAAUyD,GAAKA,EAAErI,OAEtC2xB,EAAMD,EAAQ,EAAAjvB,QAAQc,kBACtBquB,EAAMF,EAAQ,EAAAjvB,QAAQe,gBACtBquB,EAAUF,EAAM/S,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAcyG,KAAS,KAC3FI,EAAUH,EAAMhT,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAc0G,KAAS,KAG3FI,EAAWpT,EAAgB3G,EAAW,KAAM,KAAM,CAAiB,QAAhB,EAAU,QAAV,EAAAxS,EAAKJ,aAAK,eAAEmH,YAAI,QAAI,MAc7E,OAZIqlB,GAAWE,EACdntB,EAASE,KAAK8Z,EAAgB3G,EAAW,aAAc,KAAM,CAAC+Z,EAAUD,EAASF,KACvEA,EACVjtB,EAASE,KAAK8Z,EAAgB3G,EAAW,QAAS,KAAM,CAAC+Z,EAAUH,KACzDE,EACVntB,EAASE,KAAK8Z,EAAgB3G,EAAW,SAAU,KAAM,CAAC+Z,EAAUD,KAEpEntB,EAASE,KAAKktB,GAGfptB,EAASE,QAAQ5F,KAAK+qB,eAAeyH,EAAQ,EAAAjvB,QAAQU,SAASyB,WAEvDga,EAAgB3G,EAAW,OAAQ,KAAMrT,EACjD,CAEA,oBAAAuoB,CAAqB1nB,GACpB,MAAMb,EAAW,GACX8sB,GAAU,IAAA/P,OAAMlc,EAAKb,UAAUyD,GAAKA,EAAErI,OAEtC2xB,EAAMD,EAAQ,EAAAjvB,QAAQc,kBACtBquB,EAAMF,EAAQ,EAAAjvB,QAAQe,gBACtBquB,EAAUF,EAAM/S,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAcyG,KAAS,KAC3FI,EAAUH,EAAMhT,EAAgB3G,EAAW,KAAM,MAAM,IAAA6Z,SAAQ5yB,KAAKgsB,cAAc0G,KAAS,KAC3FK,EAAWrT,EAAgB3G,EAAW,KAAM,MAKlD,OAHArT,EAASE,KAAK8Z,EAAgB3G,EAAW,UAAW,KAAM,CAACga,EAAUF,EAASF,KAC9EjtB,EAASE,QAAQ5F,KAAK+qB,eAAeyH,EAAQ,EAAAjvB,QAAQU,SAASyB,WAEvDga,EAAgB3G,EAAW,OAAQ,KAAMrT,EACjD,CAEA,kBAAAkoB,CAAmBrnB,GAClB,MAAMkZ,EAA+C,QAArClZ,EAAKJ,MAAM8H,sBAAkC,QAAU,SACjE3I,EAAStF,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW0G,GAMvD,OAJIlZ,EAAKJ,MAAMmH,MACdhI,EAAOib,YAAYb,EAAgB3G,EAAW,KAAM,KAAM,CAACxS,EAAKJ,MAAMmH,QAGhEhI,CACR,CAEA,YAAA4oB,CAAa3nB,GACZ,MAAMjB,EAAStF,KAAK0tB,kBAAkBnnB,EAAMwS,EAAW,QAEvD,OAAQxS,EAAKJ,MAAM+H,UAClB,IAAK,MACJ5I,EAAOuE,MAAMopB,eAAiB,WAC9B,MACD,IAAK,SACJ3tB,EAAOuE,MAAMopB,eAAiB,YAIhC,OAAO3tB,CACR,CAEA,YAAAyoB,CAAaxnB,GACZ,MAAMjB,EAASoa,EAAgB3G,EAAW,MAM1C,OAJA/Y,KAAKovB,YAAY7oB,EAAMjB,GACvBtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GACtCtF,KAAKuuB,eAAehoB,EAAMjB,GAEnBA,CACR,CAEA,aAAA6oB,CAAc5nB,GACb,MAAMjB,EAASoa,EAAgB3G,EAAW,UAE1C/Y,KAAKovB,YAAY7oB,EAAMjB,GAEvBtF,KAAK0qB,kBAAkBnkB,EAAKF,SAAUf,GAEtC,MAAMI,EAAW1F,KAAKuuB,eAAehoB,GAErC,IAAK,IAAIkI,KAAS/I,EACjBJ,EAAOib,YAAYb,EAAgB3G,EAAW,MAAO,KAAM,CAC1D2G,EAAgB3G,EAAW,MAAO,KAAM,CAACtK,OAI3C,OAAOnJ,CACR,CAGA,iBAAAolB,CAAkB7gB,EAA+BkL,GAChD,IAAK,IAAI4O,KAAK9Z,EACT8Z,EAAEzjB,WAAW,KAChB6U,EAAOyc,aAAa7N,EAAEiG,MAAM,GAAI/f,EAAM8Z,IAEtC5O,EAAOlL,MAAM8Z,GAAK9Z,EAAM8Z,EAG3B,CAGA,WAAAyL,CAAY3uB,EAAuBsU,GAC9BtU,EAAMiL,YACTqJ,EAAOrJ,UAAYjL,EAAMiL,WAGtBjL,EAAMgL,WACTsJ,EAAOua,UAAUC,IAAIvvB,KAAK+jB,iBAAiBtjB,EAAMgL,WAEnD,CAGA,SAAAuZ,CAAUvZ,G,MACT,OAAOA,IAA0B,QAAb,EAAAzL,KAAK6gB,gBAAQ,eAAGpV,GACrC,CAEA,cAAAyZ,CAAetiB,EAAYijB,GAC1B,MAAO,GAAG7lB,KAAK0L,iBAAiB9I,KAAMijB,GACvC,CAEA,YAAA6K,GACC,MAAO,GAAG1wB,KAAK0L,oBAChB,CAEA,aAAAoY,CAAcgC,EAAmBre,EAAgCgZ,EAAkB,MAClF,IAAInb,EAAS,GAAGwgB,UAEhB,IAAK,MAAM/G,KAAOtX,EACbsX,EAAI7e,WAAW,OAGnBoF,GAAU,KAAKyZ,MAAQtX,EAAOsX,WAM/B,OAHI0B,IACHnb,GAAUmb,GAEJnb,EAAS,OACjB,CAEA,gBAAAmgB,CAAiB7iB,EAAYijB,GAC5B,MAAO,GAAG7lB,KAAK0L,iBAAiB9I,KAAMijB,GACvC,CAEA,kBAAAF,CAAmBpZ,EAAclC,EAAczH,EAAYmjB,G,MAW1D,MAAO,IALMxZ,EAAKyZ,QAAQ,SAAS1d,IAClC,IAAIud,EAAM5O,SAAS3O,EAAE2d,UAAU,GAAI,IAAM,EACzC,MAAO,YAAYjmB,KAAKylB,iBAAiB7iB,EAAIijB,OAASE,KAAa,MAGnC,QAAb,EAVJ,CACf,IAAO,MACP,MAAS,QAQkB1b,UAAK,QAAI,KACtC,CAEA,mBAAAub,CAAoBnb,G,MA2CnB,OAAsB,QAAf,EA1CO,CACbyb,KAAM,OACN5b,OAAQ,OACR6b,QAAS,UACTC,YAAa,cACbC,YAAa,cACbC,WAAY,cACZC,WAAY,cACZC,YAAa,uBAMbC,MAAO,WACPC,eAAgB,WAChBC,gBAAiB,wBACjBC,wBAAyB,wBACzBC,uBAAwB,sBACxBC,QAAS,mBACTC,iBAAkB,kBAClBC,qBAAsB,oBACtBC,0BAA2B,sBAC3BC,gBAAiB,qBACjBC,MAAO,iBACPC,eAAgB,iBAChBC,iBAAkB,oBAClBC,2BAA4B,cAC5BC,cAAe,kBACfC,YAAa,OACbC,eAAgB,uBAChBC,cAAe,uBACfC,eAAgB,wBAChBC,QAAS,SACTC,QAAS,SACTC,aAAc,aACdC,OAAQ,SACRC,kBAAmB,kBACnBC,0BAA2B,kBAC3BC,iBAAkB,eAGJzd,UAAO,QAAIA,CAC3B,CAGA,eAAA0Y,GACMnjB,KAAKL,QAAQod,eAIlBsW,aAAarzB,KAAKyhB,aAElBzhB,KAAKyhB,YAAc6R,YAAW,KAC7B,MAAMC,GAAe,IAAAC,uBAErB,IAAK,IAAIC,KAAOzzB,KAAKwhB,aACpB,IAAAkS,eAAcD,EAAIthB,KAAMshB,EAAI9C,MAAO3wB,KAAK6iB,eAAgB0Q,E,GAEvD,KACJ,E,4GCxgDD,MAAMQ,EAAsB,CAAElkB,IAAK,EAAGmL,OAAQ,OAAQnR,MAAO,QAwF7D,SAASmqB,EAAc5f,GACtB,OAAO6f,WAAW7f,EACnB,CAvFA,+BAAoC0f,EAAyBjU,SAAS3F,MACrE,MAAMga,EAAOrU,SAASL,cAAc,OACpC0U,EAAKrqB,MAAMkH,MAAQ,QAEnB+iB,EAAUvT,YAAY2T,GACtB,MAAM5uB,EAAS,IAAM4uB,EAAKC,YAG1B,OAFAL,EAAU9E,YAAYkF,GAEf5uB,CACR,EAEA,yBAA8BiB,EAAmB6T,EAAsByI,EAAwB0Q,EAAuB,KAClH,MAAMpK,EAAI5iB,EAAK6tB,QAAQ,KAEjBC,EAAM9tB,EAAK+tB,wBACXC,EAAMpL,EAAEmL,wBACRE,EAAMC,iBAAiBtL,GAE1BuL,GAAWta,aAAI,EAAJA,EAAMhG,QAAS,EAAIgG,EAAK1X,KAAI8mB,IAAK,CACjD3Z,IAAKmkB,EAAcxK,EAAEtb,UACrB8M,OAAQwO,EAAExO,OACVnR,MAAO2f,EAAE3f,UACN8qB,MAAK,CAACze,EAAGC,IAAMD,EAAErG,IAAMsG,EAAEtG,MAAO,CAACkkB,GAE/Ba,EAAUF,EAASA,EAAStgB,OAAS,GACrCygB,EAAWN,EAAIxjB,MAAQwiB,EACvB9a,EAAOub,EAAcnR,GACxB,IAAIhT,EAAM+kB,EAAQ/kB,IAAM4I,EAExB,GAAI5I,EAAMglB,EACN,KAAOhlB,EAAMglB,GAAYH,EAAStgB,OAhC1B,GAgC4CvE,GAAO4I,EACvDic,EAAS9uB,KAAK,OAAD,wBAAMmuB,GAAU,CAAElkB,IAAKA,KAI5C,MAAMilB,EAAab,WAAWO,EAAIM,YAC5BC,EAAUR,EAAIhgB,KAAOugB,EACrBvgB,GAAQ8f,EAAI9f,KAAOwgB,GAAWxB,EAC9BE,EAAMiB,EAASnqB,MAAKif,GAAgB,SAAXA,EAAE3f,OAAoB2f,EAAE3Z,IAAM0E,IAE7D,GAAU,MAAPkf,EACC,OAEJ,IAAI1iB,EAAgB,EAEpB,GAAiB,SAAb0iB,EAAI5pB,OAAiC,UAAb4pB,EAAI5pB,MAAmB,CACrD,MAAM6qB,EAAWvU,MAAM6U,KAAK7L,EAAE8L,iBAAiB,IAAI1uB,EAAKmF,cAClDwpB,EAAUR,EAASS,QAAQ5uB,GAAQ,EAC7B6uB,EAAQvV,SAASwV,cACvBD,EAAME,SAAS/uB,EAAM,GAEvB2uB,EAAUR,EAAStgB,OACtBghB,EAAMG,aAAab,EAASQ,IAE5BE,EAAMI,YAAYrM,GAGnB,MAAM7P,EAAmB,UAAbma,EAAI5pB,MAAoB,GAAM,EAC9B4rB,EAASL,EAAMd,wBACrB9kB,EAASimB,EAAOlhB,KAAO+E,EAAMmc,EAAO1kB,OAASwjB,EAAIhgB,KAAOugB,GAE9D/jB,EAAQ0iB,EAAI5jB,IAAML,EAAS+jB,C,MAErBxiB,EAAQ0iB,EAAI5jB,IAAM0E,EAOtB,OAJAhO,EAAK2Z,UAAY,SACjB3Z,EAAKsD,MAAMopB,eAAiB,UAC5B1sB,EAAKsD,MAAM6rB,YAAc,GAAG3kB,EAAM+D,QAAQ,OAElC2e,EAAIzY,QACR,IAAK,MACL,IAAK,YACDzU,EAAKsD,MAAMopB,eAAiB,YAC5B1sB,EAAKsD,MAAM8rB,oBAAsB,SACjC,MAEJ,IAAK,SACL,IAAK,QACL,IAAK,aACDpvB,EAAKsD,MAAMopB,eAAiB,YAGxC,C,iHC/FA,eAEA,MAAsB2C,GAAtB,gBAMA,4BAAiCA,EAAjC,c,oBACC,KAAA90B,KAAO,EAAAyC,QAAQ2pB,QAChB,GAEA,2BAAgC0I,EAAhC,c,oBACC,KAAA90B,KAAO,EAAAyC,QAAQ4pB,OAChB,E,sHCbA,eAEA,SAEA,MAAa0I,UAA4C,EAAAtf,KAKrD,WAAA9W,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,GACXC,KAAKia,gBAAkBvP,CAC3B,EARJ,iBAWA,8BAAmCmrB,EAC/B,WAAAp2B,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,EAAM2K,EACrB,CAEA,QAAAtI,CAASE,GACLtC,KAAK0iB,MAAQ1iB,KAAKia,gBAAgB9U,WAAW7C,EAAM,WAAY,EAAAwzB,YACnE,GAGJ,6BAAkCD,EAC9B,WAAAp2B,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,EAAM2K,EACrB,CAEA,QAAAtI,CAASE,GACLtC,KAAK0iB,MAAQ1iB,KAAKia,gBAAgB9U,WAAW7C,EAAM,UAAW,EAAAyzB,WAClE,E,wFChCJ,eAGA,SAEA,MAAaC,UAAsB,EAAAzf,KAG/B,WAAA9W,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,GACXC,KAAKia,gBAAkBvP,CAC3B,CAQA,QAAAtI,CAASE,GACLwd,OAAOC,OAAO/f,MAAM,IAAAi2B,oBAAmB3zB,EAAMtC,KAAK8B,SAASlC,YAC3DI,KAAKoiB,cAAgBpiB,KAAKia,gBAAgBpR,mBAAmBvG,EACjE,EAjBJ,iB,0NCLA,eACA,SAyEA,SAAgBkY,EAAejU,EAAe/D,GAC1C,IAAI8C,EAAoB,CACpB1C,GAAIJ,EAAIK,KAAK0D,EAAM,SACnB2vB,UAAW,IAGf,IAAK,IAAIvzB,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,gBACDpB,EAAO6wB,WAAa3zB,EAAIK,KAAKF,EAAG,OAChC,MACJ,IAAK,cACD2C,EAAO4wB,UAAUtwB,KAAKwwB,EAA6BzzB,EAAGH,IAKlE,OAAO8C,CACX,CAEA,SAAgB2D,EAAuB1C,EAAe/D,GAClD,IAAI8C,EAA4B,CAC5B1C,GAAIJ,EAAIK,KAAK0D,EAAM,iBACnB8vB,OAAQ,IAGZ,IAAK,IAAI1zB,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,OACDpB,EAAO8B,KAAO5E,EAAIK,KAAKF,EAAG,OAC1B,MACJ,IAAK,iBACD2C,EAAOgxB,eAAiB9zB,EAAIK,KAAKF,EAAG,OACpC,MACJ,IAAK,eACD2C,EAAOixB,mBAAqB/zB,EAAIK,KAAKF,EAAG,OACxC,MACJ,IAAK,YACD2C,EAAOkxB,UAAYh0B,EAAIK,KAAKF,EAAG,OAC/B,MACJ,IAAK,MACD2C,EAAO+wB,OAAOzwB,KAAKkE,EAAoBnH,EAAGH,IAKtD,OAAO8C,CACX,CAEA,SAAgBwE,EAAoBvD,EAAe/D,GAC/C,IAAI8C,EAAyB,CACzByE,MAAOvH,EAAImH,QAAQpD,EAAM,SAG7B,IAAK,IAAI5D,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,QACDpB,EAAO0E,MAAQxH,EAAIK,KAAKF,EAAG,OAC3B,MACJ,IAAK,aACD2C,EAAOmxB,QAAUj0B,EAAImH,QAAQhH,EAAG,OAChC,MACJ,IAAK,SACD2C,EAAOmF,OAASjI,EAAIK,KAAKF,EAAG,OAC5B,MACJ,IAAK,UACD2C,EAAOiH,KAAO/J,EAAIK,KAAKF,EAAG,OAC1B,MACJ,IAAK,QACD2C,EAAOoxB,cAAgBl0B,EAAIK,KAAKF,EAAG,OACnC,MACJ,IAAK,iBACD2C,EAAOqxB,gBAAkBn0B,EAAIK,KAAKF,EAAG,OACrC,MACJ,IAAK,SACD2C,EAAOsxB,eAAiBp0B,EAAIK,KAAKF,EAAG,OACpC,MACJ,IAAK,MACD2C,EAAO4C,gBAAiB,IAAAC,0BAAyBxF,EAAGH,GACpD,MACJ,IAAK,MACD8C,EAAO8C,UAAW,IAAAC,oBAAmB1F,EAAGH,GAKpD,OAAO8C,CACX,CAEA,SAAgB8wB,EAA6B7vB,EAAe/D,GACxD,IAAI8C,EAAiC,CACjCyE,MAAOvH,EAAImH,QAAQpD,EAAM,SAG7B,IAAK,IAAI5D,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,gBACDpB,EAAO0E,MAAQxH,EAAImH,QAAQhH,EAAG,OAC9B,MACJ,IAAK,MACD2C,EAAOuxB,eAAiB/sB,EAAoBnH,EAAGH,GAK3D,OAAO8C,CACX,CAEA,SAAgBwxB,EAA4BvwB,EAAe/D,GAEvD,IAAIgH,EAAOhH,EAAIuD,QAAQQ,EAAM,QACzBkD,EAAQD,GAAQhH,EAAIuD,QAAQyD,EAAM,SAClCE,EAAYD,GAASjH,EAAIuD,QAAQ0D,EAAO,aAE5C,OAAOC,EAAY,CACf9G,GAAIJ,EAAIK,KAAK0D,EAAM,kBACnBwwB,YAAav0B,EAAIK,KAAK6G,EAAW,MACjCG,MAAOrH,EAAIK,KAAK4G,EAAO,UACvB,IACR,CA/IA,8BAAmClD,EAAe/D,GAC9C,IAAI8C,EAAkC,CAClCwf,WAAY,GACZkS,mBAAoB,GACpBC,eAAgB,IAGpB,IAAK,IAAIt0B,KAAKH,EAAIC,SAAS8D,GACvB,OAAQ5D,EAAE+D,WACN,IAAK,MACDpB,EAAOwf,WAAWlf,KAAK4U,EAAe7X,EAAGH,IACzC,MACJ,IAAK,cACD8C,EAAO0xB,mBAAmBpxB,KAAKqD,EAAuBtG,EAAGH,IACzD,MACJ,IAAK,eACD8C,EAAO2xB,eAAerxB,KAAKkxB,EAA4Bn0B,EAAGH,IAKtE,OAAO8C,CACX,EAEA,mBAoBA,2BA6BA,wBAwCA,iCAmBA,+B,0HCvLA,eAEA,0BAA+B4xB,EAAmBr1B,GAA8B,GAmBhF,IAAuB2b,EAlBf3b,IACAq1B,EAAYA,EAAUlR,QAAQ,aAAc,KAEhDkR,EAgB8B,SADX1Z,EAfO0Z,GAgBdC,WAAW,GAAgB3Z,EAAKyI,UAAU,GAAKzI,EAd3D,MAAMlY,GAAS,IAAI8xB,WAAYC,gBAAgBH,EAAW,mBACpDI,EAS2C,QAA1C,EAT6BhyB,EASzBiyB,qBAAqB,eAAe,UAAE,eAAEnrB,YADvD,I,EANI,GAAIkrB,EACA,MAAM,IAAIE,MAAMF,GAEpB,OAAOhyB,CACX,EAUA,8BAAmCiB,GAC/B,OAAO,IAAIkxB,eAAgBC,kBAAkBnxB,EACjD,EAEA,MAAa1G,EACT,QAAA4C,CAAS8D,EAAeG,EAAoB,MACxC,MAAMpB,EAAS,GAEf,IAAK,IAAI4P,EAAI,EAAG+U,EAAI1jB,EAAK4O,WAAWf,OAAQc,EAAI+U,EAAG/U,IAAK,CACpD,IAAI3N,EAAIhB,EAAK4O,WAAWwiB,KAAKziB,GAEX,GAAd3N,EAAE6N,UAA+B,MAAb1O,GAAsBa,EAAcb,WAAaA,GACrEpB,EAAOM,KAAK2B,E,CAGpB,OAAOjC,CACX,CAEA,OAAAS,CAAQQ,EAAeG,GACnB,IAAK,IAAIwO,EAAI,EAAG+U,EAAI1jB,EAAK4O,WAAWf,OAAQc,EAAI+U,EAAG/U,IAAK,CACpD,IAAI3N,EAAIhB,EAAK4O,WAAWwiB,KAAKziB,GAE7B,GAAkB,GAAd3N,EAAE6N,UAAkB7N,EAAcb,WAAaA,EAC/C,OAAOa,C,CAGf,OAAO,IACX,CAEA,WAAAgC,CAAYhD,EAAeG,EAAmBkxB,GAC1C,IAAIryB,EAAKvF,KAAK+F,QAAQQ,EAAMG,GAC5B,OAAOnB,EAAKvF,KAAK6C,KAAK0C,EAAIqyB,QAAiB1tB,CAC/C,CAEA,KAAAse,CAAMjiB,GACF,OAAO4Z,MAAM6U,KAAKzuB,EAAKsxB,WAC3B,CAEA,IAAAh1B,CAAK0D,EAAeG,GAChB,IAAK,IAAIwO,EAAI,EAAG+U,EAAI1jB,EAAKsxB,WAAWzjB,OAAQc,EAAI+U,EAAG/U,IAAK,CACpD,IAAIgB,EAAI3P,EAAKsxB,WAAWF,KAAKziB,GAE7B,GAAIgB,EAAExP,WAAaA,EACf,OAAOwP,EAAEqB,K,CAGjB,OAAO,IACX,CAEA,OAAA5N,CAAQnE,EAAe+P,EAAkBqE,EAAuB,MAC5D,IAAIvG,EAAMrT,KAAK6C,KAAK2C,EAAM+P,GAC1B,OAAOlC,EAAM4D,SAAS5D,GAAOuG,CACjC,CAEA,OAAAxD,CAAQ5Q,EAAe+P,EAAkBqE,EAAuB,MAC5D,IAAIvG,EAAMrT,KAAK6C,KAAK2C,EAAM+P,GAC1B,OAAOlC,EAAM4D,SAAS5D,EAAK,IAAMuG,CACrC,CAEA,SAAAke,CAAUtyB,EAAe+P,EAAkBqE,EAAuB,MAC9D,IAAIvG,EAAMrT,KAAK6C,KAAK2C,EAAM+P,GAC1B,OAAOlC,EAAM4gB,WAAW5gB,GAAOuG,CACnC,CAEA,QAAA/R,CAASrC,EAAe+P,EAAkBqE,EAAwB,MAC9D,OAAO,IAAAme,gBAAe/3B,KAAK6C,KAAK2C,EAAM+P,GAAWqE,EACrD,CAEA,UAAAlK,CAAWlK,EAAe+P,EAAkBmE,EAAyB,EAAA/J,YAAYiG,KAC7E,OAAO,IAAAC,eAAc7V,KAAK6C,KAAK2C,EAAM+P,GAAWmE,EACpD,EAlEJ,cAqEA,MAAMse,EAAkB,IAAIn4B,EAE5B,UAAem4B,C,uFCnGf,eACA,SAEA,MAAaC,UAAqB,EAAA1hB,KAGjC,WAAA9W,CAAYsa,EAAqBha,GAChCia,MAAMD,EAAKha,EACZ,CAEA,QAAAqC,CAASE,GACRtC,KAAK8iB,UAAW,IAAAoV,eAAc51B,EAAMtC,KAAK8B,SAASlC,UACnD,EATD,gB,cC2BA,SAAgBu4B,EAAoB5xB,EAAe/D,GAClD,IAAI8C,EAAS,CACZ8yB,eAAgB,IAGjB,IAAK,IAAI7yB,KAAM/C,EAAIC,SAAS8D,GAC3B,OAAOhB,EAAGmB,WACT,IAAK,SACJpB,EAAO+yB,gBAAkB71B,EAAIK,KAAK0C,EAAI,OACtC,MAED,IAAK,WACL,IAAK,UACJD,EAAO8yB,eAAexyB,KAAKpD,EAAIK,KAAK0C,EAAI,OAKxC,OAAOD,CACX,C,8FAlCA,yBAA8BiB,EAAe/D,GAC5C,IAAI8C,EAAS,CAAC,EAEd,IAAK,IAAIC,KAAM/C,EAAIC,SAAS8D,GAC3B,OAAOhB,EAAGmB,WACT,IAAK,iBAAkBpB,EAAOyd,eAAiBvgB,EAAIkN,WAAWnK,EAAI,OAAQ,MAC1E,IAAK,aAAcD,EAAOgzB,cAAgBH,EAAoB5yB,EAAI/C,GAAM,MACxE,IAAK,YAAa8C,EAAOizB,aAAeJ,EAAoB5yB,EAAI/C,GAAM,MACtE,IAAK,kBAAmB8C,EAAOkzB,gBAAkBh2B,EAAIqF,SAAStC,EAAI,OAIjE,OAAOD,CACX,EAEA,uB,qFC9BA,eAIA,MAAamzB,UAAmB,EAAAliB,KAK5B,WAAA9W,CAAYsa,EAAqBha,EAAc2K,GAC3CsP,MAAMD,EAAKha,GACXC,KAAKia,gBAAkBvP,CAC3B,CAEA,QAAAtI,CAASE,GACLtC,KAAKsH,OAAStH,KAAKia,gBAAgBnT,gBAAgBxE,EACvD,EAZJ,c,oFCJA,eACA,QAEA,MAAao2B,UAAkB,EAAAniB,KAG3B,WAAA9W,CAAYsa,EAAqBha,GAC7Bia,MAAMD,EAAKha,EACf,CAEA,QAAAqC,CAASE,GACLtC,KAAKsjB,OAAQ,IAAAqV,YAAWr2B,EAAMtC,KAAK8B,SAASlC,UAChD,EATJ,a,kJCFA,MAAag5B,GAoCb,SAAgBC,EAAiBtyB,EAAe/D,GAC5C,IAAI8C,EAAyB,CACzB8B,KAAM5E,EAAIK,KAAK0D,EAAM,QACrBsd,OAAQ,CAAC,GAGb,IAAK,IAAIte,KAAM/C,EAAIC,SAAS8D,GAAO,CAC/B,IAAIuyB,EAAUt2B,EAAIuD,QAAQR,EAAI,WAC1BwzB,EAASv2B,EAAIuD,QAAQR,EAAI,UAEzBuzB,EACAxzB,EAAOue,OAAOte,EAAGmB,WAAalE,EAAIK,KAAKi2B,EAAS,OAE3CC,IACLzzB,EAAOue,OAAOte,EAAGmB,WAAalE,EAAIK,KAAKk2B,EAAQ,W,CAIvD,OAAOzzB,CACX,CAEA,SAAgB0zB,EAAgBzyB,EAAe/D,GAC3C,IAAI8C,EAAwB,CACxB8B,KAAM5E,EAAIK,KAAK0D,EAAM,SAGzB,IAAK,IAAIhB,KAAM/C,EAAIC,SAAS8D,GACxB,OAAQhB,EAAGmB,WACP,IAAK,YAAapB,EAAOie,UAAY0V,EAAc1zB,EAAI/C,GAAM,MAC7D,IAAK,YAAa8C,EAAOme,UAAYwV,EAAc1zB,EAAI/C,GAI/D,OAAO8C,CACX,CAEA,SAAgB2zB,EAAc1yB,EAAe/D,GACzC,MAAO,CACHghB,cAAehhB,EAAI+G,YAAYhD,EAAM,QAAS,YAC9C2yB,WAAY12B,EAAI+G,YAAYhD,EAAM,KAAM,YACxC4yB,WAAY32B,EAAI+G,YAAYhD,EAAM,KAAM,YAEhD,CA9EA,aAsBA,sBAA2BA,EAAe/D,GACtC,IAAI8C,EAAS,IAAIszB,EACbQ,EAAgB52B,EAAIuD,QAAQQ,EAAM,iBAEtC,IAAK,IAAIhB,KAAM/C,EAAIC,SAAS22B,GACxB,OAAO7zB,EAAGmB,WACN,IAAK,YAAapB,EAAOoe,YAAcmV,EAAiBtzB,EAAI/C,GAAM,MAClE,IAAK,aAAc8C,EAAO+d,WAAa2V,EAAgBzzB,EAAI/C,GAInE,OAAO8C,CACX,EAEA,qBAqBA,oBAeA,iB,cCpCA,SAAgB+zB,EAAS1B,GACrB,OAAOA,GAAwB,iBAATA,IAAsBxX,MAAMC,QAAQuX,EAC9D,C,wMAxCA,2BAAgCjsB,GAC/B,OAAOA,aAAS,EAATA,EAAWsa,QAAQ,SAAU,KAAKA,QAAQ,QAAS,OAAOX,aAClE,EAEA,qBAA0BtlB,GACtB,IAAIu5B,EAAKv5B,EAAKw5B,YAAY,KAAO,EAIjC,MAAO,CAHY,GAAND,EAAU,GAAKv5B,EAAKkmB,UAAU,EAAGqT,GACzB,GAANA,EAAUv5B,EAAOA,EAAKkmB,UAAUqT,GAGnD,EAEA,uBAA4Bv5B,EAAcsyB,GACtC,IACI,MAAMmH,EAAS,eAEf,OADY,IAAIC,IAAI15B,EAAMy5B,EAASnH,GAAMqH,WAC9BzT,UAAUuT,EAAOplB,O,CAC9B,SACE,MAAO,GAAGie,IAAOtyB,G,CAEzB,EAEA,iBAA+B45B,EAAYC,GACvC,OAAOD,EAAME,QAAO,CAAC3jB,EAAG/M,KACpB+M,EAAE0jB,EAAGzwB,IAAMA,EACJ+M,IACR,CAAC,EACR,EAEA,wBAA6B4jB,GAC5B,OAAO,IAAI74B,SAAQ,CAACC,EAAS64B,KAC5B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,IAAMh5B,EAAQ84B,EAAO10B,QACxC00B,EAAOG,QAAU,IAAMJ,IACvBC,EAAOI,cAAcN,EAAK,GAE5B,EAEA,aAIA,oBAAyBnC,GACrB,MAAuB,iBAATA,GAAqBA,aAAgB0C,MACvD,EAEA,qBAAgBlW,EAAUrhB,KAAWw3B,G,MACjC,IAAKA,EAAQlmB,OACT,OAAOtR,EAEX,MAAMy3B,EAASD,EAAQE,QAEvB,GAAInB,EAASv2B,IAAWu2B,EAASkB,GAC7B,IAAK,MAAMxb,KAAOwb,EACVlB,EAASkB,EAAOxb,IAEhBoF,EADuB,QAAX,EAAArhB,EAAOic,UAAI,QAAKjc,EAAOic,GAAO,CAAC,EAC5Bwb,EAAOxb,IAEtBjc,EAAOic,GAAOwb,EAAOxb,GAKjC,OAAOoF,EAAUrhB,KAAWw3B,EAChC,EAEA,yBAA8B/tB,GAC7B,MAAMjH,EAAiC,CAAC,EAExC,IAAK,MAAMm1B,KAAQluB,EAAKtE,MAAM,KAAM,CACnC,MAAO8W,EAAK1L,GAAOonB,EAAKxyB,MAAM,KAC9B3C,EAAOyZ,GAAO1L,C,CAGf,OAAO/N,CACR,EAEA,0BAA+BuE,GAC9B,OAAOiW,OAAO8D,QAAQ/Z,GAAOnH,KAAI,CAACihB,EAAGjO,IAAM,GAAGiO,MAAMjO,MAAKrJ,KAAK,IAC/D,EAEA,mBAA2BgH,GAC1B,OAAO8M,MAAMC,QAAQ/M,GAAOA,EAAM,CAACA,EACpC,C,uGClFA,eACA,SACA,SAGA,MAAama,UAAmB,EAAAvO,mBAAhC,c,oBACC,KAAAne,KAAgB,EAAAyC,QAAQiqB,WAGxB,KAAAhF,MAAgC,CAAC,CAMlC,EAwFA,SAASkS,EAAYn1B,G,MACpB,MAAO,CACN,OAAU,UAAI1C,KAAK0C,EAAI,SACvB,eAA6D,QAA7C,YAAImK,WAAWnK,EAAI,SAAU,EAAAoK,YAAYC,YAAI,QAAI,MAEnE,CAQA,SAAS+qB,EAAWtnB,GACnB,OAAOA,EAAIpL,MAAM,IAClB,CAjHA,eAYA,2BAAgByG,EAAgBnI,EAAemE,GAC9C,IAAIpF,EAAS,IAAIkoB,EAEjB,OAAQjnB,EAAKG,WACZ,IAAK,OACJpB,EAAOma,QAAU,OACjBK,OAAOC,OAAOza,EAAOkjB,MAAO,CAAEzX,MAAO,OAAQgL,OAAQ,SACrD,MAED,IAAK,OACJzW,EAAOma,QAAU,UACjBK,OAAOC,OAAOza,EAAOkjB,MAAO,CAAEoS,GAAI,MAAOC,GAAI,MAAOC,GAAI,MAAOC,GAAI,QACnE,MAED,IAAK,OACJz1B,EAAOma,QAAU,OACjB,MAED,IAAK,QACJna,EAAOma,QAAU,IACjB,MAED,IAAK,UACJna,EAAOma,QAAU,gBACjBK,OAAOC,OAAOza,EAAOkjB,MAAO,CAAEzX,MAAO,OAAQgL,OAAQ,SACrD,MAED,QACC,OAAO,KAGT,IAAK,MAAMif,KAAM,UAAIxS,MAAMjiB,GAC1B,OAAOy0B,EAAGt0B,WACT,IAAK,QACJpB,EAAOmsB,aAAeuJ,EAAGzjB,MACzB,MAED,IAAK,YACJjS,EAAOkjB,MAAMyS,KAAOD,EAAGzjB,MACvB,MAED,IAAK,OACJ,MAAO2jB,EAAIC,GAAMR,EAAWK,EAAGzjB,OAC/BuI,OAAOC,OAAOza,EAAOkjB,MAAO,CAAE0S,KAAIC,OAClC,MAED,IAAK,KACJ,MAAOC,EAAIC,GAAMV,EAAWK,EAAGzjB,OAC/BuI,OAAOC,OAAOza,EAAOkjB,MAAO,CAAE4S,KAAIC,OAKrC,IAAK,MAAM91B,KAAM,UAAI9C,SAAS8D,GAC7B,OAAQhB,EAAGmB,WACV,IAAK,SACJoZ,OAAOC,OAAOza,EAAOkjB,MAAOkS,EAAYn1B,IACxC,MAED,IAAK,OACJua,OAAOC,OAAOza,EAAOkjB,MAkCjB,CAAC,GAjCL,MAED,IAAK,YACJljB,EAAOma,QAAU,QACjBK,OAAOC,OAAOza,EAAOkjB,MAAO,CAAEzX,MAAO,OAAQgL,OAAQ,SACrDzW,EAAOssB,UAAY,CAClBhvB,GAAI,UAAIC,KAAK0C,EAAI,MACjBkR,MAAO,UAAI5T,KAAK0C,EAAI,UAErB,MAED,IAAK,cACJD,EAAOI,SAASE,QAAQ8E,EAAO/E,kBAAkBJ,IACjD,MAED,QACC,MAAMkJ,EAAQC,EAAgBnJ,EAAImF,GAClC+D,GAASnJ,EAAOI,SAASE,KAAK6I,GAKjC,OAAOnJ,CACR,C,qGCnGA,eAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEMg2B,EAAe,CACpB,CAAEx6B,KAAM,EAAAyB,kBAAkBg5B,eAAgBz4B,OAAQ,qBAClD,CAAEhC,KAAM,EAAAyB,kBAAkBi5B,mBAAoB14B,OAAQ,oBACtD,CAAEhC,KAAM,EAAAyB,kBAAkBk5B,eAAgB34B,OAAQ,qBAClD,CAAEhC,KAAM,EAAAyB,kBAAkBm5B,iBAAkB54B,OAAQ,wBAIrD,MAAa6a,EAAb,cAMC,KAAAge,MAAgB,GAChB,KAAAC,SAAiC,CAAC,CA2JnC,CA9IC,iBAAap7B,CAAKs5B,EAAkBpvB,EAAwB/K,GAC3D,IAAI+N,EAAI,IAAIiQ,EAaZ,OAXAjQ,EAAEmuB,SAAWl8B,EACb+N,EAAEouB,QAAUpxB,EAEZgD,EAAE5L,eAAiB,EAAAtC,eAAegB,KAAKs5B,EAAMn6B,GAC7C+N,EAAE3L,WAAa2L,EAAE5L,SAASX,0BAEpBF,QAAQ86B,IAAIT,EAAa54B,KAAIgtB,I,MAClC,MAAM7G,EAAyC,QAArC,EAAAnb,EAAE3L,KAAKwI,MAAKpB,GAAKA,EAAErI,OAAS4uB,EAAI5uB,cAAK,QAAI4uB,EACnD,OAAOhiB,EAAEsuB,qBAAqBnT,EAAE/lB,OAAQ+lB,EAAE/nB,KAAK,KAGzC4M,CACR,CAEA,IAAA7M,CAAKC,EAAO,QACX,OAAOd,KAAK8B,SAASjB,KAAKC,EAC3B,CAEQ,0BAAMk7B,CAAqBj8B,EAAce,G,MAChD,GAAId,KAAK47B,SAAS77B,GACjB,OAAOC,KAAK47B,SAAS77B,GAEtB,IAAKC,KAAK8B,SAAShC,IAAIC,GACtB,OAAO,KAER,IAAI2rB,EAAa,KAEjB,OAAQ5qB,GACP,KAAK,EAAAyB,kBAAkBg5B,eACtBv7B,KAAKkjB,aAAewI,EAAO,IAAI,EAAA5R,aAAa9Z,KAAK8B,SAAU/B,EAAMC,KAAK87B,SACtE,MAED,KAAK,EAAAv5B,kBAAkB05B,UACtBj8B,KAAKsiB,cAAgBoJ,EAAO,IAAI,EAAAtN,cAAcpe,KAAK8B,SAAU/B,GAC7D,MAED,KAAK,EAAAwC,kBAAkB25B,UACtBl8B,KAAKkiB,cAAgBwJ,EAAO,IAAI,EAAAsK,cAAch2B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SACxE,MAED,KAAK,EAAAv5B,kBAAkB45B,OACtBn8B,KAAK+hB,WAAa2J,EAAO,IAAI,EAAA+M,WAAWz4B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SAClE,MAED,KAAK,EAAAv5B,kBAAkB65B,MACtBp8B,KAAK6hB,UAAY6J,EAAO,IAAI,EAAAgN,UAAU14B,KAAK8B,SAAU/B,GACrD,MAED,KAAK,EAAAwC,kBAAkB85B,UACtBr8B,KAAKwiB,cAAgBkJ,EAAO,IAAI,EAAA4Q,cAAct8B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SACxE,MAED,KAAK,EAAAv5B,kBAAkBg6B,SACtBv8B,KAAK2iB,aAAe+I,EAAO,IAAI,EAAA8Q,aAAax8B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SACtE,MAED,KAAK,EAAAv5B,kBAAkB6c,OACtBsM,EAAO,IAAI,EAAA+Q,WAAWz8B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SAChD,MAED,KAAK,EAAAv5B,kBAAkB2c,OACtBwM,EAAO,IAAI,EAAAgR,WAAW18B,KAAK8B,SAAU/B,EAAMC,KAAK87B,SAChD,MAED,KAAK,EAAAv5B,kBAAkBk5B,eACtBz7B,KAAK28B,cAAgBjR,EAAO,IAAI,EAAApV,cAActW,KAAK8B,SAAU/B,GAC7D,MAED,KAAK,EAAAwC,kBAAkBi5B,mBACtBx7B,KAAK48B,kBAAoBlR,EAAO,IAAI,EAAAlU,kBAAkBxX,KAAK8B,SAAU/B,GACrE,MAED,KAAK,EAAAwC,kBAAkBm5B,iBACtBhQ,EAAO,IAAI,EAAAxU,gBAAgBlX,KAAK8B,SAAU/B,GAC1C,MAED,KAAK,EAAAwC,kBAAkBs6B,SACtB78B,KAAK4iB,aAAe8I,EAAO,IAAI,EAAAuM,aAAaj4B,KAAK8B,SAAU/B,GAI7D,GAAY,MAAR2rB,EACH,OAAOzqB,QAAQC,QAAQ,MAOxB,GALAlB,KAAK47B,SAAS77B,GAAQ2rB,EACtB1rB,KAAK27B,MAAM/1B,KAAK8lB,SAEVA,EAAKlrB,QAEE,QAAT,EAAAkrB,EAAK3pB,YAAI,eAAEqS,QAAS,EAAG,CAC1B,MAAO0oB,IAAU,IAAAv7B,WAAUmqB,EAAK3rB,YAC1BkB,QAAQ86B,IAAIrQ,EAAK3pB,KAAKW,KAAIgtB,GAAO1vB,KAAKg8B,sBAAqB,IAAAe,aAAYrN,EAAI5sB,OAAQg6B,GAASpN,EAAI5uB,Q,CAGvG,OAAO4qB,CACR,CAEA,uBAAMsE,CAAkBptB,EAAY8oB,GACnC,MAAMviB,QAAUnJ,KAAKg9B,aAAatR,QAAAA,EAAQ1rB,KAAKkjB,aAActgB,EAAI,QACjE,OAAO5C,KAAKi9B,UAAU9zB,EACvB,CAEA,wBAAMmc,CAAmB1iB,GACxB,MAAMuG,QAAUnJ,KAAKg9B,aAAah9B,KAAKkiB,cAAetf,EAAI,QAC1D,OAAO5C,KAAKi9B,UAAU9zB,EACvB,CAEA,cAAMkf,CAASzlB,EAAYmc,GAC1B,MAAM5V,QAAUnJ,KAAKg9B,aAAah9B,KAAKsiB,cAAe1f,EAAI,cAC1D,OAAOuG,EAAInJ,KAAKi9B,UAAU,IAAIC,KAAK,CAACC,EAAYh0B,EAAG4V,MAAU5V,CAC9D,CAEQ,SAAA8zB,CAAUnD,GACjB,OAAKA,EAGD95B,KAAK67B,SAASve,cACV,IAAA8f,cAAatD,GAGdL,IAAI4D,gBAAgBvD,GANnB,IAOT,CAEA,eAAAnO,CAAgB/oB,EAAY06B,EAAiB,M,MACxC5N,GAAoB,QAAb,EAAA4N,EAASv7B,YAAI,QAAI/B,KAAK+B,MAAMwI,MAAKse,GAAKA,EAAEjmB,IAAMA,IACzD,MAAMk6B,EAASQ,GAAW,IAAA/7B,WAAU+7B,EAASv9B,MAAM,GAAK,GACxD,OAAO2vB,EAAM1vB,KAAK47B,UAAS,IAAAmB,aAAYrN,EAAI5sB,OAAQg6B,IAAW,IAC/D,CAEA,WAAAS,CAAY7R,EAAY9oB,GACvB,MAAM8sB,EAAMhE,EAAK3pB,KAAKwI,MAAKpB,GAAKA,EAAEvG,IAAMA,KACjCk6B,IAAU,IAAAv7B,WAAUmqB,EAAK3rB,MAChC,OAAO2vB,GAAM,IAAAqN,aAAYrN,EAAI5sB,OAAQg6B,GAAU,IAChD,CAEQ,YAAAE,CAAatR,EAAY9oB,EAAY46B,GAC5C,MAAMz9B,EAAOC,KAAKu9B,YAAY7R,EAAM9oB,GACpC,OAAO7C,EAAOC,KAAK8B,SAAStB,KAAKT,EAAMy9B,GAAcv8B,QAAQC,QAAQ,KACtE,EAGD,SAAgBi8B,EAAY3f,EAAkBigB,GAC7C,MACMC,EAAUD,EAAQzX,QAAQ,SAAU,IACpC2X,EAAU,IAAIxd,MAFR,IAIZ,IAAK,IAAIjL,EAAI,EAAGA,EAJJ,GAIaA,IACxByoB,EALW,GAKGzoB,EAAI,GAAK+B,SAASymB,EAAQv9B,OAAW,EAAJ+U,EAAO,GAAI,IAE3D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACvBsI,EAAKtI,GAAKsI,EAAKtI,GAAKyoB,EAAQzoB,EARjB,IAUZ,OAAOsI,CACR,CAhLA,iBAoKA,e,UC7LAogB,EAAOC,QAAUC,C,GCDbC,EAA2B,CAAC,ECEhC,IAAIC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBh0B,IAAjBi0B,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAO,EAAoBF,GAAUN,EAAQA,EAAOC,QAASI,GAG/CL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://docx-preview-sync/./src/common/open-xml-package.ts","webpack://docx-preview-sync/./src/common/part.ts","webpack://docx-preview-sync/./src/common/relationship.ts","webpack://docx-preview-sync/./src/document-parser.ts","webpack://docx-preview-sync/./src/document-props/core-props-part.ts","webpack://docx-preview-sync/./src/document-props/core-props.ts","webpack://docx-preview-sync/./src/document-props/custom-props-part.ts","webpack://docx-preview-sync/./src/document-props/custom-props.ts","webpack://docx-preview-sync/./src/document-props/extended-props-part.ts","webpack://docx-preview-sync/./src/document-props/extended-props.ts","webpack://docx-preview-sync/./src/document/bookmarks.ts","webpack://docx-preview-sync/./src/document/border.ts","webpack://docx-preview-sync/./src/document/common.ts","webpack://docx-preview-sync/./src/document/document-part.ts","webpack://docx-preview-sync/./src/document/dom.ts","webpack://docx-preview-sync/./src/document/line-spacing.ts","webpack://docx-preview-sync/./src/document/paragraph.ts","webpack://docx-preview-sync/./src/document/run.ts","webpack://docx-preview-sync/./src/document/section.ts","webpack://docx-preview-sync/./src/docx-preview.ts","webpack://docx-preview-sync/./src/font-table/font-table.ts","webpack://docx-preview-sync/./src/font-table/fonts.ts","webpack://docx-preview-sync/./src/header-footer/elements.ts","webpack://docx-preview-sync/./src/header-footer/parts.ts","webpack://docx-preview-sync/./src/html-renderer-sync.ts","webpack://docx-preview-sync/./src/html-renderer.ts","webpack://docx-preview-sync/./src/javascript.ts","webpack://docx-preview-sync/./src/notes/elements.ts","webpack://docx-preview-sync/./src/notes/parts.ts","webpack://docx-preview-sync/./src/numbering/numbering-part.ts","webpack://docx-preview-sync/./src/numbering/numbering.ts","webpack://docx-preview-sync/./src/parser/xml-parser.ts","webpack://docx-preview-sync/./src/settings/settings-part.ts","webpack://docx-preview-sync/./src/settings/settings.ts","webpack://docx-preview-sync/./src/styles/styles-part.ts","webpack://docx-preview-sync/./src/theme/theme-part.ts","webpack://docx-preview-sync/./src/theme/theme.ts","webpack://docx-preview-sync/./src/utils.ts","webpack://docx-preview-sync/./src/vml/vml.ts","webpack://docx-preview-sync/./src/word-document.ts","webpack://docx-preview-sync/external module {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\",\"module\":\"jszip\"}","webpack://docx-preview-sync/webpack/bootstrap","webpack://docx-preview-sync/webpack/startup"],"sourcesContent":["import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n// \r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n  protected _xmlDocument: Document;\r\n\r\n  rels: Relationship[];\r\n\r\n  constructor(protected _package: OpenXmlPackage, public path: string) {\r\n  }\r\n\r\n  async load(): Promise<any> {\r\n    this.rels = await this._package.loadRelationships(this.path);\r\n\r\n    const xmlText = await this._package.load(this.path);\r\n    const xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n    if (this._package.options.keepOrigin) {\r\n      this._xmlDocument = xmlDoc;\r\n    }\r\n\r\n    this.parseXml(xmlDoc.firstElementChild);\r\n  }\r\n\r\n  save() {\r\n    this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n  }\r\n\r\n  protected parseXml(root: Element) {\r\n  }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties, SectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\nimport { parseVmlElement } from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"func\": DomType.MmlFunction,\r\n\t\"fName\": DomType.MmlFunctionName,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sPre\": DomType.MmlPreSubSuper,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n\t\"lim\": DomType.MmlLimit,\r\n\t\"limLow\": DomType.MmlLimitLower,\r\n\t\"m\": DomType.MmlMatrix,\r\n\t\"mr\": DomType.MmlMatrixRow,\r\n\t\"box\": DomType.MmlBox,\r\n\t\"bar\": DomType.MmlBar,\r\n\t\"groupChr\": DomType.MmlGroupChar\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\tignoreWidth: false,\r\n\t\t\tdebug: false,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tvar result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\r\n\t\tvar background = xml.element(xmlDoc, \"background\");\r\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tvar result = {};\r\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tvar children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\r\n\t\t\tcase \"table\": result.target = \"table\"; break;\r\n\t\t\tcase \"character\": result.target = \"span\"; break;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\tvar type = xml.attr(node, \"type\");\r\n\t\tvar selector = \"\";\r\n\t\tvar modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar mapping = {};\r\n\t\tvar bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tvar pict = xml.element(elem, \"pict\");\r\n\t\tvar shape = pict && xml.element(pict, \"shape\");\r\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tvar result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Inserted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Deleted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n\t\tvar anchor = xml.attr(node, \"anchor\");\r\n\t\tvar relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tlet textContent = c.textContent;\r\n\t\t\t\t\t// 是否保留空格\r\n\t\t\t\t\tlet is_preserve_space = xml.attr(c, \"xml:space\") === \"preserve\";\r\n\t\t\t\t\tif (is_preserve_space) {\r\n\t\t\t\t\t\t// TODO \\u00A0 = 不间断空格，英文应该一个空格，中文两个空格，暂时两个空格，后期修复\r\n\t\t\t\t\t\ttextContent = textContent.split(/\\s/).join(\"\\u00A0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tvar run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"vertJc\": result.verticalJustification = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"pos\": result.position = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\r\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tvar choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\r\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n\t\tvar isAnchor = node.localName == \"anchor\";\r\n\r\n\t\t//TODO 计算\r\n\t\t// result.cssStyle[\"margin-left\"] = xml.lengthAttr(node, \"distL\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-top\"] = xml.lengthAttr(node, \"distT\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-right\"] = xml.lengthAttr(node, \"distR\", LengthUsage.Emu);\r\n\t\t// result.cssStyle[\"margin-bottom\"] = xml.lengthAttr(node, \"distB\", LengthUsage.Emu);\r\n\r\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode)\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\r\n\t\t\t\t\t\tif (offsetNode)\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\twrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tvar g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g)\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wrapType == \"wrapTopAndBottom\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\tif (posX.align) {\r\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (wrapType == \"wrapNone\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\tif (posX.offset)\r\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\tif (posY.offset)\r\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t}\r\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\r\n\t\tvar blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tvar spPr = xml.element(elem, \"spPr\");\r\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (var n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tvar val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\t// 转换Run字体，包含四种，ascii，eastAsia，ComplexScript，高 ANSI Font\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\t// 字体\r\n\t\tlet fonts = [];\r\n\t\t// ascii字体\r\n\t\tlet ascii = xml.attr(node, \"ascii\");\r\n\t\tlet ascii_theme = values.themeValue(node, \"asciiTheme\");\r\n\t\tfonts.push(ascii, ascii_theme);\r\n\t\t// eastAsia\r\n\t\tlet east_Asia = xml.attr(node, \"eastAsia\");\r\n\t\tlet east_Asia_theme = values.themeValue(node, \"eastAsiaTheme\");\r\n\t\tfonts.push(east_Asia, east_Asia_theme);\r\n\t\t// ComplexScript\r\n\t\tlet complex_script = xml.attr(node, \"cs\");\r\n\t\tlet complex_script_theme = values.themeValue(node, \"cstheme\");\r\n\t\tfonts.push(complex_script, complex_script_theme);\r\n\t\t// 高 ANSI Font\r\n\t\tlet high_ansi = xml.attr(node, \"hAnsi\");\r\n\t\tlet high_ansi_theme = values.themeValue(node, \"hAnsiTheme\");\r\n\t\tfonts.push(high_ansi, high_ansi_theme);\r\n\r\n\t\t// 去除重复字体，合并成一个字体配置\r\n\t\tlet fonts_value = [...new Set(fonts)].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0) {\r\n\t\t\tstyle[\"font-family\"] = fonts_value;\r\n\t\t}\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tvar left = xml.lengthAttr(node, \"left\");\r\n\t\tvar start = xml.lengthAttr(node, \"start\");\r\n\t\tvar right = xml.lengthAttr(node, \"right\");\r\n\t\tvar end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tvar before = xml.lengthAttr(node, \"before\");\r\n\t\tvar after = xml.lengthAttr(node, \"after\");\r\n\t\tvar line = xml.intAttr(node, \"line\", null);\r\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE) {\r\n\t\t\t\tcb(<Element>n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tvar v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tvar val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tvar type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\": break;\r\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\r\n\t\t\tcase \"auto\": return \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\": return \"left\";\r\n\t\t\tcase \"center\": return \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\": return \"right\";\r\n\t\t\tcase \"both\": return \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\": return \"sub\";\r\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\": return \"baseline\";\r\n\t\t\tcase \"top\": return \"top\";\r\n\t\t\tcase \"center\": return \"middle\";\r\n\t\t\tcase \"bottom\": return \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { computePixelToPoint } from \"../javascript\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n    compatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n    math: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n\r\n    // Windows系统默认是96dpi，Apple系统默认是72dpi。pt = 1/72(英寸), px = 1/dpi(英寸)\r\n    // 目前只考虑Windows系统，px = pt * 96 / 72 ;\r\n    Px: { mul: 1 / 15, unit: \"px\" },\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, // 单位：twips，twentieth = 1/20\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: \"\" },\r\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\r\n}\r\n\r\nexport function convertLength(val: string | number, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    // undefined类型\r\n    if (!val) {\r\n        return undefined;\r\n    }\r\n    // number类型\r\n    if (typeof val === 'number') {\r\n        return `${(val * usage.mul).toFixed(2)}${usage.unit}`;\r\n    }\r\n\r\n    // 默认不转换如下单位：px、pt、%\r\n    if (/.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n    // 字符串类型\r\n    return `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"color\":\r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlFunction = \"mmlFunction\",\r\n\tMmlFunctionName = \"mmlFunctionName\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlPreSubSuper = \"mmlPreSubSuper\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tMmlLimit = \"mmlLimit\",\r\n\tMmlLimitLower = \"mmlLimitLower\",\r\n\tMmlMatrix = \"mmlMatrix\",\r\n\tMmlMatrixRow = \"mmlMatrixRow\",\r\n\tMmlBox = \"mmlBox\",\r\n\tMmlBar = \"mmlBar\",\r\n\tMmlGroupChar = \"mmlGroupChar\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    props?: Record<string, any>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    props?: Record<string, any>;\r\n\r\n    className?: string;\r\n    styleName?: string;\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    start: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n    styleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n\r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepLines\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, {XmlParser} from \"../parser/xml-parser\";\r\nimport {Borders, parseBorders} from \"./border\";\r\nimport {Length, convertLength} from \"./common\";\r\nimport {OpenXmlElement} from \"./dom\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface ContentSize {\r\n    width: Length,\r\n    height: Length,\r\n}\r\n\r\nexport interface PageSize extends ContentSize {\r\n    orientation: \"landscape\" | string\r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\"\r\n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\",\r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n    contentSize: ContentSize;\r\n}\r\n\r\nexport interface Section {\r\n    sectProps: SectionProperties,\r\n    elements: OpenXmlElement[],\r\n    is_split: boolean,\r\n    isFirstSection?: boolean;\r\n    isLastSection?: boolean;\r\n    pageIndex?: number;\r\n\telementIndex?: number;\r\n    contentElement?: Element;\r\n    checking_overflow?: boolean,\r\n}\r\n\r\n// 原始尺寸数据，单位：dxa\r\ninterface OriginSize {\r\n    pageSize: {\r\n        width: number,\r\n        height: number,\r\n    },\r\n    pageMargins: {\r\n        top: number;\r\n        right: number;\r\n        bottom: number;\r\n        left: number;\r\n        header: number;\r\n        footer: number;\r\n        gutter: number;\r\n    }\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n    // 原始尺寸，单位：dxa\r\n    let origin = <OriginSize>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                // 记录原始尺寸\r\n                origin.pageSize = {\r\n                    width: xml.intAttr(e, \"w\"),\r\n                    height: xml.intAttr(e, \"h\"),\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                // 记录原始尺寸\r\n                origin.pageMargins = {\r\n                    left: xml.intAttr(e, \"left\"),\r\n                    right: xml.intAttr(e, \"right\"),\r\n                    top: xml.intAttr(e, \"top\"),\r\n                    bottom: xml.intAttr(e, \"bottom\"),\r\n                    header: xml.intAttr(e, \"header\"),\r\n                    footer: xml.intAttr(e, \"footer\"),\r\n                    gutter: xml.intAttr(e, \"gutter\"),\r\n                }\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 根据原始尺寸，计算内容区域的宽高\r\n    let {width, height} = origin.pageSize;\r\n    let {left, right, top, bottom} = origin.pageMargins;\r\n\r\n    section.contentSize = {\r\n        width: convertLength(width - left - right),\r\n        height: convertLength(height - top - bottom),\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}\r\n","import {WordDocument} from './word-document';\r\n\r\nimport {DocumentParser} from './document-parser';\r\n\r\n// 异步渲染\r\nimport {HtmlRenderer} from './html-renderer';\r\n\r\n// 同步渲染\r\nimport {HtmlRendererSync} from \"./html-renderer-sync\";\r\n\r\nexport interface Options {\r\n    className: string;                      //class name/prefix for default and document style classes\r\n    inWrapper: boolean;                     //enables rendering of wrapper around document content\r\n    ignoreWidth: boolean;                   //disables rendering width of page\r\n    ignoreHeight: boolean;                  //disables rendering height of page\r\n    ignoreFonts: boolean;                   //disables fonts rendering\r\n    breakPages: boolean;                    //enables page breaking on page breaks\r\n    ignoreLastRenderedPageBreak: boolean;   //disables page breaking on lastRenderedPageBreak elements\r\n    experimental: boolean;                  //enables experimental features (tab stops calculation)\r\n    trimXmlDeclaration: boolean;            //if true, xml declaration will be removed from xml documents before parsing\r\n    useBase64URL: boolean;                  //if true, images, fonts, etc. will be converted to base 64 URL, otherwise URL.createObjectURL is used\r\n    renderChanges: boolean;                 //enables experimental rendering of document changes (inserions/deletions)\r\n    renderHeaders: boolean;                 //enables headers rendering\r\n    renderFooters: boolean;                 //enables footers rendering\r\n    renderFootnotes: boolean;               //enables footnotes rendering\r\n    renderEndnotes: boolean;                //enables endnotes rendering\r\n    debug: boolean;                         //enables additional logging\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    renderEndnotes: true,\r\n    useBase64URL: false,\r\n    renderChanges: false\r\n}\r\n\r\nexport function parseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRenderer();\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n\r\nexport async function renderSync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = {...defaultOptions, ...userOptions};\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRendererSync();\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import {WordDocument} from './word-document';\r\nimport {\r\n    DomType,\r\n    WmlTable,\r\n    IDomNumbering,\r\n    WmlHyperlink,\r\n    IDomImage,\r\n    OpenXmlElement,\r\n    WmlTableColumn,\r\n    WmlTableCell,\r\n    WmlText,\r\n    WmlSymbol,\r\n    WmlBreak,\r\n    WmlNoteReference\r\n} from './document/dom';\r\nimport {CommonProperties} from './document/common';\r\nimport {Options} from './docx-preview';\r\nimport {DocumentElement} from './document/document';\r\nimport {WmlParagraph} from './document/paragraph';\r\nimport {asArray, escapeClassName, isString, keyBy, mergeDeep} from './utils';\r\nimport {computePixelToPoint, updateTabStop} from './javascript';\r\nimport {FontTablePart} from './font-table/font-table';\r\nimport {FooterHeaderReference, SectionProperties, Section} from './document/section';\r\nimport {WmlRun, RunProperties} from './document/run';\r\nimport {WmlBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle} from './document/style';\r\nimport {WmlBaseNote, WmlFootnote} from './notes/elements';\r\nimport {ThemePart} from './theme/theme-part';\r\nimport {BaseHeaderFooterPart} from './header-footer/parts';\r\nimport {Part} from './common/part';\r\nimport {VmlElement} from './vml/vml';\r\n\r\nconst ns = {\r\n    html: \"http://www.w3.org/1999/xhtml\",\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    mathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n    col: number;\r\n    row: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\ninterface CurrentElement {\r\n    parent: HTMLElement | Element,\r\n}\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRendererSync {\r\n\r\n    className: string = \"docx\";\r\n    rootSelector: string;\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n    currentPart: Part = null;\r\n    wrapper: HTMLElement;\r\n\r\n    // 当前操作的section\r\n    current_section: Section;\r\n    // 当前渲染的元素\r\n    current_element: CurrentElement = {parent: null};\r\n\r\n    tableVerticalMerges: CellVerticalMergeType[] = [];\r\n    currentVerticalMerge: CellVerticalMergeType = null;\r\n    tableCellPositions: CellPos[] = [];\r\n    currentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n    endnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n    defaultTabSize: string;\r\n    // 当前制表位\r\n    currentTabs: any[] = [];\r\n    tabsTimeout: any = 0;\r\n\r\n    /**\r\n     * Object对象 => HTML标签\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param bodyContainer HTML生成容器\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // 主体容器\r\n        this.wrapper = bodyContainer;\r\n        // styleContainer== null，styleContainer = bodyContainer\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n        // HTML生成容器，清空所有HTML元素\r\n        removeAllElements(bodyContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 根据option生成wrapper\r\n        if (this.options.inWrapper) {\r\n            this.wrapper = this.renderWrapper();\r\n            bodyContainer.appendChild(this.wrapper);\r\n        } else {\r\n            this.wrapper = bodyContainer;\r\n        }\r\n        // 主文档--内容\r\n        this.renderSections(document.documentPart.body);\r\n\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n    }\r\n\r\n    // 渲染默认样式\r\n    renderDefaultStyle() {\r\n        let c = this.className;\r\n        let styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n            section.${c}>header { position: absolute; top: 0; z-index: 1; display: flex; align-items: flex-end; }\r\n\t\t\tsection.${c}>article { overflow: hidden; z-index: 1; }\r\n\t\t\tsection.${c}>footer { position: absolute; bottom: 0; z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // 文档CSS主题样式\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    // 计算className，小写，默认前缀：\"docx_\"\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n    }\r\n\r\n    // 处理样式继承\r\n    processStyles(styles: IDomStyle[]) {\r\n        //\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n        // 遍历base_on关系,合并样式\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            let baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                // 深度合并\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n                    if (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n                    } else {\r\n                        style.styles.push({...baseValues, values: {...baseValues.values}});\r\n                    }\r\n                }\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        let styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defaultStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            let subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                let linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n                //TODO temporary disable modificators until test it well\r\n                let selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n                if (style.target != subStyle.target)\r\n                    selector += ` ${subStyle.target}`;\r\n\r\n                if (defaultStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    processNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n        let styleText = \"\";\r\n        let resetCounters = [];\r\n\r\n        for (let num of numberings) {\r\n            let selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            let listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    let text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            } else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n                const counterReset = counter + \" \" + (num.start - 1);\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counterReset\r\n                    });\r\n                }\r\n                // reset all level counters with start value\r\n                resetCounters.push(counterReset);\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            } else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (resetCounters.length > 0) {\r\n            styleText += this.styleToString(this.rootSelector, {\r\n                \"counter-reset\": resetCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            if (key.startsWith('$'))\r\n                continue;\r\n\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        let result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        let mapping = {\r\n            none: \"none\",\r\n            bullet: \"disc\",\r\n            decimal: \"decimal\",\r\n            lowerLetter: \"lower-alpha\",\r\n            upperLetter: \"upper-alpha\",\r\n            lowerRoman: \"lower-roman\",\r\n            upperRoman: \"upper-roman\",\r\n            decimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n            // ordinal: \"\", // 1st, 2nd, 3rd,...\r\n            // ordinalText: \"\", //First, Second, Third, ...\r\n            // cardinalText: \"\", //One,Two Three,...\r\n            // numberInDash: \"\", //-1-,-2-,-3-, ...\r\n            // hex: \"upper-hexadecimal\",\r\n            aiueo: \"katakana\",\r\n            aiueoFullWidth: \"katakana\",\r\n            chineseCounting: \"simp-chinese-informal\",\r\n            chineseCountingThousand: \"simp-chinese-informal\",\r\n            chineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n            chosung: \"hangul-consonant\",\r\n            ideographDigital: \"cjk-ideographic\",\r\n            ideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n            ideographLegalTraditional: \"trad-chinese-formal\",\r\n            ideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n            iroha: \"katakana-iroha\",\r\n            irohaFullWidth: \"katakana-iroha\",\r\n            japaneseCounting: \"japanese-informal\",\r\n            japaneseDigitalTenThousand: \"cjk-decimal\",\r\n            japaneseLegal: \"japanese-formal\",\r\n            thaiNumbers: \"thai\",\r\n            koreanCounting: \"korean-hangul-formal\",\r\n            koreanDigital: \"korean-hangul-formal\",\r\n            koreanDigital2: \"korean-hanja-informal\",\r\n            hebrew1: \"hebrew\",\r\n            hebrew2: \"hebrew\",\r\n            hindiNumbers: \"devanagari\",\r\n            ganada: \"hangul\",\r\n            taiwaneseCounting: \"cjk-ideographic\",\r\n            taiwaneseCountingThousand: \"cjk-ideographic\",\r\n            taiwaneseDigital: \"cjk-decimal\",\r\n        };\r\n\r\n        return mapping[format] ?? format;\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n    //\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n    //\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n    //\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n    //\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n    //\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n    //\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n    //\r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n    //\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n    //\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    // 字体列表CSS样式\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n                    this.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 生成父级容器\r\n    renderWrapper() {\r\n        return createElement(\"div\", {className: `${this.className}-wrapper`});\r\n    }\r\n\r\n    // 复制CSS样式\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input) {\r\n            return output;\r\n        }\r\n        if (output == null) {\r\n            output = {};\r\n        }\r\n        if (attrs == null) {\r\n            attrs = Object.getOwnPropertyNames(input);\r\n        }\r\n\r\n        for (let key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // 递归明确元素parent父级关系\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (let e of element.children) {\r\n                e.parent = element;\r\n                // 判断类型\r\n                if (e.type == DomType.Table) {\r\n                    // 渲染表格\r\n                    this.processTable(e);\r\n                } else {\r\n                    // 递归渲染\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 处理表格style样式\r\n    processTable(table: WmlTable) {\r\n        for (let r of table.children) {\r\n            for (let c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 根据section切分页面\r\n    splitBySection(elements: OpenXmlElement[]): Section[] {\r\n        // 当前操作section，elements数组包含子元素\r\n        let current_section = {sectProps: null, elements: [], is_split: false,};\r\n        // 切分出的所有sections\r\n        let sections = [current_section];\r\n\r\n        for (let elem of elements) {\r\n            // 添加elem进入当前操作section\r\n            current_section.elements.push(elem);\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性，代表分节符\r\n                let sectProps = p.sectionProps;\r\n\r\n                /*\r\n                    检测段落是否默认存在强制分页符\r\n                */\r\n\r\n                // 查找内置默认段落样式\r\n                const default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n                // 段落内置样式之前存在强制分页符\r\n                if (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n                    // 标记当前section已拆分\r\n                    current_section.is_split = true;\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = {sectProps: null, elements: [], is_split: false};\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n\r\n                // 段落部分Break索引\r\n                let pBreakIndex = -1;\r\n                // Run部分Break索引\r\n                let rBreakIndex = -1;\r\n\r\n                // 查询段落中Break索引\r\n                if (p.children) {\r\n                    // 计算段落Break索引\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        // 计算Run Break索引\r\n                        rBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n                            // 分页符、换行符、分栏符\r\n                            if (t.type != DomType.Break) {\r\n                                return false;\r\n                            }\r\n                            // 默认忽略lastRenderedPageBreak，\r\n                            if ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n                                // 判断前一个p段落，\r\n                                // 如果含有分页符、分节符，那它们一定位于上一个section，\r\n                                // 如果前一个段落是普通段落，则代表文字过多超过一页，需要自动分页\r\n                                return current_section.elements.length > 1 || !this.options.ignoreLastRenderedPageBreak;\r\n                            }\r\n                            // 分页符\r\n                            if ((t as WmlBreak).break === \"page\") {\r\n                                return true;\r\n                            }\r\n                        });\r\n                        rBreakIndex = rBreakIndex ?? -1\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n                // 段落中存在节属性sectProps\r\n                if (sectProps) {\r\n                    // 标记当前section未拆分，需要计算拆分\r\n                    current_section.is_split = false;\r\n                }\r\n                // 段落Break索引\r\n                if (pBreakIndex != -1) {\r\n                    // 标记当前section 已拆分\r\n                    current_section.is_split = true;\r\n                }\r\n                // 段落中存在节属性sectProps/段落Break索引\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = {sectProps: null, elements: [], is_split: false};\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n                // 根据段落Break索引，拆分Run部分\r\n                if (pBreakIndex != -1) {\r\n                    // 即将拆分的Run部分\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    // 是否需要拆分Run\r\n                    let is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || is_split) {\r\n                        // 原始的Run\r\n                        let origin_run = p.children;\r\n                        // 切出Break索引后面的Run，创建新段落\r\n                        let new_paragraph = {...p, children: origin_run.slice(pBreakIndex)};\r\n                        // 保存Break索引前面的Run\r\n                        p.children = origin_run.slice(0, pBreakIndex);\r\n                        // 添加新段落\r\n                        current_section.elements.push(new_paragraph);\r\n\r\n                        if (is_split) {\r\n                            // Run下面原始的元素\r\n                            let origin_elements = breakRun.children;\r\n                            // 切出Run Break索引前面的元素，创建新Run\r\n                            let newRun = {...breakRun, children: origin_elements.slice(0, rBreakIndex)};\r\n                            // 将新Run放入上一个section的段落\r\n                            p.children.push(newRun);\r\n                            // 切出Run Break索引后面的元素\r\n                            breakRun.children = origin_elements.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // elem元素是表格，需要渲染过程中拆分section，标记:is_split\r\n            if (elem.type === DomType.Table) {\r\n                current_section.is_split = false;\r\n            }\r\n\r\n        }\r\n\r\n        // 一个节可能分好几个页，但是节属性section_props存在当前节中最后一段对应的 paragraph 元素的子元素。即：[null,null,null,setPr];\r\n        let currentSectProps = null;\r\n        // 倒序给每一页填充section_props，方便后期页面渲染\r\n        for (let i = sections.length - 1; i >= 0; i--) {\r\n            if (sections[i].sectProps == null) {\r\n                sections[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = sections[i].sectProps\r\n            }\r\n        }\r\n        return sections;\r\n    }\r\n\r\n    // 生成所有的Page Section\r\n    renderSections(document: DocumentElement) {\r\n        // 生成页面parent父级关系\r\n        this.processElement(document);\r\n        // 根据options.breakPages，选择是否分页\r\n        let sections: Section[];\r\n        if (this.options.breakPages) {\r\n            // 根据section切分页面\r\n            sections = this.splitBySection(document.children);\r\n        } else {\r\n            // 不分页则，只有一个section\r\n            sections = [{sectProps: document.props, elements: document.children, is_split: false}];\r\n        }\r\n        // 前一个节属性，判断分节符的第一个section\r\n        let prevProps = null;\r\n        // 遍历生成每一个section\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n            let section: Section = sections[i];\r\n\r\n            let {sectProps} = section;\r\n            // section属性不存在，则使用文档级别props;\r\n            section.sectProps = sectProps ?? document.props;\r\n            // 是否第一个section\r\n            section.isFirstSection = prevProps != sectProps;\r\n            // 是否最后一个section\r\n            section.isLastSection = i === (l - 1);\r\n            // 页码，判断奇偶页码\r\n            section.pageIndex = i;\r\n            // 溢出检测默认不开启\r\n            section.checking_overflow = false;\r\n            // 将上述数据存储在current_section中\r\n            this.current_section = section;\r\n            // 渲染单个section\r\n            this.renderSection();\r\n            // 存储前一个节属性\r\n            prevProps = sectProps;\r\n        }\r\n    }\r\n\r\n    // 生成单个section,如果发现超出一页，递归拆分出下一个section\r\n    renderSection() {\r\n        // 当前操作的section\r\n        let section: Section = this.current_section;\r\n        // 解构section中的属性\r\n        let {sectProps, isFirstSection, isLastSection, pageIndex} = section;\r\n        // 根据sectProps，创建section\r\n        const sectionElement = this.createSection(this.className, sectProps);\r\n        // 给section添加style样式\r\n        this.renderStyleValues(this.document.documentPart.body.cssStyle, sectionElement);\r\n        // 渲染section页眉\r\n        if (this.options.renderHeaders) {\r\n            this.renderHeaderFooterRef(sectProps.headerRefs, sectProps, pageIndex, isFirstSection, sectionElement);\r\n        }\r\n        // 渲染section脚注\r\n        if (this.options.renderFootnotes) {\r\n            this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n        }\r\n        // 渲染section尾注，判断最后一页\r\n        if (this.options.renderEndnotes && isLastSection) {\r\n            this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n        }\r\n        // 渲染section页脚\r\n        if (this.options.renderFooters) {\r\n            this.renderHeaderFooterRef(sectProps.footerRefs, sectProps, pageIndex, isFirstSection, sectionElement);\r\n        }\r\n        // section内容Article元素\r\n        let contentElement = createElement(\"article\");\r\n        // 根据options.breakPages，设置article的高度\r\n        if (this.options.breakPages) {\r\n            // 切分页面，高度固定\r\n            contentElement.style.height = sectProps.contentSize.height;\r\n        } else {\r\n            // 不分页则，拥有最小高度\r\n            contentElement.style.minHeight = sectProps.contentSize.height;\r\n        }\r\n        // 缓存当前操作的Article元素\r\n        this.current_section.contentElement = contentElement;\r\n        // 将Article插入section\r\n        sectionElement.appendChild(contentElement);\r\n        // 标识--开启溢出计算\r\n        this.current_section.checking_overflow = true;\r\n        // 生成article内容\r\n        this.renderElements(section.elements, contentElement);\r\n        // 标识--结束溢出计算\r\n        this.current_section.checking_overflow = false;\r\n    }\r\n\r\n    // 创建Page Section\r\n    createSection(className: string, props: SectionProperties) {\r\n        let elem = createElement(\"section\", {className});\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = props.pageMargins.left;\r\n                elem.style.paddingRight = props.pageMargins.right;\r\n                elem.style.paddingTop = props.pageMargins.top;\r\n                elem.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth) {\r\n                    elem.style.width = props.pageSize.width;\r\n                }\r\n                if (!this.options.ignoreHeight) {\r\n                    elem.style.minHeight = props.pageSize.height;\r\n                }\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n        // 插入生成的section\r\n        this.wrapper.appendChild(elem);\r\n\r\n        return elem;\r\n    }\r\n\r\n    // TODO 分页不准确，页脚页码混乱\r\n    // 渲染页眉/页脚的Ref\r\n    renderHeaderFooterRef(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, parent: HTMLElement) {\r\n        if (!refs) return;\r\n        // 查找奇数偶数的ref指向\r\n        let ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        // 查找ref对应的part部分\r\n        let part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n            this.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n            // 根据页眉页脚，设置CSS\r\n            switch (part.rootElement.type) {\r\n                case DomType.Header:\r\n                    part.rootElement.cssStyle = {\r\n                        left: props.pageMargins?.left,\r\n                        width: props.contentSize?.width,\r\n                        height: props.pageMargins?.top,\r\n                    }\r\n                    break;\r\n                case DomType.Footer:\r\n                    part.rootElement.cssStyle = {\r\n                        left: props.pageMargins?.left,\r\n                        width: props.contentSize?.width,\r\n                        height: props.pageMargins?.bottom,\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.warn('set header/footer style error', part.rootElement.type);\r\n                    break;\r\n            }\r\n\r\n            this.renderElements([part.rootElement], parent);\r\n            this.currentPart = null;\r\n        }\r\n    }\r\n\r\n    // 渲染脚注/尾注\r\n    renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n        let notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            let oList = createElement(\"ol\", null);\r\n            this.renderElements(notes, oList);\r\n            parent.appendChild(oList);\r\n        }\r\n    }\r\n\r\n    // 根据XML对象渲染出多元素，\r\n    renderElements(elems: OpenXmlElement[], parent: HTMLElement | Element) {\r\n\r\n        for (let i = 0; i < elems.length; i++) {\r\n            this.renderElement(elems[i], parent);\r\n            // 缓存当前操作元素的索引值\r\n            this.current_section.elementIndex = i;\r\n        }\r\n\r\n    }\r\n\r\n    // 根据XML对象渲染单个元素\r\n    renderElement(elem: OpenXmlElement, parent?: HTMLElement | Element): Node | Node[] {\r\n        let oNode: Node | Node[];\r\n\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                oNode = this.renderParagraph(elem as WmlParagraph, parent);\r\n                break;\r\n            case DomType.BookmarkStart:\r\n                oNode = this.renderBookmarkStart(elem as WmlBookmarkStart, parent);\r\n                break;\r\n            case DomType.BookmarkEnd:\r\n                oNode = null; //ignore bookmark end\r\n                break;\r\n            case DomType.Run:\r\n                oNode = this.renderRun(elem as WmlRun, parent);\r\n                break;\r\n            case DomType.Table:\r\n                oNode = this.renderTable(elem, parent);\r\n                break;\r\n            case DomType.Row:\r\n                oNode = this.renderTableRow(elem, parent);\r\n                break;\r\n            case DomType.Cell:\r\n                oNode = this.renderTableCell(elem, parent);\r\n                break;\r\n            case DomType.Hyperlink:\r\n                oNode = this.renderHyperlink(elem, parent);\r\n                break;\r\n            case DomType.Drawing:\r\n                oNode = this.renderDrawing(elem, parent);\r\n                break;\r\n            case DomType.Image:\r\n                oNode = this.renderImage(elem as IDomImage, parent);\r\n                break;\r\n            case DomType.Text:\r\n                oNode = this.renderText(elem as WmlText, parent);\r\n                break;\r\n            case DomType.DeletedText:\r\n                oNode = this.renderDeletedText(elem as WmlText, parent);\r\n                break;\r\n            case DomType.Tab:\r\n                oNode = this.renderTab(elem, parent);\r\n                break;\r\n            case DomType.Symbol:\r\n                oNode = this.renderSymbol(elem as WmlSymbol, parent);\r\n                break;\r\n            case DomType.Break:\r\n                oNode = this.renderBreak(elem as WmlBreak, parent);\r\n                break;\r\n            case DomType.Footer:\r\n                oNode = this.renderHeaderFooter(elem, \"footer\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.Header:\r\n                oNode = this.renderHeaderFooter(elem, \"header\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.Footnote:\r\n            case DomType.Endnote:\r\n                oNode = this.renderContainer(elem, \"li\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.FootnoteReference:\r\n                oNode = this.renderFootnoteReference(elem as WmlNoteReference);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.EndnoteReference:\r\n                oNode = this.renderEndnoteReference(elem as WmlNoteReference);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.NoBreakHyphen:\r\n                oNode = createElement(\"wbr\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.VmlPicture:\r\n                oNode = this.renderVmlPicture(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.VmlElement:\r\n                oNode = this.renderVmlElement(elem as VmlElement);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlMath:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"math\", {xmlns: ns.mathML});\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlMathParagraph:\r\n                oNode = this.renderContainer(elem, \"span\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlFraction:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlBase:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, elem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlNumerator:\r\n            case DomType.MmlDenominator:\r\n            case DomType.MmlFunction:\r\n            case DomType.MmlLimit:\r\n            case DomType.MmlBox:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlGroupChar:\r\n                oNode = this.renderMmlGroupChar(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlLimitLower:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlMatrix:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlMatrixRow:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlRadical:\r\n                oNode = this.renderMmlRadical(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlSuperscript:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlSubscript:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlDegree:\r\n            case DomType.MmlSuperArgument:\r\n            case DomType.MmlSubArgument:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlFunctionName:\r\n                oNode = this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlDelimiter:\r\n                oNode = this.renderMmlDelimiter(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlRun:\r\n                oNode = this.renderMmlRun(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlNary:\r\n                oNode = this.renderMmlNary(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlPreSubSuper:\r\n                oNode = this.renderMmlPreSubSuper(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlBar:\r\n                oNode = this.renderMmlBar(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.MmlEquationArray:\r\n                oNode = this.renderMllList(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.Inserted:\r\n                oNode = this.renderInserted(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n            case DomType.Deleted:\r\n                oNode = this.renderDeleted(elem);\r\n                if (parent) {\r\n                    this.appendChildren(parent, oNode);\r\n                }\r\n                break;\r\n        }\r\n\r\n        return oNode;\r\n    }\r\n\r\n    // 判断是否存在分页元素\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        // 分页符、换行符、分栏符\r\n        if (elem.type != DomType.Break) {\r\n            return false;\r\n        }\r\n        // 默认以lastRenderedPageBreak作为分页依据\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n        }\r\n        // 分页符\r\n        if ((elem as WmlBreak).break === \"page\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // 根据XML对象渲染子元素，并插入父级元素\r\n    renderChildren(elem: OpenXmlElement, parent: Element) {\r\n        this.renderElements(elem.children, parent);\r\n    }\r\n\r\n    // 插入子元素，针对后代元素进行溢出检测\r\n    appendChildren(parent: HTMLElement | Element, children: ChildrenType) {\r\n        // TODO 单个child执行溢出检测，children数组应该依次进行溢出检测\r\n        appendChildren(parent, children);\r\n        let {is_split, contentElement, pageIndex, elementIndex, checking_overflow, elements} = this.current_section;\r\n        // 针对一级元素进行溢出检测\r\n        if (is_split === false && checking_overflow) {\r\n            let is_overflow = checkOverflow(contentElement);\r\n            if (is_overflow) {\r\n                console.log(elementIndex, children, is_overflow);\r\n                // 删除DOM中导致溢出的元素\r\n                removeElements(children, parent);\r\n                // 删除数组前面已经渲染的元素，保留后续为渲染元素\r\n                elements.splice(0, elementIndex);\r\n                // 页码自增+1\r\n                pageIndex += 1;\r\n                // 关闭溢出检测，方便后续页脚渲染\r\n                checking_overflow = false;\r\n                // 覆盖current_section的属性\r\n                this.current_section = {...this.current_section, pageIndex, checking_overflow, elements};\r\n                // 重启新一个section的渲染\r\n                this.renderSection();\r\n            }\r\n        }\r\n    }\r\n\r\n    renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n        let parent = createElement(tagName, props);\r\n        this.renderChildren(elem, parent);\r\n        return parent;\r\n    }\r\n\r\n    renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n        let parent = createElementNS(ns, tagName as any, props);\r\n        this.renderChildren(elem, parent);\r\n        return parent;\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph, parent?: HTMLElement | Element) {\r\n        let oParagraph = createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n        elem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, oParagraph);\r\n        this.renderStyleValues(elem.cssStyle, oParagraph);\r\n        this.renderCommonProperties(oParagraph.style, elem);\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oParagraph);\r\n        }\r\n\r\n        this.renderChildren(elem, oParagraph);\r\n\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            oParagraph.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return oParagraph;\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink, parent?: HTMLElement | Element) {\r\n        let oAnchor = createElement(\"a\");\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oAnchor);\r\n        }\r\n\r\n        this.renderChildren(elem, oAnchor);\r\n        this.renderStyleValues(elem.cssStyle, oAnchor);\r\n\r\n        if (elem.href) {\r\n            oAnchor.href = elem.href;\r\n        } else if (elem.id) {\r\n            const rel = this.document.documentPart.rels\r\n                .find(it => it.id == elem.id && it.targetMode === \"External\");\r\n            oAnchor.href = rel?.target;\r\n        }\r\n\r\n        return oAnchor;\r\n    }\r\n\r\n    renderDrawing(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n        let oDrawing = createElement(\"div\");\r\n\r\n        oDrawing.style.display = \"inline-block\";\r\n        oDrawing.style.position = \"relative\";\r\n        oDrawing.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, oDrawing);\r\n        this.renderStyleValues(elem.cssStyle, oDrawing);\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oDrawing);\r\n        }\r\n\r\n        return oDrawing;\r\n    }\r\n\r\n    // 渲染图片，默认转换blob--异步\r\n    renderImage(elem: IDomImage, parent?: HTMLElement | Element) {\r\n        let oImage = createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, oImage);\r\n\r\n        if (this.document) {\r\n            this.document\r\n                .loadDocumentImage(elem.src, this.currentPart)\r\n                .then(src => {\r\n                    oImage.src = src;\r\n                });\r\n        }\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oImage);\r\n        }\r\n\r\n        return oImage;\r\n    }\r\n\r\n    renderText(elem: WmlText, parent?: HTMLElement | Element) {\r\n        let oText = document.createTextNode(elem.text);\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oText);\r\n        }\r\n        return oText;\r\n    }\r\n\r\n    renderDeletedText(elem: WmlText, parent?: HTMLElement | Element) {\r\n        let oDeletedText: Text;\r\n        if (this.options.renderEndnotes) {\r\n            oDeletedText = document.createTextNode(elem.text);\r\n            // 插入子元素,可针对后代元素进行溢出检测\r\n            if (parent) {\r\n                this.appendChildren(parent, oDeletedText);\r\n            }\r\n        } else {\r\n            oDeletedText = null;\r\n        }\r\n        return oDeletedText;\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak, parent?: HTMLElement | Element) {\r\n        if (elem.break == \"textWrapping\") {\r\n            let oBr = createElement(\"br\");\r\n            // 插入子元素,可针对后代元素进行溢出检测\r\n            if (parent) {\r\n                this.appendChildren(parent, oBr);\r\n            }\r\n            return oBr;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderInserted(elem: OpenXmlElement) {\r\n        if (this.options.renderChanges) {\r\n            return this.renderContainer(elem, \"ins\");\r\n        }\r\n\r\n        return this.renderContainer(elem, \"span\");\r\n    }\r\n\r\n    renderDeleted(elem: OpenXmlElement) {\r\n        if (this.options.renderChanges) {\r\n            return this.renderContainer(elem, \"del\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol, parent?: HTMLElement | Element) {\r\n        let oSpan = createElement(\"span\");\r\n        oSpan.style.fontFamily = elem.font;\r\n        oSpan.innerHTML = `&#x${elem.char};`\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oSpan);\r\n        }\r\n\r\n        return oSpan;\r\n    }\r\n\r\n    // 渲染页眉页脚\r\n    renderHeaderFooter(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap,) {\r\n        let oElement: HTMLElement = createElement(tagName);\r\n        // 渲染子元素\r\n        this.renderChildren(elem, oElement);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, oElement);\r\n\r\n        return oElement;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        let oSup = createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        oSup.textContent = `${this.currentFootnoteIds.length}`;\r\n        return oSup;\r\n    }\r\n\r\n    renderEndnoteReference(elem: WmlNoteReference) {\r\n        let oSup = createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        oSup.textContent = `${this.currentEndnoteIds.length}`;\r\n        return oSup;\r\n    }\r\n\r\n    // 渲染制表符\r\n    renderTab(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n        let tabSpan = createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n            tabSpan.className = this.tabStopClass();\r\n            let stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n            this.currentTabs.push({stops, span: tabSpan});\r\n        }\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, tabSpan);\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart, parent?: HTMLElement | Element): HTMLElement {\r\n        let oSpan = createElement(\"span\");\r\n        oSpan.id = elem.name;\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oSpan);\r\n        }\r\n\r\n        return oSpan;\r\n    }\r\n\r\n    renderRun(elem: WmlRun, parent?: HTMLElement | Element) {\r\n        if (elem.fieldRun) {\r\n            return null;\r\n        }\r\n\r\n        const oSpan = createElement(\"span\");\r\n\r\n        if (elem.id) {\r\n            oSpan.id = elem.id;\r\n        }\r\n\r\n        this.renderClass(elem, oSpan);\r\n        this.renderStyleValues(elem.cssStyle, oSpan);\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oSpan);\r\n        }\r\n\r\n        if (elem.verticalAlign) {\r\n            const wrapper = createElement(elem.verticalAlign as any);\r\n            this.renderChildren(elem, wrapper);\r\n            this.appendChildren(oSpan, wrapper);\r\n        } else {\r\n            this.renderChildren(elem, oSpan);\r\n        }\r\n        return oSpan;\r\n    }\r\n\r\n    renderTable(elem: WmlTable, parent?: HTMLElement | Element) {\r\n        let oTable = createElement(\"table\");\r\n\r\n        this.tableCellPositions.push(this.currentCellPosition);\r\n        this.tableVerticalMerges.push(this.currentVerticalMerge);\r\n        this.currentVerticalMerge = {};\r\n        this.currentCellPosition = {col: 0, row: 0};\r\n\r\n        this.renderClass(elem, oTable);\r\n        this.renderStyleValues(elem.cssStyle, oTable);\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oTable);\r\n        }\r\n\r\n        // 渲染表格column列\r\n        if (elem.columns) {\r\n            let oColumns = this.renderTableColumns(elem.columns, oTable);\r\n        }\r\n\r\n        this.renderChildren(elem, oTable);\r\n\r\n        this.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n        this.currentCellPosition = this.tableCellPositions.pop();\r\n        return oTable;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[], parent?: HTMLElement | Element) {\r\n        let oColGroup = createElement(\"colgroup\");\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oColGroup);\r\n        }\r\n\r\n        for (let col of columns) {\r\n            let oCol = createElement(\"col\");\r\n\r\n            if (col.width) {\r\n                oCol.style.width = col.width;\r\n            }\r\n            this.appendChildren(oColGroup, oCol);\r\n        }\r\n\r\n        return oColGroup;\r\n    }\r\n\r\n    renderTableRow(elem: OpenXmlElement, parent?: HTMLElement | Element) {\r\n        let oTableRow = createElement(\"tr\");\r\n\r\n        this.currentCellPosition.col = 0;\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oTableRow);\r\n        }\r\n\r\n        this.renderClass(elem, oTableRow);\r\n        this.renderChildren(elem, oTableRow);\r\n        this.renderStyleValues(elem.cssStyle, oTableRow);\r\n\r\n        this.currentCellPosition.row++;\r\n\r\n        return oTableRow;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell, parent?: HTMLElement | Element) {\r\n        let oTableCell = createElement(\"td\");\r\n\r\n        const key = this.currentCellPosition.col;\r\n\r\n        if (elem.verticalMerge) {\r\n            if (elem.verticalMerge == \"restart\") {\r\n                this.currentVerticalMerge[key] = oTableCell;\r\n                oTableCell.rowSpan = 1;\r\n            } else if (this.currentVerticalMerge[key]) {\r\n                this.currentVerticalMerge[key].rowSpan += 1;\r\n                oTableCell.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.currentVerticalMerge[key] = null;\r\n        }\r\n\r\n        // 插入子元素,可针对后代元素进行溢出检测\r\n        if (parent) {\r\n            this.appendChildren(parent, oTableCell);\r\n        }\r\n\r\n        this.renderClass(elem, oTableCell);\r\n        this.renderChildren(elem, oTableCell);\r\n        this.renderStyleValues(elem.cssStyle, oTableCell);\r\n\r\n        if (elem.span)\r\n            oTableCell.colSpan = elem.span;\r\n\r\n        this.currentCellPosition.col += oTableCell.colSpan;\r\n\r\n        return oTableCell;\r\n    }\r\n\r\n    renderVmlPicture(elem: OpenXmlElement) {\r\n        let oPictureContainer = createElement(\"div\");\r\n        this.renderChildren(elem, oPictureContainer);\r\n        return oPictureContainer;\r\n    }\r\n\r\n    renderVmlElement(elem: VmlElement): SVGElement {\r\n        let oSvg = createSvgElement(\"svg\");\r\n\r\n        oSvg.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n        const oChildren = this.renderVmlChildElement(elem);\r\n\r\n        if (elem.imageHref?.id) {\r\n            this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n                .then(x => oChildren.setAttribute(\"href\", x));\r\n        }\r\n\r\n        appendChildren(oSvg, oChildren);\r\n\r\n        requestAnimationFrame(() => {\r\n            const bb = (oSvg.firstElementChild as any).getBBox();\r\n\r\n            oSvg.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n            oSvg.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n        });\r\n\r\n        return oSvg;\r\n    }\r\n\r\n    renderVmlChildElement(elem: VmlElement) {\r\n        const oSvgElement = createSvgElement(elem.tagName as any);\r\n        // set attributes\r\n        Object.entries(elem.attrs).forEach(([k, v]) => oSvgElement.setAttribute(k, v));\r\n\r\n        for (let child of elem.children) {\r\n            if (child.type == DomType.VmlElement) {\r\n                let oChild = this.renderVmlChildElement(child as VmlElement);\r\n                appendChildren(oSvgElement, oChild);\r\n            } else {\r\n                let oChild = this.renderElement(child as any);\r\n                appendChildren(oSvgElement, oChild);\r\n            }\r\n        }\r\n\r\n        return oSvgElement;\r\n    }\r\n\r\n    renderMmlRadical(elem: OpenXmlElement): HTMLElement | Element {\r\n        const base = elem.children.find(el => el.type == DomType.MmlBase);\r\n        let oParent: HTMLElement | Element;\r\n        if (elem.props?.hideDegree) {\r\n            oParent = createElementNS(ns.mathML, \"msqrt\", null);\r\n            this.renderElements([base], oParent);\r\n            return oParent;\r\n        }\r\n\r\n        const degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n        oParent = createElementNS(ns.mathML, \"mroot\", null);\r\n        this.renderElements([base, degree], oParent);\r\n        return oParent;\r\n    }\r\n\r\n    renderMmlDelimiter(elem: OpenXmlElement): MathMLElement {\r\n        let oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n        // 开始Char\r\n        let oBegin = createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']);\r\n        appendChildren(oMrow, oBegin);\r\n        // 子元素\r\n        this.renderElements(elem.children, oMrow);\r\n        // 结束char\r\n        let oEnd = createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']);\r\n        appendChildren(oMrow, oEnd);\r\n\r\n        return oMrow;\r\n    }\r\n\r\n    renderMmlNary(elem: OpenXmlElement): MathMLElement {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\r\n        const charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n        if (supElem || subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n        } else if (supElem) {\r\n            children.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n        } else if (subElem) {\r\n            children.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n        } else {\r\n            children.push(charElem);\r\n        }\r\n\r\n        let oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n\r\n        appendChildren(oMrow, children);\r\n\r\n        this.renderElements(grouped[DomType.MmlBase].children, oMrow);\r\n\r\n        return oMrow;\r\n    }\r\n\r\n    renderMmlPreSubSuper(elem: OpenXmlElement) {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n        const stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n        children.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n\r\n        let oMrow = createElementNS(ns.mathML, \"mrow\", null);\r\n\r\n        appendChildren(oMrow, children);\r\n\r\n        this.renderElements(grouped[DomType.MmlBase].children, oMrow);\r\n\r\n        return oMrow;\r\n    }\r\n\r\n    renderMmlGroupChar(elem: OpenXmlElement) {\r\n        const tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n        const oGroupChar = this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n        if (elem.props.char) {\r\n            let oMo = createElementNS(ns.mathML, \"mo\", null, [elem.props.char])\r\n            appendChildren(oGroupChar, oMo);\r\n        }\r\n\r\n        return oGroupChar;\r\n    }\r\n\r\n    renderMmlBar(elem: OpenXmlElement) {\r\n        const oMrow = this.renderContainerNS(elem, ns.mathML, \"mrow\") as MathMLElement;\r\n\r\n        switch (elem.props.position) {\r\n            case \"top\":\r\n                oMrow.style.textDecoration = \"overline\";\r\n                break\r\n            case \"bottom\":\r\n                oMrow.style.textDecoration = \"underline\";\r\n                break\r\n        }\r\n\r\n        return oMrow;\r\n    }\r\n\r\n    renderMmlRun(elem: OpenXmlElement) {\r\n        const oMs = createElementNS(ns.mathML, \"ms\") as HTMLElement;\r\n\r\n        this.renderClass(elem, oMs);\r\n        this.renderStyleValues(elem.cssStyle, oMs);\r\n        this.renderChildren(elem, oMs);\r\n\r\n        return oMs;\r\n    }\r\n\r\n    renderMllList(elem: OpenXmlElement) {\r\n        const oMtable = createElementNS(ns.mathML, \"mtable\") as HTMLElement;\r\n        // 添加class类\r\n        this.renderClass(elem, oMtable);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, oMtable);\r\n\r\n        for (let child of elem.children) {\r\n\r\n            let oChild = this.renderElement(child) as Element;\r\n\r\n            let oMtd = createElementNS(ns.mathML, \"mtd\", null, [oChild]);\r\n\r\n            let oMtr = createElementNS(ns.mathML, \"mtr\", null, [oMtd]);\r\n\r\n            appendChildren(oMtable, oMtr);\r\n        }\r\n\r\n        return oMtable;\r\n    }\r\n\r\n    // 设置元素style样式\r\n    renderStyleValues(style: Record<string, string>, output: HTMLElement) {\r\n        for (let k in style) {\r\n            if (k.startsWith(\"$\")) {\r\n                output.setAttribute(k.slice(1), style[k]);\r\n            } else {\r\n                output.style[k] = style[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加class类名\r\n    renderClass(input: OpenXmlElement, output: HTMLElement | Element) {\r\n        if (input.className) {\r\n            output.className = input.className;\r\n        }\r\n\r\n        if (input.styleName) {\r\n            output.classList.add(this.processStyleName(input.styleName));\r\n        }\r\n    }\r\n\r\n    // 查找内置默认style样式\r\n    findStyle(styleName: string) {\r\n        return styleName && this.styleMap?.[styleName];\r\n    }\r\n\r\n    tabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n    }\r\n\r\n    // 刷新tab制表符\r\n    refreshTabStops() {\r\n        if (!this.options.experimental) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this.tabsTimeout);\r\n\r\n        this.tabsTimeout = setTimeout(() => {\r\n            const pixelToPoint = computePixelToPoint();\r\n\r\n            for (let tab of this.currentTabs) {\r\n                updateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n *  操作DOM元素的函数方法\r\n *\r\n */\r\n\r\n// 元素类型\r\ntype ChildrenType = Node[] | Node | Element[] | Element;\r\n\r\n// 根据标签名tagName创建元素\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(tagName: T, props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>): HTMLElementTagNameMap[T] {\r\n    return createElementNS(null, tagName, props);\r\n}\r\n\r\n// 根据标签名tagName创建svg元素\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(tagName: T, props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>): SVGElementTagNameMap[T] {\r\n    return createElementNS(ns.svg, tagName, props);\r\n}\r\n\r\n// 根据标签名tagName创建带命名空间的元素\r\nfunction createElementNS<T extends keyof MathMLElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): MathMLElementTagNameMap[T];\r\nfunction createElementNS<T extends keyof SVGElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): SVGElementTagNameMap[T];\r\nfunction createElementNS<T extends keyof HTMLElementTagNameMap>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): HTMLElementTagNameMap[T];\r\nfunction createElementNS<T>(ns: string, tagName: T, props?: Partial<Record<any, any>>, children?: ChildrenType): Element | SVGElement | MathMLElement {\r\n    let oParent: Element | SVGElement | MathMLElement;\r\n    switch (ns) {\r\n        case \"http://www.w3.org/1998/Math/MathML\":\r\n            oParent = document.createElementNS(ns, tagName as keyof MathMLElementTagNameMap);\r\n            break;\r\n        case \"http://www.w3.org/2000/svg\":\r\n            oParent = document.createElementNS(ns, tagName as keyof SVGElementTagNameMap);\r\n            break;\r\n        case \"http://www.w3.org/1999/xhtml\":\r\n            oParent = document.createElement(tagName as keyof HTMLElementTagNameMap);\r\n            break;\r\n        default:\r\n            oParent = document.createElement(tagName as keyof HTMLElementTagNameMap);\r\n    }\r\n\r\n    if (props) {\r\n        Object.assign(oParent, props);\r\n    }\r\n\r\n    if (children) {\r\n        appendChildren(oParent, children);\r\n    }\r\n\r\n    return oParent;\r\n}\r\n\r\n// 清空所有子元素\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: Element, children: ChildrenType): void {\r\n    if (Array.isArray(children)) {\r\n        parent.append(...children);\r\n    } else if (children) {\r\n        if (isString(children)) {\r\n            parent.append(children);\r\n        } else {\r\n            parent.appendChild(children);\r\n        }\r\n    }\r\n}\r\n\r\n// 判断文本区是否溢出\r\nfunction checkOverflow(el: Element) {\r\n    //先让溢出效果为 hidden 这样才可以比较 clientHeight和scrollHeight\r\n    return el.clientWidth < el.scrollWidth || el.clientHeight < el.scrollHeight;\r\n}\r\n\r\n// 删除单个或者多个子元素\r\nfunction removeElements(target: Node[] | Node, parent: HTMLElement | Element): void;\r\nfunction removeElements(target: Element[] | Element): void;\r\nfunction removeElements(target: ChildrenType, parent?: HTMLElement | Element): void {\r\n    if (Array.isArray(target)) {\r\n        target.forEach((elem) => {\r\n            if (elem instanceof Element) {\r\n                elem.remove()\r\n            } else {\r\n                if (parent) {\r\n                    parent.removeChild(elem)\r\n                }\r\n            }\r\n        })\r\n    } else {\r\n        if (target instanceof Element) {\r\n            target.remove();\r\n        } else {\r\n            if (target) {\r\n                parent.removeChild(target);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", {innerHTML: cssText});\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    let parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}\r\n","import {WordDocument} from './word-document';\r\nimport {\r\n\tDomType,\r\n\tWmlTable,\r\n\tIDomNumbering,\r\n\tWmlHyperlink,\r\n\tIDomImage,\r\n\tOpenXmlElement,\r\n\tWmlTableColumn,\r\n\tWmlTableCell,\r\n\tWmlText,\r\n\tWmlSymbol,\r\n\tWmlBreak,\r\n\tWmlNoteReference\r\n} from './document/dom';\r\nimport {CommonProperties} from './document/common';\r\nimport {Options} from './docx-preview';\r\nimport {DocumentElement} from './document/document';\r\nimport {WmlParagraph} from './document/paragraph';\r\nimport {asArray, escapeClassName, isString, keyBy, mergeDeep} from './utils';\r\nimport {computePixelToPoint, updateTabStop} from './javascript';\r\nimport {FontTablePart} from './font-table/font-table';\r\nimport {FooterHeaderReference, SectionProperties, Section} from './document/section';\r\nimport {WmlRun, RunProperties} from './document/run';\r\nimport {WmlBookmarkStart} from './document/bookmarks';\r\nimport {IDomStyle} from './document/style';\r\nimport {WmlBaseNote, WmlFootnote} from './notes/elements';\r\nimport {ThemePart} from './theme/theme-part';\r\nimport {BaseHeaderFooterPart} from './header-footer/parts';\r\nimport {Part} from './common/part';\r\nimport {VmlElement} from './vml/vml';\r\n\r\nconst ns = {\r\n\tsvg: \"http://www.w3.org/2000/svg\",\r\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n\tcol: number;\r\n\trow: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRenderer {\r\n\r\n\tclassName: string = \"docx\";\r\n\trootSelector: string;\r\n\tdocument: WordDocument;\r\n\toptions: Options;\r\n\tstyleMap: Record<string, IDomStyle> = {};\r\n\tcurrentPart: Part = null;\r\n\r\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\r\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\r\n\ttableCellPositions: CellPos[] = [];\r\n\tcurrentCellPosition: CellPos = null;\r\n\r\n\tfootnoteMap: Record<string, WmlFootnote> = {};\r\n\tendnoteMap: Record<string, WmlFootnote> = {};\r\n\tcurrentFootnoteIds: string[];\r\n\tcurrentEndnoteIds: string[] = [];\r\n\tusedHederFooterParts: any[] = [];\r\n\r\n\tdefaultTabSize: string;\r\n\t// 当前制表位\r\n\tcurrentTabs: any[] = [];\r\n\ttabsTimeout: any = 0;\r\n\t// 创建元素函数\r\n\tcreateElement = createElement;\r\n\r\n\t/**\r\n\t * Object对象 => HTML标签\r\n\t *\r\n\t * @param document word文档Object对象\r\n\t * @param bodyContainer HTML生成容器\r\n\t * @param styleContainer CSS样式生成容器\r\n\t * @param options 渲染配置选项\r\n\t */\r\n\r\n\trender(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n\t\tthis.document = document;\r\n\t\tthis.options = options;\r\n\t\t// class类前缀\r\n\t\tthis.className = options.className;\r\n\t\t// 根元素\r\n\t\tthis.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n\t\t// 文档CSS样式\r\n\t\tthis.styleMap = null;\r\n\t\t// styleContainer== null，styleContainer = bodyContainer\r\n\t\tstyleContainer = styleContainer || bodyContainer;\r\n\r\n\t\t// CSS样式生成容器，清空所有CSS样式\r\n\t\tremoveAllElements(styleContainer);\r\n\t\t// HTML生成容器，清空所有HTML元素\r\n\t\tremoveAllElements(bodyContainer);\r\n\r\n\t\t// 添加注释\r\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\r\n\t\t// 添加默认CSS样式\r\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n\t\t// 主题CSS样式\r\n\t\tif (document.themePart) {\r\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\r\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\r\n\t\t}\r\n\t\t// 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n\t\tif (document.stylesPart != null) {\r\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n\t\t}\r\n\t\t// 多级列表样式\r\n\t\tif (document.numberingPart) {\r\n\t\t\tthis.processNumberings(document.numberingPart.domNumberings);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n\t\t}\r\n\t\t// 字体列表CSS样式\r\n\t\tif (!options.ignoreFonts && document.fontTablePart) {\r\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\r\n\t\t}\r\n\t\t// 生成脚注部分的Map\r\n\t\tif (document.footnotesPart) {\r\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n\t\t}\r\n\t\t// 生成尾注部分的Map\r\n\t\tif (document.endnotesPart) {\r\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n\t\t}\r\n\t\t// 文档设置\r\n\t\tif (document.settingsPart) {\r\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n\t\t}\r\n\t\t// 主文档--内容\r\n\t\tlet sectionElements = this.renderSections(document.documentPart.body);\r\n\t\tif (this.options.inWrapper) {\r\n\t\t\tbodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n\t\t} else {\r\n\t\t\tappendChildren(bodyContainer, sectionElements);\r\n\t\t}\r\n\r\n\t\t// 刷新制表符\r\n\t\tthis.refreshTabStops();\r\n\t}\r\n\r\n\t// 文档CSS主题样式\r\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n\t\tconst variables = {};\r\n\t\tconst fontScheme = themePart.theme?.fontScheme;\r\n\r\n\t\tif (fontScheme) {\r\n\t\t\tif (fontScheme.majorFont) {\r\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n\t\t\t}\r\n\r\n\t\t\tif (fontScheme.minorFont) {\r\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst colorScheme = themePart.theme?.colorScheme;\r\n\r\n\t\tif (colorScheme) {\r\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\r\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst cssText = this.styleToString(`.${this.className}`, variables);\r\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t}\r\n\r\n\t// 字体列表CSS样式\r\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n\t\tfor (let f of fontsPart.fonts) {\r\n\t\t\tfor (let ref of f.embedFontRefs) {\r\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\r\n\t\t\t\t\tconst cssValues = {\r\n\t\t\t\t\t\t'font-family': f.name,\r\n\t\t\t\t\t\t'src': `url(${fontData})`\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\r\n\t\t\t\t\tconst cssText = this.styleToString(\"@font-face\", cssValues);\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t\t\t\t\tthis.refreshTabStops();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算className，小写，默认前缀：\"docx_\"\r\n\tprocessStyleName(className: string): string {\r\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n\t}\r\n\r\n\t// 处理样式继承\r\n\tprocessStyles(styles: IDomStyle[]) {\r\n\t\t//\r\n\t\tconst stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n\t\t// 遍历base_on关系,合并样式\r\n\t\tfor (const style of styles.filter(x => x.basedOn)) {\r\n\t\t\tlet baseStyle = stylesMap[style.basedOn];\r\n\r\n\t\t\tif (baseStyle) {\r\n\t\t\t\t// 深度合并\r\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n\t\t\t\tfor (const baseValues of baseStyle.styles) {\r\n\t\t\t\t\tconst styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n\t\t\t\t\tif (styleValues) {\r\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyle.styles.push({...baseValues, values: {...baseValues.values}});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this.options.debug) {\r\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let style of styles) {\r\n\t\t\tstyle.cssName = this.processStyleName(style.id);\r\n\t\t}\r\n\r\n\t\treturn stylesMap;\r\n\t}\r\n\r\n\tprocessNumberings(numberings: IDomNumbering[]) {\r\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\r\n\t\t\tconst style = this.findStyle(num.pStyleName);\r\n\r\n\t\t\tif (style?.paragraphProps?.numbering) {\r\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 递归明确元素parent父级关系\r\n\tprocessElement(element: OpenXmlElement) {\r\n\t\tif (element.children) {\r\n\t\t\tfor (let e of element.children) {\r\n\t\t\t\te.parent = element;\r\n\t\t\t\t// 判断类型\r\n\t\t\t\tif (e.type == DomType.Table) {\r\n\t\t\t\t\t// 渲染表格\r\n\t\t\t\t\tthis.processTable(e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 递归渲染\r\n\t\t\t\t\tthis.processElement(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 表格style样式\r\n\tprocessTable(table: WmlTable) {\r\n\t\tfor (let r of table.children) {\r\n\t\t\tfor (let c of r.children) {\r\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tthis.processElement(c);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 复制CSS样式\r\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n\t\tif (!input) {\r\n\t\t\treturn output;\r\n\t\t}\r\n\t\tif (output == null) {\r\n\t\t\toutput = {};\r\n\t\t}\r\n\t\tif (attrs == null) {\r\n\t\t\tattrs = Object.getOwnPropertyNames(input);\r\n\t\t}\r\n\r\n\t\tfor (let key of attrs) {\r\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n\t\t\t\toutput[key] = input[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// 创建Page Section\r\n\tcreateSection(className: string, props: SectionProperties) {\r\n\t\tlet elem = this.createElement(\"section\", {className});\r\n\r\n\t\tif (props) {\r\n\t\t\tif (props.pageMargins) {\r\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\r\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\r\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\r\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\r\n\t\t\t}\r\n\r\n\t\t\tif (props.pageSize) {\r\n\t\t\t\tif (!this.options.ignoreWidth) {\r\n\t\t\t\t\telem.style.width = props.pageSize.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.options.ignoreHeight) {\r\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\r\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n\t\t\t\telem.style.columnGap = props.columns.space;\r\n\r\n\t\t\t\tif (props.columns.separator) {\r\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn elem;\r\n\t}\r\n\r\n\t// 生成所有的Page Section\r\n\trenderSections(document: DocumentElement): HTMLElement[] {\r\n\t\tconst result = [];\r\n\t\t// 生成页面parent父级关系\r\n\t\tthis.processElement(document);\r\n\t\t// 根据options.breakPages，选择是否分页\r\n\t\tlet sections: Section[];\r\n\t\tif (this.options.breakPages) {\r\n\t\t\t// 根据section切分页面\r\n\t\t\tsections = this.splitBySection(document.children);\r\n\t\t} else {\r\n\t\t\t// 不分页则，只有一个section\r\n\t\t\tsections = [{sectProps: document.props, elements: document.children, is_split: false}];\r\n\t\t}\r\n\t\tlet prevProps = null;\r\n\t\t// 遍历生成每一个section\r\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\r\n\t\t\tthis.currentFootnoteIds = [];\r\n\r\n\t\t\tconst section: Section = sections[i];\r\n\t\t\t// 页面属性\r\n\t\t\tconst props: SectionProperties = section.sectProps || document.props;\r\n\t\t\t// 页码\r\n\t\t\tlet pageIndex = result.length;\r\n\t\t\t// 是否第一个section\r\n\t\t\tlet isFirstSection = prevProps != props;\r\n\t\t\t// 是否最后一个section\r\n\t\t\tlet isLastSection = i === (l - 1);\r\n\t\t\t// 渲染单个section，有可能多个section\r\n\t\t\tlet sectionElement: HTMLElement[] = this.renderSection(section, props, document.cssStyle, pageIndex, isFirstSection, isLastSection);\r\n\r\n\t\t\tresult.push(...sectionElement);\r\n\t\t\tprevProps = props;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 生成单个section,如果发现超出一页，自动拆分为下一个section\r\n\trenderSection(section: Section, props: SectionProperties, sectionStyle: Record<string, string>, pageIndex: number, isFirstSection: boolean, isLastSection: boolean): HTMLElement[] {\r\n\t\t// 根据sectProps，创建section\r\n\t\tconst sectionElement = this.createSection(this.className, props);\r\n\t\t// 给section添加style样式\r\n\t\tthis.renderStyleValues(sectionStyle, sectionElement);\r\n\t\t// 渲染section页眉\r\n\t\tif (this.options.renderHeaders) {\r\n\t\t\tthis.renderHeaderFooterRef(props.headerRefs, props, pageIndex, isFirstSection, sectionElement);\r\n\t\t}\r\n\t\t// section主体内容\r\n\t\tlet contentElement = this.createElement(\"article\");\r\n\t\t// 根据options.breakPages，设置article的高度\r\n\t\tif (this.options.breakPages) {\r\n\t\t\t// 不分页则，拥有最小高度\r\n\t\t\tcontentElement.style.minHeight = props.contentSize.height;\r\n\t\t}\r\n\r\n\t\t// 生成article内容\r\n\t\tthis.renderElements(section.elements, contentElement);\r\n\t\t// 放入section\r\n\t\tsectionElement.appendChild(contentElement);\r\n\r\n\t\t// 渲染section脚注\r\n\t\tif (this.options.renderFootnotes) {\r\n\t\t\tthis.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n\t\t}\r\n\t\t// 渲染section尾注，判断最后一页\r\n\t\tif (this.options.renderEndnotes && isLastSection) {\r\n\t\t\tthis.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n\t\t}\r\n\t\t// 渲染section页脚\r\n\t\tif (this.options.renderFooters) {\r\n\t\t\tthis.renderHeaderFooterRef(props.footerRefs, props, pageIndex, isFirstSection, sectionElement);\r\n\t\t}\r\n\t\treturn [sectionElement]\r\n\t}\r\n\r\n\t// TODO 分页不准确，页脚页码混乱\r\n\t// 渲染页眉/页脚的Ref\r\n\trenderHeaderFooterRef(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, parent: HTMLElement) {\r\n\t\tif (!refs) return;\r\n\t\t// 查找奇数偶数的ref指向\r\n\t\tlet ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n\t\t\t?? refs.find(x => x.type == \"default\");\r\n\r\n\t\t// 查找ref对应的part部分\r\n\t\tlet part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n\t\tif (part) {\r\n\t\t\tthis.currentPart = part;\r\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\r\n\t\t\t\tthis.processElement(part.rootElement);\r\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\r\n\t\t\t}\r\n\t\t\t// 根据页眉页脚，设置CSS\r\n\t\t\tswitch (part.rootElement.type) {\r\n\t\t\t\tcase DomType.Header:\r\n\t\t\t\t\tpart.rootElement.cssStyle = {\r\n\t\t\t\t\t\tleft: props.pageMargins?.left,\r\n\t\t\t\t\t\twidth: props.contentSize?.width,\r\n\t\t\t\t\t\theight: props.pageMargins?.top,\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DomType.Footer:\r\n\t\t\t\t\tpart.rootElement.cssStyle = {\r\n\t\t\t\t\t\tleft: props.pageMargins?.left,\r\n\t\t\t\t\t\twidth: props.contentSize?.width,\r\n\t\t\t\t\t\theight: props.pageMargins?.bottom,\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('set header/footer style error', part.rootElement.type);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderElements([part.rootElement], parent);\r\n\t\t\tthis.currentPart = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// 判断是否存在分页元素\r\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\r\n\t\t// 分页符、换行符、分栏符\r\n\t\tif (elem.type != DomType.Break) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// 默认以lastRenderedPageBreak作为分页依据\r\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\r\n\t\t}\r\n\t\t// 分页符\r\n\t\tif ((elem as WmlBreak).break === \"page\") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据section切分页面\r\n\tsplitBySection(elements: OpenXmlElement[]): Section[] {\r\n\t\t// 当前操作section，elements数组包含子元素\r\n\t\tlet current_section = {sectProps: null, elements: [], is_split: false,};\r\n\t\t// 切分出的所有sections\r\n\t\tlet sections = [current_section];\r\n\r\n\t\tfor (let elem of elements) {\r\n\t\t\t// 添加elem进入当前操作section\r\n\t\t\tcurrent_section.elements.push(elem);\r\n\r\n\t\t\t/* 段落基本结构：paragraph => run => text... */\r\n\t\t\tif (elem.type == DomType.Paragraph) {\r\n\t\t\t\tconst p = elem as WmlParagraph;\r\n\t\t\t\t// 节属性，代表分节符\r\n\t\t\t\tlet sectProps = p.sectionProps;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\t检测段落是否默认存在强制分页符\r\n\t\t\t\t*/\r\n\r\n\t\t\t\t// 查找内置默认段落样式\r\n\t\t\t\tconst default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n\t\t\t\t// 段落内置样式之前存在强制分页符\r\n\t\t\t\tif (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n\t\t\t\t\t// 标记当前section已拆分\r\n\t\t\t\t\tcurrent_section.is_split = true;\r\n\t\t\t\t\t// 保存当前section的sectionProps\r\n\t\t\t\t\tcurrent_section.sectProps = sectProps;\r\n\t\t\t\t\t// 重置新的section\r\n\t\t\t\t\tcurrent_section = {sectProps: null, elements: [], is_split: false};\r\n\t\t\t\t\t// 添加新section\r\n\t\t\t\t\tsections.push(current_section);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 段落部分Break索引\r\n\t\t\t\tlet pBreakIndex = -1;\r\n\t\t\t\t// Run部分Break索引\r\n\t\t\t\tlet rBreakIndex = -1;\r\n\r\n\t\t\t\t// 查询段落中Break索引\r\n\t\t\t\tif (p.children) {\r\n\t\t\t\t\t// 计算段落Break索引\r\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\r\n\t\t\t\t\t\t// 计算Run Break索引\r\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n\t\t\t\t\t\t\t// 分页符、换行符、分栏符\r\n\t\t\t\t\t\t\tif (t.type != DomType.Break) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 默认忽略lastRenderedPageBreak，\r\n\t\t\t\t\t\t\tif ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n\t\t\t\t\t\t\t\t// 判断前一个p段落，\r\n\t\t\t\t\t\t\t\t// 如果含有分页符、分节符，那它们一定位于上一个section，\r\n\t\t\t\t\t\t\t\t// 如果前一个段落是普通段落，则代表文字过多超过一页，需要自动分页\r\n\t\t\t\t\t\t\t\treturn current_section.elements.length > 1 || !this.options.ignoreLastRenderedPageBreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 分页符\r\n\t\t\t\t\t\t\tif ((t as WmlBreak).break === \"page\") {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\trBreakIndex = rBreakIndex ?? -1\r\n\t\t\t\t\t\treturn rBreakIndex != -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 段落中存在节属性sectProps/段落Break索引\r\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\r\n\t\t\t\t\t// 标记当前section已拆分\r\n\t\t\t\t\tcurrent_section.is_split = true;\r\n\t\t\t\t\t// 保存当前section的sectionProps\r\n\t\t\t\t\tcurrent_section.sectProps = sectProps;\r\n\t\t\t\t\t// 重置新的section\r\n\t\t\t\t\tcurrent_section = {sectProps: null, elements: [], is_split: false};\r\n\t\t\t\t\t// 添加新section\r\n\t\t\t\t\tsections.push(current_section);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 根据段落Break索引，拆分Run部分\r\n\t\t\t\tif (pBreakIndex != -1) {\r\n\t\t\t\t\t// 即将拆分的Run部分\r\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\r\n\t\t\t\t\t// 是否需要拆分Run\r\n\t\t\t\t\tlet is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || is_split) {\r\n\t\t\t\t\t\t// 原始的Run\r\n\t\t\t\t\t\tlet origin_run = p.children;\r\n\t\t\t\t\t\t// 切出Break索引后面的Run，创建新段落\r\n\t\t\t\t\t\tlet new_paragraph = {...p, children: origin_run.slice(pBreakIndex)};\r\n\t\t\t\t\t\t// 保存Break索引前面的Run\r\n\t\t\t\t\t\tp.children = origin_run.slice(0, pBreakIndex);\r\n\t\t\t\t\t\t// 添加新段落\r\n\t\t\t\t\t\tcurrent_section.elements.push(new_paragraph);\r\n\r\n\t\t\t\t\t\tif (is_split) {\r\n\t\t\t\t\t\t\t// Run下面原始的元素\r\n\t\t\t\t\t\t\tlet origin_elements = breakRun.children;\r\n\t\t\t\t\t\t\t// 切出Run Break索引前面的元素，创建新Run\r\n\t\t\t\t\t\t\tlet newRun = {...breakRun, children: origin_elements.slice(0, rBreakIndex)};\r\n\t\t\t\t\t\t\t// 将新Run放入上一个section的段落\r\n\t\t\t\t\t\t\tp.children.push(newRun);\r\n\t\t\t\t\t\t\t// 切出Run Break索引后面的元素\r\n\t\t\t\t\t\t\tbreakRun.children = origin_elements.slice(rBreakIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// elem元素是表格，需要渲染过程中拆分section，标记:is_split\r\n\t\t\tif (elem.type === DomType.Table) {\r\n\t\t\t\tcurrent_section.is_split = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 处理所有section的section_props\r\n\t\tlet currentSectProps = null;\r\n\t\t// 倒序\r\n\t\tfor (let i = sections.length - 1; i >= 0; i--) {\r\n\t\t\tif (sections[i].sectProps == null) {\r\n\t\t\t\tsections[i].sectProps = currentSectProps;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentSectProps = sections[i].sectProps\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sections;\r\n\t}\r\n\r\n\t// 生成父级容器\r\n\trenderWrapper(children: HTMLElement[]) {\r\n\t\treturn this.createElement(\"div\", {className: `${this.className}-wrapper`}, children);\r\n\t}\r\n\r\n\t// 渲染默认样式\r\n\trenderDefaultStyle() {\r\n\t\tlet c = this.className;\r\n\t\tlet styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n            section.${c}>header { position: absolute; top: 0; z-index: 1; display: flex; align-items: flex-end; }\r\n\t\t\tsection.${c}>article { overflow: hidden; z-index: 1; }\r\n\t\t\tsection.${c}>footer { position: absolute; bottom: 0; z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n\t//     let css = \"\";\r\n\t//     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n\t//     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n\t//     const topCounters = [];\r\n\r\n\t//     for(let num of numberingPart.numberings) {\r\n\t//         const absNum = numberingMap[num.abstractId];\r\n\r\n\t//         for(let lvl of absNum.levels) {\r\n\t//             const className = this.numberingClass(num.id, lvl.level);\r\n\t//             let listStyleType = \"none\";\r\n\r\n\t//             if(lvl.text && lvl.format == 'decimal') {\r\n\t//                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n\t//                 if (lvl.level > 0) {\r\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n\t//                         \"counter-reset\": counter\r\n\t//                     });\r\n\t//                 } else {\r\n\t//                     topCounters.push(counter);\r\n\t//                 }\r\n\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n\t//                     \"counter-increment\": counter\r\n\t//                 });\r\n\t//             } else if(lvl.bulletPictureId) {\r\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\r\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": \"' '\",\r\n\t//                     \"display\": \"inline-block\",\r\n\t//                     \"background\": `var(${variable})`\r\n\t//                 }, pict.style);\r\n\r\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n\t//                     container.appendChild(createStyleElement(text));\r\n\t//                 });\r\n\t//             } else {\r\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n\t//             }\r\n\r\n\t//             css += this.styleToString(`p.${className}`, {\r\n\t//                 \"display\": \"list-item\",\r\n\t//                 \"list-style-position\": \"inside\",\r\n\t//                 \"list-style-type\": listStyleType,\r\n\t//                 //TODO\r\n\t//                 //...num.style\r\n\t//             });\r\n\t//         }\r\n\t//     }\r\n\r\n\t//     if (topCounters.length > 0) {\r\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\r\n\t//             \"counter-reset\": topCounters.join(\" \")\r\n\t//         });\r\n\t//     }\r\n\r\n\t//     return createStyleElement(css);\r\n\t// }\r\n\r\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n\t\tlet styleText = \"\";\r\n\t\tlet resetCounters = [];\r\n\r\n\t\tfor (let num of numberings) {\r\n\t\t\tlet selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n\t\t\tlet listStyleType = \"none\";\r\n\r\n\t\t\tif (num.bullet) {\r\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": \"' '\",\r\n\t\t\t\t\t\"display\": \"inline-block\",\r\n\t\t\t\t\t\"background\": `var(${valiable})`\r\n\t\t\t\t}, num.bullet.style);\r\n\r\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\r\n\t\t\t\t\tlet text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\r\n\t\t\t\t});\r\n\t\t\t} else if (num.levelText) {\r\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\r\n\t\t\t\tconst counterReset = counter + \" \" + (num.start - 1);\r\n\t\t\t\tif (num.level > 0) {\r\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n\t\t\t\t\t\t\"counter-reset\": counterReset\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// reset all level counters with start value\r\n\t\t\t\tresetCounters.push(counterReset);\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n\t\t\t\t\t\"counter-increment\": counter,\r\n\t\t\t\t\t...num.rStyle,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\r\n\t\t\t}\r\n\r\n\t\t\tstyleText += this.styleToString(selector, {\r\n\t\t\t\t\"display\": \"list-item\",\r\n\t\t\t\t\"list-style-position\": \"inside\",\r\n\t\t\t\t\"list-style-type\": listStyleType,\r\n\t\t\t\t...num.pStyle\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (resetCounters.length > 0) {\r\n\t\t\tstyleText += this.styleToString(this.rootSelector, {\r\n\t\t\t\t\"counter-reset\": resetCounters.join(\" \")\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\r\n\t\tlet styleText = \"\";\r\n\t\tconst stylesMap = this.styleMap;\r\n\t\tconst defaultStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n\t\tfor (const style of styles) {\r\n\t\t\tlet subStyles = style.styles;\r\n\r\n\t\t\tif (style.linked) {\r\n\t\t\t\tlet linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n\t\t\t\tif (linkedStyle)\r\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\r\n\t\t\t\telse if (this.options.debug)\r\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\r\n\t\t\t}\r\n\r\n\t\t\tfor (const subStyle of subStyles) {\r\n\t\t\t\t//TODO temporary disable modificators until test it well\r\n\t\t\t\tlet selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n\t\t\t\tif (style.target != subStyle.target)\r\n\t\t\t\t\tselector += ` ${subStyle.target}`;\r\n\r\n\t\t\t\tif (defaultStyles[style.target] == style)\r\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\t// 渲染脚注/尾注\r\n\trenderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n\t\tlet notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n\t\tif (notes.length > 0) {\r\n\t\t\tlet children = this.renderElements(notes);\r\n\t\t\tlet result = this.createElement(\"ol\", null, children);\r\n\t\t\tparent.appendChild(result);\r\n\t\t}\r\n\t}\r\n\r\n\t// 渲染单个元素\r\n\trenderElement(elem: OpenXmlElement): Node | Node[] {\r\n\t\tswitch (elem.type) {\r\n\t\t\tcase DomType.Paragraph:\r\n\t\t\t\treturn this.renderParagraph(elem as WmlParagraph);\r\n\r\n\t\t\tcase DomType.BookmarkStart:\r\n\t\t\t\treturn this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n\t\t\tcase DomType.BookmarkEnd:\r\n\t\t\t\treturn null; //ignore bookmark end\r\n\r\n\t\t\tcase DomType.Run:\r\n\t\t\t\treturn this.renderRun(elem as WmlRun);\r\n\r\n\t\t\tcase DomType.Table:\r\n\t\t\t\treturn this.renderTable(elem);\r\n\r\n\t\t\tcase DomType.Row:\r\n\t\t\t\treturn this.renderTableRow(elem);\r\n\r\n\t\t\tcase DomType.Cell:\r\n\t\t\t\treturn this.renderTableCell(elem);\r\n\r\n\t\t\tcase DomType.Hyperlink:\r\n\t\t\t\treturn this.renderHyperlink(elem);\r\n\r\n\t\t\tcase DomType.Drawing:\r\n\t\t\t\treturn this.renderDrawing(elem);\r\n\r\n\t\t\tcase DomType.Image:\r\n\t\t\t\treturn this.renderImage(elem as IDomImage);\r\n\r\n\t\t\tcase DomType.Text:\r\n\t\t\t\treturn this.renderText(elem as WmlText);\r\n\r\n\t\t\tcase DomType.DeletedText:\r\n\t\t\t\treturn this.renderDeletedText(elem as WmlText);\r\n\r\n\t\t\tcase DomType.Tab:\r\n\t\t\t\treturn this.renderTab(elem);\r\n\r\n\t\t\tcase DomType.Symbol:\r\n\t\t\t\treturn this.renderSymbol(elem as WmlSymbol);\r\n\r\n\t\t\tcase DomType.Break:\r\n\t\t\t\treturn this.renderBreak(elem as WmlBreak);\r\n\r\n\t\t\tcase DomType.Footer:\r\n\t\t\t\treturn this.renderHeaderFooter(elem, \"footer\");\r\n\r\n\t\t\tcase DomType.Header:\r\n\t\t\t\treturn this.renderHeaderFooter(elem, \"header\");\r\n\r\n\t\t\tcase DomType.Footnote:\r\n\t\t\tcase DomType.Endnote:\r\n\t\t\t\treturn this.renderContainer(elem, \"li\");\r\n\r\n\t\t\tcase DomType.FootnoteReference:\r\n\t\t\t\treturn this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n\t\t\tcase DomType.EndnoteReference:\r\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n\t\t\tcase DomType.NoBreakHyphen:\r\n\t\t\t\treturn this.createElement(\"wbr\");\r\n\r\n\t\t\tcase DomType.VmlPicture:\r\n\t\t\t\treturn this.renderVmlPicture(elem);\r\n\r\n\t\t\tcase DomType.VmlElement:\r\n\t\t\t\treturn this.renderVmlElement(elem as VmlElement);\r\n\r\n\t\t\tcase DomType.MmlMath:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"math\", {xmlns: ns.mathML});\r\n\r\n\t\t\tcase DomType.MmlMathParagraph:\r\n\t\t\t\treturn this.renderContainer(elem, \"span\");\r\n\r\n\t\t\tcase DomType.MmlFraction:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n\t\t\tcase DomType.MmlBase:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, elem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n\r\n\t\t\tcase DomType.MmlNumerator:\r\n\t\t\tcase DomType.MmlDenominator:\r\n\t\t\tcase DomType.MmlFunction:\r\n\t\t\tcase DomType.MmlLimit:\r\n\t\t\tcase DomType.MmlBox:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n\t\t\tcase DomType.MmlGroupChar:\r\n\t\t\t\treturn this.renderMmlGroupChar(elem);\r\n\r\n\t\t\tcase DomType.MmlLimitLower:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n\r\n\t\t\tcase DomType.MmlMatrix:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n\r\n\t\t\tcase DomType.MmlMatrixRow:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n\r\n\t\t\tcase DomType.MmlRadical:\r\n\t\t\t\treturn this.renderMmlRadical(elem);\r\n\r\n\r\n\t\t\tcase DomType.MmlSuperscript:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n\t\t\tcase DomType.MmlSubscript:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n\t\t\tcase DomType.MmlDegree:\r\n\t\t\tcase DomType.MmlSuperArgument:\r\n\t\t\tcase DomType.MmlSubArgument:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n\t\t\tcase DomType.MmlFunctionName:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n\r\n\t\t\tcase DomType.MmlDelimiter:\r\n\t\t\t\treturn this.renderMmlDelimiter(elem);\r\n\r\n\t\t\tcase DomType.MmlRun:\r\n\t\t\t\treturn this.renderMmlRun(elem);\r\n\r\n\t\t\tcase DomType.MmlNary:\r\n\t\t\t\treturn this.renderMmlNary(elem);\r\n\r\n\t\t\tcase DomType.MmlPreSubSuper:\r\n\t\t\t\treturn this.renderMmlPreSubSuper(elem);\r\n\r\n\t\t\tcase DomType.MmlBar:\r\n\t\t\t\treturn this.renderMmlBar(elem);\r\n\r\n\t\t\tcase DomType.MmlEquationArray:\r\n\t\t\t\treturn this.renderMllList(elem);\r\n\r\n\t\t\tcase DomType.Inserted:\r\n\t\t\t\treturn this.renderInserted(elem);\r\n\r\n\t\t\tcase DomType.Deleted:\r\n\t\t\t\treturn this.renderDeleted(elem);\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderChildren(elem: OpenXmlElement, parent?: HTMLElement): Node[] {\r\n\t\treturn this.renderElements(elem.children, parent);\r\n\t}\r\n\r\n\t// 渲染多元素，\r\n\trenderElements(elems: OpenXmlElement[], parent?: HTMLElement): Node[] {\r\n\t\tif (elems == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet result: Node[] = [];\r\n\r\n\t\tfor (let i = 0; i < elems.length; i++) {\r\n\t\t\tlet element = this.renderElement(elems[i]);\r\n\t\t\tif (Array.isArray(element)) {\r\n\t\t\t\tresult.push(...element);\r\n\t\t\t} else if (element) {\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (parent) {\r\n\t\t\tappendChildren(parent, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n\t\treturn this.createElement(tagName, props, this.renderChildren(elem));\r\n\t}\r\n\r\n\trenderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n\t\treturn createElementNS(ns, tagName, props, this.renderChildren(elem));\r\n\t}\r\n\r\n\trenderParagraph(elem: WmlParagraph) {\r\n\t\tlet result = this.createElement(\"p\");\r\n\r\n\t\tconst style = this.findStyle(elem.styleName);\r\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\t\tthis.renderCommonProperties(result.style, elem);\r\n\r\n\t\tconst numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n\t\tif (numbering) {\r\n\t\t\tresult.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderRunProperties(style: any, props: RunProperties) {\r\n\t\tthis.renderCommonProperties(style, props);\r\n\t}\r\n\r\n\trenderCommonProperties(style: any, props: CommonProperties) {\r\n\t\tif (props == null)\r\n\t\t\treturn;\r\n\r\n\t\tif (props.color) {\r\n\t\t\tstyle[\"color\"] = props.color;\r\n\t\t}\r\n\r\n\t\tif (props.fontSize) {\r\n\t\t\tstyle[\"font-size\"] = props.fontSize;\r\n\t\t}\r\n\t}\r\n\r\n\trenderHyperlink(elem: WmlHyperlink) {\r\n\t\tlet result = this.createElement(\"a\");\r\n\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.href) {\r\n\t\t\tresult.href = elem.href;\r\n\t\t} else if (elem.id) {\r\n\t\t\tconst rel = this.document.documentPart.rels\r\n\t\t\t\t.find(it => it.id == elem.id && it.targetMode === \"External\");\r\n\t\t\tresult.href = rel?.target;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderDrawing(elem: OpenXmlElement) {\r\n\t\tlet result = this.createElement(\"div\");\r\n\r\n\t\tresult.style.display = \"inline-block\";\r\n\t\tresult.style.position = \"relative\";\r\n\t\tresult.style.textIndent = \"0px\";\r\n\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 渲染图片，默认转换blob--异步\r\n\trenderImage(elem: IDomImage) {\r\n\t\tlet result = this.createElement(\"img\");\r\n\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (this.document) {\r\n\t\t\tthis.document\r\n\t\t\t\t.loadDocumentImage(elem.src, this.currentPart)\r\n\t\t\t\t.then(src => {\r\n\t\t\t\t\tresult.src = src;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderText(elem: WmlText) {\r\n\t\treturn document.createTextNode(elem.text);\r\n\t}\r\n\r\n\trenderDeletedText(elem: WmlText) {\r\n\t\treturn this.options.renderEndnotes ? document.createTextNode(elem.text) : null;\r\n\t}\r\n\r\n\trenderBreak(elem: WmlBreak) {\r\n\t\tif (elem.break == \"textWrapping\") {\r\n\t\t\treturn this.createElement(\"br\");\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderInserted(elem: OpenXmlElement): Node | Node[] {\r\n\t\tif (this.options.renderChanges) {\r\n\t\t\treturn this.renderContainer(elem, \"ins\");\r\n\t\t}\r\n\r\n\t\treturn this.renderChildren(elem);\r\n\t}\r\n\r\n\trenderDeleted(elem: OpenXmlElement): Node {\r\n\t\tif (this.options.renderChanges) {\r\n\t\t\treturn this.renderContainer(elem, \"del\");\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderSymbol(elem: WmlSymbol) {\r\n\t\tlet span = this.createElement(\"span\");\r\n\t\tspan.style.fontFamily = elem.font;\r\n\t\tspan.innerHTML = `&#x${elem.char};`\r\n\t\treturn span;\r\n\t}\r\n\r\n\t// 渲染页眉页脚\r\n\trenderHeaderFooter(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap,) {\r\n\r\n\t\tlet result: HTMLElement = this.createElement(tagName);\r\n\t\t// 渲染子元素\r\n\t\tthis.renderChildren(elem, result);\r\n\t\t// 渲染style样式\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderFootnoteReference(elem: WmlNoteReference) {\r\n\t\tlet result = this.createElement(\"sup\");\r\n\t\tthis.currentFootnoteIds.push(elem.id);\r\n\t\tresult.textContent = `${this.currentFootnoteIds.length}`;\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderEndnoteReference(elem: WmlNoteReference) {\r\n\t\tlet result = this.createElement(\"sup\");\r\n\t\tthis.currentEndnoteIds.push(elem.id);\r\n\t\tresult.textContent = `${this.currentEndnoteIds.length}`;\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 渲染制表符\r\n\trenderTab(elem: OpenXmlElement) {\r\n\t\tlet tabSpan = this.createElement(\"span\");\r\n\r\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n\t\tif (this.options.experimental) {\r\n\t\t\ttabSpan.className = this.tabStopClass();\r\n\t\t\tlet stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n\t\t\tthis.currentTabs.push({stops, span: tabSpan});\r\n\t\t}\r\n\r\n\t\treturn tabSpan;\r\n\t}\r\n\r\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n\t\tlet result = this.createElement(\"span\");\r\n\t\tresult.id = elem.name;\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderRun(elem: WmlRun) {\r\n\t\tif (elem.fieldRun)\r\n\t\t\treturn null;\r\n\r\n\t\tconst result = this.createElement(\"span\");\r\n\r\n\t\tif (elem.id)\r\n\t\t\tresult.id = elem.id;\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.verticalAlign) {\r\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\r\n\t\t\tthis.renderChildren(elem, wrapper);\r\n\t\t\tresult.appendChild(wrapper);\r\n\t\t} else {\r\n\t\t\tthis.renderChildren(elem, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTable(elem: WmlTable) {\r\n\t\tlet oTable = this.createElement(\"table\");\r\n\r\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\r\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\r\n\t\tthis.currentVerticalMerge = {};\r\n\t\tthis.currentCellPosition = {col: 0, row: 0};\r\n\t\t// 渲染表格column列\r\n\t\tif (elem.columns) {\r\n\t\t\toTable.appendChild(this.renderTableColumns(elem.columns));\r\n\t\t}\r\n\r\n\t\tthis.renderClass(elem, oTable);\r\n\t\tthis.renderChildren(elem, oTable);\r\n\t\tthis.renderStyleValues(elem.cssStyle, oTable);\r\n\r\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\r\n\t\treturn oTable;\r\n\t}\r\n\r\n\trenderTableColumns(columns: WmlTableColumn[]) {\r\n\t\tlet result = this.createElement(\"colgroup\");\r\n\r\n\t\tfor (let col of columns) {\r\n\t\t\tlet colElem = this.createElement(\"col\");\r\n\r\n\t\t\tif (col.width)\r\n\t\t\t\tcolElem.style.width = col.width;\r\n\r\n\t\t\tresult.appendChild(colElem);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTableRow(elem: OpenXmlElement) {\r\n\t\tlet result = this.createElement(\"tr\");\r\n\r\n\t\tthis.currentCellPosition.col = 0;\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tthis.currentCellPosition.row++;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTableCell(elem: WmlTableCell) {\r\n\t\tlet result = this.createElement(\"td\");\r\n\r\n\t\tconst key = this.currentCellPosition.col;\r\n\r\n\t\tif (elem.verticalMerge) {\r\n\t\t\tif (elem.verticalMerge == \"restart\") {\r\n\t\t\t\tthis.currentVerticalMerge[key] = result;\r\n\t\t\t\tresult.rowSpan = 1;\r\n\t\t\t} else if (this.currentVerticalMerge[key]) {\r\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\r\n\t\t\t\tresult.style.display = \"none\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.currentVerticalMerge[key] = null;\r\n\t\t}\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.span)\r\n\t\t\tresult.colSpan = elem.span;\r\n\r\n\t\tthis.currentCellPosition.col += result.colSpan;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderVmlPicture(elem: OpenXmlElement) {\r\n\t\tlet result = createElement(\"div\");\r\n\t\tthis.renderChildren(elem, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderVmlElement(elem: VmlElement): SVGElement {\r\n\t\tlet container = createSvgElement(\"svg\");\r\n\r\n\t\tcontainer.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n\t\tconst result = this.renderVmlChildElement(elem);\r\n\r\n\t\tif (elem.imageHref?.id) {\r\n\t\t\tthis.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n\t\t\t\t.then(x => result.setAttribute(\"href\", x));\r\n\t\t}\r\n\r\n\t\tcontainer.appendChild(result);\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tconst bb = (container.firstElementChild as any).getBBox();\r\n\r\n\t\t\tcontainer.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n\t\t\tcontainer.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n\t\t});\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\trenderVmlChildElement(elem: VmlElement) {\r\n\t\tconst result = createSvgElement(elem.tagName as any);\r\n\t\tObject.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n\t\tfor (let child of elem.children) {\r\n\t\t\tif (child.type == DomType.VmlElement) {\r\n\t\t\t\tresult.appendChild(this.renderVmlChildElement(child as VmlElement));\r\n\t\t\t} else {\r\n\t\t\t\tresult.append(...asArray(this.renderElement(child as any)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlRadical(elem: OpenXmlElement): HTMLElement {\r\n\t\tconst base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n\t\tif (elem.props?.hideDegree) {\r\n\t\t\treturn createElementNS(ns.mathML, \"msqrt\", null, this.renderElements([base]));\r\n\t\t}\r\n\r\n\t\tconst degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n\t\treturn createElementNS(ns.mathML, \"mroot\", null, this.renderElements([base, degree]));\r\n\t}\r\n\r\n\trenderMmlDelimiter(elem: OpenXmlElement): HTMLElement {\r\n\t\tconst children = [];\r\n\r\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n\t\tchildren.push(...this.renderElements(elem.children));\r\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlNary(elem: OpenXmlElement): HTMLElement {\r\n\t\tconst children = [];\r\n\t\tconst grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\r\n\t\tconst sub = grouped[DomType.MmlSubArgument];\r\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\r\n\r\n\t\tconst charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n\t\tif (supElem || subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n\t\t} else if (supElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n\t\t} else if (subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n\t\t} else {\r\n\t\t\tchildren.push(charElem);\r\n\t\t}\r\n\r\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlPreSubSuper(elem: OpenXmlElement) {\r\n\t\tconst children = [];\r\n\t\tconst grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\r\n\t\tconst sub = grouped[DomType.MmlSubArgument];\r\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\t\tconst stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n\t\tchildren.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlGroupChar(elem: OpenXmlElement) {\r\n\t\tconst tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n\t\tif (elem.props.char) {\r\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mo\", null, [elem.props.char]));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlBar(elem: OpenXmlElement) {\r\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n\t\tswitch (elem.props.position) {\r\n\t\t\tcase \"top\":\r\n\t\t\t\tresult.style.textDecoration = \"overline\";\r\n\t\t\t\tbreak\r\n\t\t\tcase \"bottom\":\r\n\t\t\t\tresult.style.textDecoration = \"underline\";\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlRun(elem: OpenXmlElement) {\r\n\t\tconst result = createElementNS(ns.mathML, \"ms\");\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMllList(elem: OpenXmlElement) {\r\n\t\tconst result = createElementNS(ns.mathML, \"mtable\");\r\n\t\t// 添加class类\r\n\t\tthis.renderClass(elem, result);\r\n\t\t// 渲染style样式\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tconst children = this.renderChildren(elem);\r\n\r\n\t\tfor (let child of children) {\r\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mtr\", null, [\r\n\t\t\t\tcreateElementNS(ns.mathML, \"mtd\", null, [child])\r\n\t\t\t]));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 设置元素style样式\r\n\trenderStyleValues(style: Record<string, string>, output: HTMLElement) {\r\n\t\tfor (let k in style) {\r\n\t\t\tif (k.startsWith(\"$\")) {\r\n\t\t\t\toutput.setAttribute(k.slice(1), style[k]);\r\n\t\t\t} else {\r\n\t\t\t\toutput.style[k] = style[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加class类名\r\n\trenderClass(input: OpenXmlElement, output: HTMLElement) {\r\n\t\tif (input.className) {\r\n\t\t\toutput.className = input.className;\r\n\t\t}\r\n\r\n\t\tif (input.styleName) {\r\n\t\t\toutput.classList.add(this.processStyleName(input.styleName));\r\n\t\t}\r\n\t}\r\n\r\n\t// 查找内置默认style样式\r\n\tfindStyle(styleName: string) {\r\n\t\treturn styleName && this.styleMap?.[styleName];\r\n\t}\r\n\r\n\tnumberingClass(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\ttabStopClass() {\r\n\t\treturn `${this.className}-tab-stop`;\r\n\t}\r\n\r\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n\t\tlet result = `${selectors} {\\r\\n`;\r\n\r\n\t\tfor (const key in values) {\r\n\t\t\tif (key.startsWith('$'))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\r\n\t\t}\r\n\r\n\t\tif (cssText)\r\n\t\t\tresult += cssText;\r\n\r\n\t\treturn result + \"}\\r\\n\";\r\n\t}\r\n\r\n\tnumberingCounter(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n\t\tconst suffMap = {\r\n\t\t\t\"tab\": \"\\\\9\",\r\n\t\t\t\"space\": \"\\\\a0\",\r\n\t\t};\r\n\r\n\t\tlet result = text.replace(/%\\d*/g, s => {\r\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\r\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n\t\t});\r\n\r\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n\t}\r\n\r\n\tnumFormatToCssValue(format: string) {\r\n\t\tlet mapping = {\r\n\t\t\tnone: \"none\",\r\n\t\t\tbullet: \"disc\",\r\n\t\t\tdecimal: \"decimal\",\r\n\t\t\tlowerLetter: \"lower-alpha\",\r\n\t\t\tupperLetter: \"upper-alpha\",\r\n\t\t\tlowerRoman: \"lower-roman\",\r\n\t\t\tupperRoman: \"upper-roman\",\r\n\t\t\tdecimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n\t\t\t// ordinal: \"\", // 1st, 2nd, 3rd,...\r\n\t\t\t// ordinalText: \"\", //First, Second, Third, ...\r\n\t\t\t// cardinalText: \"\", //One,Two Three,...\r\n\t\t\t// numberInDash: \"\", //-1-,-2-,-3-, ...\r\n\t\t\t// hex: \"upper-hexadecimal\",\r\n\t\t\taiueo: \"katakana\",\r\n\t\t\taiueoFullWidth: \"katakana\",\r\n\t\t\tchineseCounting: \"simp-chinese-informal\",\r\n\t\t\tchineseCountingThousand: \"simp-chinese-informal\",\r\n\t\t\tchineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n\t\t\tchosung: \"hangul-consonant\",\r\n\t\t\tideographDigital: \"cjk-ideographic\",\r\n\t\t\tideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n\t\t\tideographLegalTraditional: \"trad-chinese-formal\",\r\n\t\t\tideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n\t\t\tiroha: \"katakana-iroha\",\r\n\t\t\tirohaFullWidth: \"katakana-iroha\",\r\n\t\t\tjapaneseCounting: \"japanese-informal\",\r\n\t\t\tjapaneseDigitalTenThousand: \"cjk-decimal\",\r\n\t\t\tjapaneseLegal: \"japanese-formal\",\r\n\t\t\tthaiNumbers: \"thai\",\r\n\t\t\tkoreanCounting: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital2: \"korean-hanja-informal\",\r\n\t\t\thebrew1: \"hebrew\",\r\n\t\t\thebrew2: \"hebrew\",\r\n\t\t\thindiNumbers: \"devanagari\",\r\n\t\t\tganada: \"hangul\",\r\n\t\t\ttaiwaneseCounting: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseCountingThousand: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseDigital: \"cjk-decimal\",\r\n\t\t};\r\n\r\n\t\treturn mapping[format] ?? format;\r\n\t}\r\n\r\n\t// 刷新tab制表符\r\n\trefreshTabStops() {\r\n\t\tif (!this.options.experimental) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.tabsTimeout);\r\n\r\n\t\tthis.tabsTimeout = setTimeout(() => {\r\n\t\t\tconst pixelToPoint = computePixelToPoint();\r\n\r\n\t\t\tfor (let tab of this.currentTabs) {\r\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(tagName: T, props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>, children?: ChildType[]): HTMLElementTagNameMap[T] {\r\n\treturn createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(tagName: T, props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>, children?: ChildType[]): SVGElementTagNameMap[T] {\r\n\treturn createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n\tlet result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n\tObject.assign(result, props);\r\n\tchildren && appendChildren(result, children);\r\n\treturn result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n\telem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: HTMLElement | Element, children: (Node | string)[]) {\r\n\tchildren.forEach(child => {\r\n\t\tparent.appendChild(isString(child) ? document.createTextNode(child) : child)\r\n\t});\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n\treturn createElement(\"style\", {innerHTML: cssText});\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n\telem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n\tlet parent = elem.parent;\r\n\r\n\twhile (parent != null && parent.type != type)\r\n\t\tparent = parent.parent;\r\n\r\n\treturn <T>parent;\r\n}\r\n","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertBoolean } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n\r\n    xmlString = removeUTF8BOM(xmlString);\r\n\r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");\r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attrs(elem: Element) {\r\n        return Array.from(elem.attributes);\r\n    }\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    hexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n// 对象深度合并\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n// 转化为数组\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}","import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\n// word文件解析器：blob对象 => Object对象\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\t// 解压缩word文件转换为Office Open XML\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}\r\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_jszip__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["OpenXmlPackage","constructor","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","zip","JSZip","loadAsync","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","root","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlFunction","MmlFunctionName","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlPreSubSuper","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","MmlLimit","MmlLimitLower","MmlMatrix","MmlMatrixRow","MmlBox","MmlBar","MmlGroupChar","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","push","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","undefined","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","textContent","join","Text","text","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","verticalJustification","position","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","ascii","ascii_theme","themeValue","east_Asia","east_Asia_theme","complex_script","complex_script_theme","high_ansi","high_ansi_theme","fonts_value","Set","filter","length","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","i","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","Px","mul","unit","LineHeight","VmlEmu","usage","test","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","leader","parseRunProperty","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","section","origin","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","contentSize","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","renderChanges","data","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","doc","render","HtmlRendererSync","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","createElement","tagName","createElementNS","createSvgElement","oParent","document","Object","assign","appendChildren","removeAllElements","innerHTML","Array","isArray","append","isString","appendChild","createStyleElement","cssText","appendComment","comment","createComment","styleMap","currentPart","current_element","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","wrapper","renderDefaultStyle","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","processNumberings","domNumberings","renderNumbering","fontTablePart","renderFontTable","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","renderWrapper","renderSections","documentPart","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","k","entries","colors","styleToString","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","styleText","defaultStyles","subStyles","linkedStyle","concat","subStyle","numberings","num","findStyle","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","then","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","lvl","selectors","numformat","replace","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","fontsPart","ref","loadFont","fontData","cssValues","attrs","getOwnPropertyNames","hasOwnProperty","processElement","processTable","r","splitBySection","current_section","sectProps","is_split","sections","p","default_paragraph_style","pBreakIndex","rBreakIndex","findIndex","t","breakRun","origin_run","new_paragraph","slice","origin_elements","newRun","currentSectProps","prevProps","l","currentFootnoteIds","isFirstSection","isLastSection","pageIndex","checking_overflow","renderSection","sectionElement","createSection","renderStyleValues","renderHeaderFooterRef","renderNotes","contentElement","minHeight","renderElements","paddingLeft","paddingRight","paddingTop","paddingBottom","columnCount","columnGap","columnRule","refs","page","firstOfSection","part","findPartByRelId","noteIds","notesMap","oList","elems","renderElement","elementIndex","oNode","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderHeaderFooter","Footnote","Endnote","renderContainer","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlGroupChar","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMmlPreSubSuper","renderMmlBar","renderMllList","renderInserted","renderDeleted","isPageBreakElement","renderChildren","is_overflow","clientWidth","scrollWidth","clientHeight","scrollHeight","log","Element","remove","removeChild","removeElements","splice","oParagraph","renderClass","renderCommonProperties","classList","add","renderRunProperties","oAnchor","rel","it","oDrawing","display","textIndent","oImage","loadDocumentImage","oText","createTextNode","oDeletedText","oBr","oSpan","fontFamily","oElement","oSup","tabSpan","tabStopClass","stops","findParent","oTable","renderTableColumns","pop","oColGroup","oCol","oTableRow","oTableCell","rowSpan","colSpan","oPictureContainer","oSvg","setAttribute","cssStyleText","oChildren","renderVmlChildElement","imageHref","requestAnimationFrame","bb","getBBox","Math","ceil","y","oSvgElement","oChild","base","degree","oMrow","grouped","sup","sub","supElem","asArray","subElem","charElem","stubElem","oGroupChar","textDecoration","oMs","oMtable","oMtd","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","sectionElements","sectionStyle","colElem","container","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","sort","lastTab","pWidthPt","marginLeft","pOffset","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","item","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","si","lastIndexOf","prefix","URL","toString","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","String","sources","source","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","module","exports","__WEBPACK_EXTERNAL_MODULE_jszip__","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}