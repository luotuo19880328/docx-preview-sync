{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/mathml.scss","webpack://docx/./node_modules/css-loader/dist/runtime/api.js","webpack://docx/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://docx/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/vml/vml.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/compat get default export","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/runtime/jsonp chunk loading","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:\\\"\\\";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/mathml.scss\"],\"names\":[],\"mappings\":\"AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA\",\"sourcesContent\":[\"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";\\r\\n\\r\\nmath {\\r\\n    display: inline-block;\\r\\n    line-height: initial;\\r\\n}\\r\\n\\r\\nmfrac {\\r\\n    display: inline-block;\\r\\n    vertical-align: -50%;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:first-child {\\r\\n        border-bottom: solid thin currentColor;\\r\\n    }\\r\\n\\r\\n    &>* {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsub {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: sub;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsup {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: super;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunder, mover, munderover {\\r\\n    display: inline-flex;\\r\\n    flex-flow: column nowrap;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:not(:first-child) {\\r\\n        font-size: smaller;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunderover {\\r\\n    &>:last-child { order: -1; }\\r\\n}\\r\\n\\r\\nmroot, msqrt {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    border-top: solid thin currentColor;  \\r\\n    margin-top: 0.5px;\\r\\n    vertical-align: middle;  \\r\\n    margin-left: 1ch; \\r\\n\\r\\n    &:before {\\r\\n        content: \\\"\\\";\\r\\n        display: inline-block;\\r\\n        position: absolute;\\r\\n        width: 1ch;\\r\\n        left: -1ch;\\r\\n        top: -1px;\\r\\n        bottom: 0;\\r\\n        background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E\\\");\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n// \r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    async load(): Promise<any> {\r\n\t\tthis.rels = await this._package.loadRelationships(this.path);\r\n\r\n\t\tconst xmlText = await this._package.load(this.path);\r\n\t\tconst xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n\t\tif (this._package.options.keepOrigin) {\r\n\t\t\tthis._xmlDocument = xmlDoc;\r\n\t\t}\r\n\r\n\t\tthis.parseXml(xmlDoc.firstElementChild);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties, SectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\nimport { parseVmlElement } from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\tignoreWidth: false,\r\n\t\t\tdebug: false,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tvar result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\r\n\t\tvar background = xml.element(xmlDoc, \"background\");\r\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tvar result = {};\r\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tvar children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\r\n\t\t\tcase \"table\": result.target = \"table\"; break;\r\n\t\t\tcase \"character\": result.target = \"span\"; break;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\tvar type = xml.attr(node, \"type\");\r\n\t\tvar selector = \"\";\r\n\t\tvar modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar mapping = {};\r\n\t\tvar bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tvar pict = xml.element(elem, \"pict\");\r\n\t\tvar shape = pict && xml.element(pict, \"shape\");\r\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tvar result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Inserted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{\r\n\t\t\ttype: DomType.Deleted,\r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n\t\tvar anchor = xml.attr(node, \"anchor\");\r\n\t\tvar relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tlet textContent = c.textContent;\r\n\t\t\t\t\t// 是否保留空格\r\n\t\t\t\t\tlet is_preserve_space = xml.attr(c, \"xml:space\") === \"preserve\";\r\n\t\t\t\t\tif (is_preserve_space) {\r\n\t\t\t\t\t\t// TODO \\u00A0 = 不间断空格，英文应该一个空格，中文两个空格，暂时两个空格，后期修复\r\n\t\t\t\t\t\ttextContent = textContent.split(/\\s/).join(\"\\u00A0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tvar run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\r\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tvar choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\r\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n\t\tvar isAnchor = node.localName == \"anchor\";\r\n\r\n\t\t//TODO 计算\r\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode)\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\r\n\t\t\t\t\t\tif (offsetNode)\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\twrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tvar g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g)\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wrapType == \"wrapTopAndBottom\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\tif (posX.align) {\r\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (wrapType == \"wrapNone\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\tif (posX.offset)\r\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\tif (posY.offset)\r\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t}\r\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\r\n\t\tvar blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tvar spPr = xml.element(elem, \"spPr\");\r\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (var n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tvar val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\t// 转换Run字体，包含四种，ascii，eastAsia，ComplexScript，高 ANSI Font\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\t// 字体\r\n\t\tlet fonts = [];\r\n\t\t// ascii字体\r\n\t\tlet ascii = xml.attr(node, \"ascii\");\r\n\t\tlet ascii_theme = values.themeValue(node, \"asciiTheme\");\r\n\t\tfonts.push(ascii, ascii_theme);\r\n\t\t// eastAsia\r\n\t\tlet east_Asia = xml.attr(node, \"eastAsia\");\r\n\t\tlet east_Asia_theme = values.themeValue(node, \"eastAsiaTheme\");\r\n\t\tfonts.push(east_Asia, east_Asia_theme);\r\n\t\t// ComplexScript\r\n\t\tlet complex_script = xml.attr(node, \"cs\");\r\n\t\tlet complex_script_theme = values.themeValue(node, \"cstheme\");\r\n\t\tfonts.push(complex_script, complex_script_theme);\r\n\t\t// 高 ANSI Font\r\n\t\tlet high_ansi = xml.attr(node, \"hAnsi\");\r\n\t\tlet high_ansi_theme = values.themeValue(node, \"hAnsiTheme\");\r\n\t\tfonts.push(high_ansi, high_ansi_theme);\r\n\r\n\t\t// 去除重复字体，合并成一个字体配置\r\n\t\tlet fonts_value = [...new Set(fonts)].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0) {\r\n\t\t\tstyle[\"font-family\"] = fonts_value;\r\n\t\t}\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tvar left = xml.lengthAttr(node, \"left\");\r\n\t\tvar start = xml.lengthAttr(node, \"start\");\r\n\t\tvar right = xml.lengthAttr(node, \"right\");\r\n\t\tvar end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tvar before = xml.lengthAttr(node, \"before\");\r\n\t\tvar after = xml.lengthAttr(node, \"after\");\r\n\t\tvar line = xml.intAttr(node, \"line\", null);\r\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE) {\r\n\t\t\t\tcb(<Element>n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tvar v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tvar val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tvar type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\": break;\r\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\r\n\t\t\tcase \"auto\": return \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\": return \"left\";\r\n\t\t\tcase \"center\": return \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\": return \"right\";\r\n\t\t\tcase \"both\": return \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\": return \"sub\";\r\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\": return \"baseline\";\r\n\t\t\tcase \"top\": return \"top\";\r\n\t\t\tcase \"center\": return \"middle\";\r\n\t\t\tcase \"bottom\": return \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { computePixelToPoint } from \"../javascript\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n    compatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n    math: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n\r\n    // Windows系统默认是96dpi，Apple系统默认是72dpi。pt = 1/72(英寸), px = 1/dpi(英寸)\r\n    // 目前只考虑Windows系统，px = pt * 96 / 72 ;\r\n    Px: { mul: 1 / 15, unit: \"px\" },\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, // twentieth = 1/20\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: \"\" },\r\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n\r\n    return `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"color\":\r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    props?: Record<string, any>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    props?: Record<string, any>;\r\n\r\n    className?: string;\r\n    styleName?: string;\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    start: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n\tstyleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if(parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Borders, parseBorders } from \"./border\";\r\nimport { Length } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length,\r\n    height: Length,\r\n    orientation: \"landscape\" | string\r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\"\r\n    | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n    | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\",\r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n}\r\n\r\nexport interface Section {\r\n    sectProps: SectionProperties,\r\n    elements: OpenXmlElement[],\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml));\r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { WordDocument } from './word-document';\r\n\r\nimport { DocumentParser } from './document-parser';\r\n\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    className: string;                      //class name/prefix for default and document style classes\r\n    inWrapper: boolean;                     //enables rendering of wrapper around document content\r\n    ignoreWidth: boolean;                   //disables rendering width of page\r\n    ignoreHeight: boolean;                  //disables rendering height of page\r\n    ignoreFonts: boolean;                   //disables fonts rendering\r\n    breakPages: boolean;                    //enables page breaking on page breaks\r\n    ignoreLastRenderedPageBreak: boolean;   //disables page breaking on lastRenderedPageBreak elements\r\n    experimental: boolean;                  //enables experimental features (tab stops calculation)\r\n    trimXmlDeclaration: boolean;            //if true, xml declaration will be removed from xml documents before parsing\r\n    useBase64URL: boolean;                  //if true, images, fonts, etc. will be converted to base 64 URL, otherwise URL.createObjectURL is used\r\n    useMathMLPolyfill: boolean;             //@deprecated includes MathML polyfills for chrome, edge, etc.\r\n    renderChanges: boolean;                 //enables experimental rendering of document changes (inserions/deletions)\r\n    renderHeaders: boolean;                 //enables headers rendering\r\n    renderFooters: boolean;                 //enables footers rendering\r\n    renderFootnotes: boolean;               //enables footnotes rendering\r\n    renderEndnotes: boolean;                //enables endnotes rendering\r\n    debug: boolean;                         //enables additional logging\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    renderEndnotes: true,\r\n    useBase64URL: false,\r\n    useMathMLPolyfill: false,\r\n    renderChanges: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    // HTML渲染器实例\r\n    const renderer = new HtmlRenderer(window.document);\r\n    // 加载blob对象，根据DocumentParser转换规则，blob对象 => Object对象\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n    // Object对象 => HTML标签\r\n    await renderer.render(doc, bodyContainer, styleContainer, ops);\r\n\r\n    return doc;\r\n}\r\n// TODO DOM元素在内存中，渲染错位\r\nexport async function docx2html(data: Blob | any, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n    const doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n\r\n    return renderer.renderFragment(doc, styleContainer, ops);\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import { WordDocument } from './word-document';\r\nimport {\r\n    DomType,\r\n    WmlTable,\r\n    IDomNumbering,\r\n    WmlHyperlink,\r\n    IDomImage,\r\n    OpenXmlElement,\r\n    WmlTableColumn,\r\n    WmlTableCell,\r\n    WmlText,\r\n    WmlSymbol,\r\n    WmlBreak,\r\n    WmlNoteReference\r\n} from './document/dom';\r\nimport { CommonProperties } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph } from './document/paragraph';\r\nimport { asArray, escapeClassName, isString, keyBy, mergeDeep } from './utils';\r\nimport { computePixelToPoint, updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { FooterHeaderReference, SectionProperties, Section } from './document/section';\r\nimport { WmlRun, RunProperties } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\r\nimport { ThemePart } from './theme/theme-part';\r\nimport { BaseHeaderFooterPart } from './header-footer/parts';\r\nimport { Part } from './common/part';\r\nimport mathMLCSS from \"./mathml.scss\";\r\nimport { VmlElement } from './vml/vml';\r\n\r\nconst ns = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    mathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n    col: number;\r\n    row: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\n// HTML渲染器\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    rootSelector: string;\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n    currentPart: Part = null;\r\n\r\n    tableVerticalMerges: CellVerticalMergeType[] = [];\r\n    currentVerticalMerge: CellVerticalMergeType = null;\r\n    tableCellPositions: CellPos[] = [];\r\n    currentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n    endnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n    defaultTabSize: string;\r\n    // 当前制表位\r\n    currentTabs: any[] = [];\r\n    tabsTimeout: any = 0;\r\n\r\n    constructor(public htmlDocument: Document) {\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML标签\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param bodyContainer HTML生成容器\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n\r\n    async render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // styleContainer== null，styleContainer = bodyContainer\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n        // HTML生成容器，清空所有HTML元素\r\n        removeAllElements(bodyContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            bodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(bodyContainer, sectionElements);\r\n        }\r\n\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n    }\r\n\r\n    /**\r\n     * Object对象 => HTML字符串\r\n     *\r\n     * @param document word文档Object对象\r\n     * @param styleContainer CSS样式生成容器\r\n     * @param options 渲染配置选项\r\n     */\r\n    async renderFragment(document: WordDocument, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        // class类前缀\r\n        this.className = options.className;\r\n        // 根元素\r\n        this.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n        // 文档CSS样式\r\n        this.styleMap = null;\r\n        // 生成代码片段实例\r\n        const template = window.document.createElement('template');\r\n        // CSS样式生成容器，清空所有CSS样式\r\n        removeAllElements(styleContainer);\r\n\r\n        // 添加注释\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        // 添加默认CSS样式\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        // 数学公式CSS样式\r\n        if (!window.MathMLElement && options.useMathMLPolyfill) {\r\n            appendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n            styleContainer.appendChild(createStyleElement(mathMLCSS));\r\n        }\r\n        // 主题CSS样式\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n\r\n        // 文档默认CSS样式，包含表格、列表、段落、字体，样式存在继承顺序\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n\r\n        // 多级列表样式\r\n        if (document.numberingPart) {\r\n            this.processNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n        // 字体列表CSS样式\r\n        if (!options.ignoreFonts && document.fontTablePart) {\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n        }\r\n        // 生成脚注部分的Map\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n        // 生成尾注部分的Map\r\n        if (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n        // 文档设置\r\n        if (document.settingsPart) {\r\n            this.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n        }\r\n        // 主文档--section内容\r\n        let sectionElements = await this.renderSections(document.documentPart.body);\r\n        if (this.options.inWrapper) {\r\n            template.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(template, sectionElements);\r\n        }\r\n        // 刷新制表符\r\n        this.refreshTabStops();\r\n\r\n        return template.innerHTML;\r\n    }\r\n\r\n    // 文档CSS主题样式\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    // 字体列表CSS样式\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement | DocumentFragment) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n                    this.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 计算className，小写，默认前缀：\"docx_\"\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n    }\r\n\r\n    // 处理样式继承\r\n    processStyles(styles: IDomStyle[]) {\r\n        //\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n        // 遍历base_on关系,合并样式\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            let baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                // 深度合并\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n                    if (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n                    } else {\r\n                        style.styles.push({ ...baseValues, values: { ...baseValues.values } });\r\n                    }\r\n                }\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    processNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 递归明确元素parent父级关系\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (let e of element.children) {\r\n                e.parent = element;\r\n                // 判断类型\r\n                if (e.type == DomType.Table) {\r\n                    // 渲染表格\r\n                    this.processTable(e);\r\n                } else {\r\n                    // 递归渲染\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表格style样式\r\n    processTable(table: WmlTable) {\r\n        for (let r of table.children) {\r\n            for (let c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 复制CSS样式\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input) {\r\n            return output;\r\n        }\r\n        if (output == null) {\r\n            output = {};\r\n        }\r\n        if (attrs == null) {\r\n            attrs = Object.getOwnPropertyNames(input);\r\n        }\r\n\r\n        for (let key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // 创建Page Section\r\n    createSection(className: string, props: SectionProperties) {\r\n        let elem = this.createElement(\"section\", { className });\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = props.pageMargins.left;\r\n                elem.style.paddingRight = props.pageMargins.right;\r\n                elem.style.paddingTop = props.pageMargins.top;\r\n                elem.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = props.pageSize.width;\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = props.pageSize.height;\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    // 生成Page Section\r\n    async renderSections(document: DocumentElement): Promise<HTMLElement[]> {\r\n        const result = [];\r\n        // 生成页面parent父级关系\r\n        this.processElement(document);\r\n        // 根据options.breakPages，判断是否分页\r\n        let sections: Section[];\r\n        if (this.options.breakPages) {\r\n            // 根据section切分页面\r\n            sections = this.splitBySection(document.children);\r\n        } else {\r\n            // 不分页则，只有一个section\r\n            sections = [{ sectProps: document.props, elements: document.children }];\r\n        }\r\n\r\n        let prevProps = null;\r\n        // 遍历生成每一个section\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n            const section = sections[i];\r\n            const props = section.sectProps || document.props;\r\n            // 根据sectProps，创建section\r\n            const sectionElement = this.createSection(this.className, props);\r\n            // 给section添加style样式\r\n            this.renderStyleValues(document.cssStyle, sectionElement);\r\n            // 渲染页眉\r\n            if (this.options.renderHeaders) {\r\n                await this.renderHeaderFooter(props.headerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n            // 渲染Page内容\r\n            let contentElement = this.createElement(\"article\");\r\n            await this.renderElements(section.elements, contentElement);\r\n            sectionElement.appendChild(contentElement);\r\n            // 渲染脚注\r\n            if (this.options.renderFootnotes) {\r\n                await this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n            }\r\n            // 渲染尾注\r\n            if (this.options.renderEndnotes && i == l - 1) {\r\n                await this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n            }\r\n            // 渲染页脚\r\n            if (this.options.renderFooters) {\r\n                await this.renderHeaderFooter(props.footerRefs, props, result.length, prevProps != props, sectionElement);\r\n            }\r\n\r\n            result.push(sectionElement);\r\n            prevProps = props;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 渲染页眉/页脚\r\n    async renderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\r\n        if (!refs) return;\r\n        // 查找奇数偶数的ref指向\r\n        let ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        // 查找ref对应的part部分\r\n        let part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n            this.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n\r\n            await this.renderElements([part.rootElement], into);\r\n            this.currentPart = null;\r\n        }\r\n    }\r\n\r\n    // 判断是否存在分页元素\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        // 分页符、换行符、分栏符\r\n        if (elem.type != DomType.Break) {\r\n            return false;\r\n        }\r\n        // 默认以lastRenderedPageBreak作为分页依据\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n        }\r\n        // 分页符\r\n        if ((elem as WmlBreak).break === \"page\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // 根据section切分页面\r\n    splitBySection(elements: OpenXmlElement[]): Section[] {\r\n        // 当前操作section，elements数组包含子元素\r\n        let current_section = { sectProps: null, elements: [] };\r\n        // 切分出的所有sections\r\n        let sections = [current_section];\r\n\r\n        for (let elem of elements) {\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性，代表分节符\r\n                let sectProps = p.sectionProps;\r\n\r\n                /*\r\n                    检测段落是否默认存在强制分页符\r\n                */\r\n\r\n                // 查找内置默认段落样式\r\n                const default_paragraph_style = this.findStyle(p.styleName);\r\n\r\n                // 段落内置样式之前存在强制分页符\r\n                if (default_paragraph_style?.paragraphProps?.pageBreakBefore) {\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = { sectProps: null, elements: [] };\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n            }\r\n\r\n            // 添加elem进入当前操作section\r\n            current_section.elements.push(elem);\r\n\r\n            /* 段落基本结构：paragraph => run => text... */\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n                // 节属性\r\n                let sectProps = p.sectionProps;\r\n                // 段落部分Break索引\r\n                let pBreakIndex = -1;\r\n                // Run部分Break索引\r\n                let rBreakIndex = -1;\r\n\r\n                // 查询段落中Break索引\r\n                if (p.children) {\r\n                    // 计算段落Break索引\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        // 计算Run Break索引\r\n                        rBreakIndex = r.children?.findIndex((t: OpenXmlElement) => {\r\n                            // 分页符、换行符、分栏符\r\n                            if (t.type != DomType.Break) {\r\n                                return false;\r\n                            }\r\n                            // 默认忽略lastRenderedPageBreak，\r\n                            if ((t as WmlBreak).break == \"lastRenderedPageBreak\") {\r\n                                // 判断前一个p段落，\r\n                                // 如果含有分页符、分节符，那它们一定位于上一个section，\r\n                                // 如果前一个段落是普通段落，则代表文字过多超过一页，需要自动分页\r\n                                return current_section.elements.length > 2 || !this.options.ignoreLastRenderedPageBreak;\r\n                            }\r\n                            // 分页符\r\n                            if ((t as WmlBreak).break === \"page\") {\r\n                                return true;\r\n                            }\r\n                        });\r\n                        rBreakIndex = rBreakIndex ?? -1\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n\r\n                // 段落中存在节属性sectProps/段落Break索引\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    // 保存当前section的sectionProps\r\n                    current_section.sectProps = sectProps;\r\n                    // 重置新的section\r\n                    current_section = { sectProps: null, elements: [] };\r\n                    // 添加新section\r\n                    sections.push(current_section);\r\n                }\r\n\r\n                // 根据段落Break索引，拆分Run部分\r\n                if (pBreakIndex != -1) {\r\n                    // 即将拆分的Run部分\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    // 是否需要拆分Run\r\n                    let is_split = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || is_split) {\r\n                        // 原始的Run\r\n                        let origin_run = p.children;\r\n                        // 切出Break索引后面的Run，创建新段落\r\n                        let new_paragraph = { ...p, children: origin_run.slice(pBreakIndex) };\r\n                        // 保存Break索引前面的Run\r\n                        p.children = origin_run.slice(0, pBreakIndex);\r\n                        // 添加新段落\r\n                        current_section.elements.push(new_paragraph);\r\n\r\n                        if (is_split) {\r\n                            // Run下面原始的元素\r\n                            let origin_elements = breakRun.children;\r\n                            // 切出Run Break索引前面的元素，创建新Run\r\n                            let newRun = { ...breakRun, children: origin_elements.slice(0, rBreakIndex) };\r\n                            // 将新Run放入上一个section的段落\r\n                            p.children.push(newRun);\r\n                            // 切出Run Break索引后面的元素\r\n                            breakRun.children = origin_elements.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // TODO elem元素是表格，拆分section\r\n            if (elem.type === DomType.Table) {\r\n                // console.log(elem)\r\n            }\r\n        }\r\n\r\n        // 处理所有section的section_props\r\n        let currentSectProps = null;\r\n        // 倒序\r\n        for (let i = sections.length - 1; i >= 0; i--) {\r\n\r\n            if (sections[i].sectProps == null) {\r\n                sections[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = sections[i].sectProps\r\n            }\r\n        }\r\n        console.log(sections)\r\n        return sections;\r\n    }\r\n\r\n    // 生成父级容器\r\n    renderWrapper(children: HTMLElement[]) {\r\n        return this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\r\n    }\r\n\r\n    // 渲染默认样式\r\n    renderDefaultStyle() {\r\n        let c = this.className;\r\n        let styleText = `\r\n\t\t\t.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n\t\t\t.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n\t\t\t.${c} { color: black; hyphens: auto; }\r\n\t\t\tsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\n\t\t\tsection.${c}>article { margin-bottom: auto; z-index: 1; }\r\n\t\t\tsection.${c}>footer { z-index: 1; }\r\n\t\t\t.${c} table { border-collapse: collapse; }\r\n\t\t\t.${c} table td, .${c} table th { vertical-align: top; }\r\n\t\t\t.${c} p { margin: 0pt; min-height: 1em; }\r\n\t\t\t.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n\t\t\t.${c} a { color: inherit; text-decoration: inherit; }\r\n\t\t`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n\r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement | DocumentFragment) {\r\n        let styleText = \"\";\r\n        let resetCounters = [];\r\n\r\n        for (let num of numberings) {\r\n            let selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            let listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    let text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            } else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n                const counterReset = counter + \" \" + (num.start - 1);\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counterReset\r\n                    });\r\n                }\r\n                // reset all level counters with start value\r\n                resetCounters.push(counterReset);\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            } else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (resetCounters.length > 0) {\r\n            styleText += this.styleToString(this.rootSelector, {\r\n                \"counter-reset\": resetCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        let styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            let subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                let linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n                //TODO temporary disable modificators until test it well\r\n                let selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\r\n\r\n                if (style.target != subStyle.target)\r\n                    selector += ` ${subStyle.target}`;\r\n\r\n                if (defautStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // 渲染脚注/尾注\r\n    async renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, parent: HTMLElement) {\r\n        let notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            let children = await this.renderElements(notes);\r\n            let result = this.createElement(\"ol\", null, children);\r\n            parent.appendChild(result);\r\n        }\r\n    }\r\n\r\n    async renderElement(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                return this.renderParagraph(elem as WmlParagraph);\r\n\r\n            case DomType.BookmarkStart:\r\n                return this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n            case DomType.BookmarkEnd:\r\n                return null; //ignore bookmark end\r\n\r\n            case DomType.Run:\r\n                return this.renderRun(elem as WmlRun);\r\n\r\n            case DomType.Table:\r\n                return this.renderTable(elem);\r\n\r\n            case DomType.Row:\r\n                return this.renderTableRow(elem);\r\n\r\n            case DomType.Cell:\r\n                return this.renderTableCell(elem);\r\n\r\n            case DomType.Hyperlink:\r\n                return this.renderHyperlink(elem);\r\n\r\n            case DomType.Drawing:\r\n                return this.renderDrawing(elem);\r\n\r\n            case DomType.Image:\r\n                return await this.renderImage(elem as IDomImage);\r\n\r\n            case DomType.Text:\r\n                return this.renderText(elem as WmlText);\r\n\r\n            case DomType.DeletedText:\r\n                return this.renderDeletedText(elem as WmlText);\r\n\r\n            case DomType.Tab:\r\n                return this.renderTab(elem);\r\n\r\n            case DomType.Symbol:\r\n                return this.renderSymbol(elem as WmlSymbol);\r\n\r\n            case DomType.Break:\r\n                return this.renderBreak(elem as WmlBreak);\r\n\r\n            case DomType.Footer:\r\n                return this.renderContainer(elem, \"footer\");\r\n\r\n            case DomType.Header:\r\n                // 修复绝对定位bug\r\n                elem.children[0].cssStyle = { ...elem.children[0].cssStyle, position: \"relative\" };\r\n                return this.renderContainer(elem, \"header\");\r\n\r\n            case DomType.Footnote:\r\n            case DomType.Endnote:\r\n                return this.renderContainer(elem, \"li\");\r\n\r\n            case DomType.FootnoteReference:\r\n                return this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.EndnoteReference:\r\n                return this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n            case DomType.NoBreakHyphen:\r\n                return this.createElement(\"wbr\");\r\n\r\n            case DomType.VmlPicture:\r\n                return this.renderVmlPicture(elem);\r\n\r\n            case DomType.VmlElement:\r\n                return this.renderVmlElement(elem as VmlElement);\r\n\r\n            case DomType.MmlMath:\r\n                return this.renderContainerNS(elem, ns.mathML, \"math\", { xmlns: ns.mathML });\r\n\r\n            case DomType.MmlMathParagraph:\r\n                return this.renderContainer(elem, \"span\");\r\n\r\n            case DomType.MmlFraction:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n            case DomType.MmlNumerator:\r\n            case DomType.MmlDenominator:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlRadical:\r\n                return this.renderMmlRadical(elem);\r\n\r\n            case DomType.MmlDegree:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlSuperscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n            case DomType.MmlSubscript:\r\n                return this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n            case DomType.MmlBase:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n            case DomType.MmlSuperArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlSubArgument:\r\n                return this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n            case DomType.MmlDelimiter:\r\n                return this.renderMmlDelimiter(elem);\r\n\r\n            case DomType.MmlRun:\r\n                return this.renderMmlRun(elem);\r\n\r\n            case DomType.MmlNary:\r\n                return this.renderMmlNary(elem);\r\n\r\n            case DomType.MmlEquationArray:\r\n                return this.renderMllList(elem);\r\n\r\n            case DomType.Inserted:\r\n                return this.renderInserted(elem);\r\n\r\n            case DomType.Deleted:\r\n                return this.renderDeleted(elem);\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    async renderChildren(elem: OpenXmlElement, into?: Element): Promise<Node[]> {\r\n        return await this.renderElements(elem.children, into);\r\n    }\r\n\r\n    // 渲染元素，深度可达到2层级\r\n    async renderElements(elems: OpenXmlElement[], into?: Element): Promise<Node[]> {\r\n        if (elems == null) {\r\n            return null;\r\n        }\r\n\r\n        let result: Node[] = [];\r\n\r\n        for (let i = 0; i < elems.length; i++) {\r\n            let element = await this.renderElement(elems[i]);\r\n\r\n            if (element) {\r\n                result.push(element as Node);\r\n            }\r\n        }\r\n\r\n        if (into) {\r\n            appendChildren(into, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n        return this.createElement(tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n        return createElementNS(ns, tagName, props, await this.renderChildren(elem));\r\n    }\r\n\r\n    async renderParagraph(elem: WmlParagraph) {\r\n        let result = this.createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n        elem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderCommonProperties(result.style, elem);\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            result.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    async renderHyperlink(elem: WmlHyperlink) {\r\n        let result = this.createElement(\"a\");\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.href) {\r\n            result.href = elem.href;\r\n        } else if (elem.id) {\r\n            const rel = this.document.documentPart.rels\r\n                .find(it => it.id == elem.id && it.targetMode === \"External\");\r\n            result.href = rel?.target;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderDrawing(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderImage(elem: IDomImage) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            result.src = await this.document.loadDocumentImage(elem.src, this.currentPart)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderDeletedText(elem: WmlText) {\r\n        return this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.break == \"textWrapping\") {\r\n            return this.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    async renderInserted(elem: OpenXmlElement): Promise<Node | Node[]> {\r\n        if (this.options.renderChanges) {\r\n            return await this.renderContainer(elem, \"ins\");\r\n        }\r\n\r\n        return await this.renderChildren(elem);\r\n    }\r\n\r\n    async renderDeleted(elem: OpenXmlElement): Promise<Node> {\r\n        if (this.options.renderChanges) {\r\n            return await this.renderContainer(elem, \"del\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        let span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderEndnoteReference(elem: WmlNoteReference) {\r\n        let result = this.createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentEndnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    // 渲染制表符\r\n    renderTab(elem: OpenXmlElement) {\r\n        let tabSpan = this.createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n            tabSpan.className = this.tabStopClass();\r\n            let stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n            this.currentTabs.push({ stops, span: tabSpan });\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        let result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    async renderRun(elem: WmlRun) {\r\n        if (elem.fieldRun)\r\n            return null;\r\n\r\n        const result = this.createElement(\"span\");\r\n\r\n        if (elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.verticalAlign) {\r\n            const wrapper = this.createElement(elem.verticalAlign as any);\r\n            await this.renderChildren(elem, wrapper);\r\n            result.appendChild(wrapper);\r\n        } else {\r\n            await this.renderChildren(elem, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        this.tableCellPositions.push(this.currentCellPosition);\r\n        this.tableVerticalMerges.push(this.currentVerticalMerge);\r\n        this.currentVerticalMerge = {};\r\n        this.currentCellPosition = { col: 0, row: 0 };\r\n\r\n        if (elem.columns) {\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n        this.currentCellPosition = this.tableCellPositions.pop();\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[]) {\r\n        let result = this.createElement(\"colgroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n\r\n            if (col.width)\r\n                colElem.style.width = col.width;\r\n\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableRow(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.currentCellPosition.col = 0;\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        this.currentCellPosition.row++;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n        const key = this.currentCellPosition.col;\r\n\r\n        if (elem.verticalMerge) {\r\n            if (elem.verticalMerge == \"restart\") {\r\n                this.currentVerticalMerge[key] = result;\r\n                result.rowSpan = 1;\r\n            } else if (this.currentVerticalMerge[key]) {\r\n                this.currentVerticalMerge[key].rowSpan += 1;\r\n                result.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.currentVerticalMerge[key] = null;\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        await this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span)\r\n            result.colSpan = elem.span;\r\n\r\n        this.currentCellPosition.col += result.colSpan;\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderVmlPicture(elem: OpenXmlElement) {\r\n        let result = createElement(\"div\");\r\n        await this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    async renderVmlElement(elem: VmlElement): Promise<SVGElement> {\r\n        let container = createSvgElement(\"svg\");\r\n\r\n        container.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n        const result = await this.renderVmlChildElement(elem);\r\n\r\n        if (elem.imageHref?.id) {\r\n            this.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n                .then(x => result.setAttribute(\"href\", x));\r\n        }\r\n\r\n        container.appendChild(result);\r\n\r\n        requestAnimationFrame(() => {\r\n            const bb = (container.firstElementChild as any).getBBox();\r\n\r\n            container.setAttribute(\"width\", `${Math.ceil(bb.x + bb.width)}`);\r\n            container.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n        });\r\n\r\n        return container;\r\n    }\r\n\r\n    async renderVmlChildElement(elem: VmlElement): Promise<any> {\r\n        const result = createSvgElement(elem.tagName as any);\r\n        Object.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n        for (let child of elem.children) {\r\n            if (child.type == DomType.VmlElement) {\r\n                result.appendChild(await this.renderVmlChildElement(child as VmlElement));\r\n            } else {\r\n                result.appendChild(...asArray(await this.renderElement(child as any)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async renderMmlRadical(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n        if (elem.props?.hideDegree) {\r\n            return createElementNS(ns.mathML, \"msqrt\", null, await this.renderElements([base]));\r\n        }\r\n\r\n        const degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n        return createElementNS(ns.mathML, \"mroot\", null, await this.renderElements([base, degree]));\r\n    }\r\n\r\n    async renderMmlDelimiter(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n        children.push(...await this.renderElements(elem.children));\r\n        children.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlNary(elem: OpenXmlElement): Promise<HTMLElement> {\r\n        const children = [];\r\n        const grouped = keyBy(elem.children, x => x.type);\r\n\r\n        const sup = grouped[DomType.MmlSuperArgument];\r\n        const sub = grouped[DomType.MmlSubArgument];\r\n        const supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sup))) : null;\r\n        const subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(await this.renderElement(sub))) : null;\r\n\r\n        if (elem.props?.char) {\r\n            const charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props.char]);\r\n\r\n            if (supElem || subElem) {\r\n                children.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n            } else if (supElem) {\r\n                children.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n            } else if (subElem) {\r\n                children.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n            } else {\r\n                children.push(charElem);\r\n            }\r\n        }\r\n        let base_children = await this.renderElements(grouped[DomType.MmlBase].children);\r\n        children.push(...base_children);\r\n\r\n        return createElementNS(ns.mathML, \"mrow\", null, children);\r\n    }\r\n\r\n    async renderMmlRun(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"ms\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        await this.renderChildren(elem, result);\r\n        return result;\r\n    }\r\n\r\n    async renderMllList(elem: OpenXmlElement) {\r\n        const result = createElementNS(ns.mathML, \"mtable\");\r\n        // 添加class类\r\n        this.renderClass(elem, result);\r\n        // 渲染style样式\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        const childern = await this.renderChildren(elem);\r\n\r\n        for (let child of childern) {\r\n            result.appendChild(createElementNS(ns.mathML, \"mtr\", null,\r\n                [createElementNS(ns.mathML, \"mtd\", null, [child])]\r\n            ));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        for (let k in style) {\r\n            if (k.startsWith(\"$\")) {\r\n                ouput.setAttribute(k.slice(1), style[k]);\r\n            } else {\r\n                ouput.style[k] = style[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加class类名\r\n    renderClass(input: OpenXmlElement, ouput: HTMLElement) {\r\n        if (input.className)\r\n            ouput.className = input.className;\r\n\r\n        if (input.styleName) {\r\n            ouput.classList.add(this.processStyleName(input.styleName));\r\n        }\r\n    }\r\n\r\n    // 查找内置默认style样式\r\n    findStyle(styleName: string) {\r\n        return styleName && this.styleMap?.[styleName];\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    tabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            if (key.startsWith('$'))\r\n                continue;\r\n\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        let result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        let mapping = {\r\n            none: \"none\",\r\n            bullet: \"disc\",\r\n            decimal: \"decimal\",\r\n            lowerLetter: \"lower-alpha\",\r\n            upperLetter: \"upper-alpha\",\r\n            lowerRoman: \"lower-roman\",\r\n            upperRoman: \"upper-roman\",\r\n            decimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n            // ordinal: \"\", // 1st, 2nd, 3rd,...\r\n            // ordinalText: \"\", //First, Second, Third, ...\r\n            // cardinalText: \"\", //One,Two Three,...\r\n            // numberInDash: \"\", //-1-,-2-,-3-, ...\r\n            // hex: \"upper-hexadecimal\",\r\n            aiueo: \"katakana\",\r\n            aiueoFullWidth: \"katakana\",\r\n            chineseCounting: \"simp-chinese-informal\",\r\n            chineseCountingThousand: \"simp-chinese-informal\",\r\n            chineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n            chosung: \"hangul-consonant\",\r\n            ideographDigital: \"cjk-ideographic\",\r\n            ideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n            ideographLegalTraditional: \"trad-chinese-formal\",\r\n            ideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n            iroha: \"katakana-iroha\",\r\n            irohaFullWidth: \"katakana-iroha\",\r\n            japaneseCounting: \"japanese-informal\",\r\n            japaneseDigitalTenThousand: \"cjk-decimal\",\r\n            japaneseLegal: \"japanese-formal\",\r\n            thaiNumbers: \"thai\",\r\n            koreanCounting: \"korean-hangul-formal\",\r\n            koreanDigital: \"korean-hangul-formal\",\r\n            koreanDigital2: \"korean-hanja-informal\",\r\n            hebrew1: \"hebrew\",\r\n            hebrew2: \"hebrew\",\r\n            hindiNumbers: \"devanagari\",\r\n            ganada: \"hangul\",\r\n            taiwaneseCounting: \"cjk-ideographic\",\r\n            taiwaneseCountingThousand: \"cjk-ideographic\",\r\n            taiwaneseDigital: \"cjk-decimal\",\r\n        };\r\n\r\n        return mapping[format] ?? format;\r\n    }\r\n\r\n    // 刷新tab制表符\r\n    refreshTabStops() {\r\n        if (!this.options.experimental) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this.tabsTimeout);\r\n\r\n        this.tabsTimeout = setTimeout(() => {\r\n            const pixelToPoint = computePixelToPoint();\r\n\r\n            for (let tab of this.currentTabs) {\r\n                updateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    createElement = createElement;\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): HTMLElementTagNameMap[T] {\r\n    return createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\r\n    tagName: T,\r\n    props?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\r\n    children?: ChildType[]\r\n): SVGElementTagNameMap[T] {\r\n    return createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n    let result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n    Object.assign(result, props);\r\n    children && appendChildren(result, children);\r\n    return result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\n// 插入子元素\r\nfunction appendChildren(parent: Element | DocumentFragment, children: (Node | string)[]) {\r\n    children.forEach(child => {\r\n        parent.appendChild(isString(child) ? document.createTextNode(child) : child)\r\n    });\r\n}\r\n\r\n// 创建style标签\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", { innerHTML: cssText });\r\n}\r\n\r\n// 插入注释\r\nfunction appendComment(elem: HTMLElement | DocumentFragment, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    let parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}\r\n","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertBoolean } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n\r\n    xmlString = removeUTF8BOM(xmlString);\r\n\r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");\r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attrs(elem: Element) {\r\n        return Array.from(elem.attributes);\r\n    }\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    hexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n// 对象深度合并\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n// 转化为数组\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}","import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\n// word文件解析器：blob对象 => Object对象\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\t// 解压缩word文件转换为Office Open XML\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t345: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","id","toString","cssWithMappingToString","list","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","OpenXmlPackage","constructor","_zip","xmlParser","XmlParser","get","path","files","startsWith","substr","normalizePath","update","file","static","input","zip","JSZip","loadAsync","save","type","generateAsync","load","async","Promise","resolve","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","loadRelationships","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","e","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","textContent","Text","text","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","ascii","ascii_theme","themeValue","east_Asia","east_Asia_theme","complex_script","complex_script_theme","high_ansi","high_ansi_theme","fonts_value","Set","filter","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","Px","mul","unit","LineHeight","VmlEmu","usage","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","position","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","useMathMLPolyfill","renderChanges","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","renderFragment","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","svg","mathML","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","isString","createTextNode","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","renderDefaultStyle","MathMLElement","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","processNumberings","domNumberings","renderNumbering","fontTablePart","renderFontTable","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","entries","colors","styleToString","fontsPart","ref","loadFont","then","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","sectProps","prevProps","l","currentFootnoteIds","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current_section","p","default_paragraph_style","pBreakIndex","rBreakIndex","findIndex","t","breakRun","is_split","origin_run","new_paragraph","origin_elements","newRun","currentSectProps","log","styleText","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","subStyle","noteIds","notesMap","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMllList","renderInserted","renderDeleted","elems","renderElement","renderChildren","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","container","setAttribute","cssStyleText","renderVmlChildElement","imageHref","requestAnimationFrame","bb","getBBox","Math","ceil","y","asArray","base","degree","grouped","sup","sub","supElem","subElem","charElem","base_children","childern","ouput","lvl","selectors","numformat","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","textDecoration","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","prefix","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","sources","source","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","getter","definition","o","defineProperty","enumerable","obj","prop","prototype","call","toStringTag","baseURI","self","location"],"sourceRoot":""}